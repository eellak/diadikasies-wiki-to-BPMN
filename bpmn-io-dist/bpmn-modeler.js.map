{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/Modeler.js","lib/NavigatedViewer.js","lib/Viewer.js","lib/core/index.js","lib/draw/BpmnRenderer.js","lib/draw/PathMap.js","lib/draw/index.js","lib/features/auto-resize/BpmnAutoResize.js","lib/features/auto-resize/BpmnAutoResizeProvider.js","lib/features/auto-resize/index.js","lib/features/context-pad/ContextPadProvider.js","lib/features/context-pad/index.js","lib/features/copy-paste/BpmnCopyPaste.js","lib/features/copy-paste/index.js","lib/features/distribute-elements/BpmnDistributeElements.js","lib/features/distribute-elements/index.js","lib/features/editor-actions/BpmnEditorActions.js","lib/features/editor-actions/index.js","lib/features/global-connect/BpmnGlobalConnect.js","lib/features/global-connect/index.js","lib/features/keyboard/BpmnKeyBindings.js","lib/features/keyboard/index.js","lib/features/label-editing/LabelEditingPreview.js","lib/features/label-editing/LabelEditingProvider.js","lib/features/label-editing/LabelUtil.js","lib/features/label-editing/cmd/UpdateLabelHandler.js","lib/features/label-editing/index.js","lib/features/modeling/BpmnFactory.js","lib/features/modeling/BpmnLayouter.js","lib/features/modeling/BpmnUpdater.js","lib/features/modeling/ElementFactory.js","lib/features/modeling/Modeling.js","lib/features/modeling/behavior/AppendBehavior.js","lib/features/modeling/behavior/CopyPasteBehavior.js","lib/features/modeling/behavior/CreateBoundaryEventBehavior.js","lib/features/modeling/behavior/CreateDataObjectBehavior.js","lib/features/modeling/behavior/CreateParticipantBehavior.js","lib/features/modeling/behavior/DataInputAssociationBehavior.js","lib/features/modeling/behavior/DeleteLaneBehavior.js","lib/features/modeling/behavior/DropOnFlowBehavior.js","lib/features/modeling/behavior/ImportDockingFix.js","lib/features/modeling/behavior/LabelBehavior.js","lib/features/modeling/behavior/ModelingFeedback.js","lib/features/modeling/behavior/RemoveElementBehavior.js","lib/features/modeling/behavior/RemoveParticipantBehavior.js","lib/features/modeling/behavior/ReplaceConnectionBehavior.js","lib/features/modeling/behavior/ReplaceElementBehaviour.js","lib/features/modeling/behavior/ResizeLaneBehavior.js","lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js","lib/features/modeling/behavior/UnclaimIdBehavior.js","lib/features/modeling/behavior/UnsetDefaultFlowBehavior.js","lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js","lib/features/modeling/behavior/index.js","lib/features/modeling/behavior/util/GeometricUtil.js","lib/features/modeling/behavior/util/LabelLayoutUtil.js","lib/features/modeling/behavior/util/LineAttachmentUtil.js","lib/features/modeling/behavior/util/LineIntersect.js","lib/features/modeling/cmd/AddLaneHandler.js","lib/features/modeling/cmd/IdClaimHandler.js","lib/features/modeling/cmd/ResizeLaneHandler.js","lib/features/modeling/cmd/SetColorHandler.js","lib/features/modeling/cmd/SplitLaneHandler.js","lib/features/modeling/cmd/UpdateCanvasRootHandler.js","lib/features/modeling/cmd/UpdateFlowNodeRefsHandler.js","lib/features/modeling/cmd/UpdatePropertiesHandler.js","lib/features/modeling/index.js","lib/features/modeling/util/LaneUtil.js","lib/features/modeling/util/ModelingUtil.js","lib/features/ordering/BpmnOrderingProvider.js","lib/features/ordering/index.js","lib/features/palette/PaletteProvider.js","lib/features/palette/index.js","lib/features/popup-menu/ReplaceMenuProvider.js","lib/features/popup-menu/index.js","lib/features/popup-menu/util/TypeUtil.js","lib/features/replace-preview/BpmnReplacePreview.js","lib/features/replace-preview/index.js","lib/features/replace/BpmnReplace.js","lib/features/replace/ReplaceOptions.js","lib/features/replace/index.js","lib/features/rules/BpmnRules.js","lib/features/rules/index.js","lib/features/search/BpmnSearchProvider.js","lib/features/search/index.js","lib/features/snapping/BpmnSnapping.js","lib/features/snapping/BpmnSnappingUtil.js","lib/features/snapping/index.js","lib/import/BpmnImporter.js","lib/import/BpmnTreeWalker.js","lib/import/Importer.js","lib/import/Util.js","lib/import/index.js","lib/util/DiUtil.js","lib/util/LabelUtil.js","lib/util/ModelUtil.js","lib/util/PoweredByUtil.js","lib/util/model/ModelCloneHelper.js","lib/util/model/ModelCloneUtils.js","node_modules/bpmn-moddle/index.js","node_modules/bpmn-moddle/lib/bpmn-moddle.js","node_modules/bpmn-moddle/lib/simple.js","node_modules/bpmn-moddle/resources/bpmn-io/json/bioc.json","node_modules/bpmn-moddle/resources/bpmn/json/bpmn.json","node_modules/bpmn-moddle/resources/bpmn/json/bpmndi.json","node_modules/bpmn-moddle/resources/bpmn/json/dc.json","node_modules/bpmn-moddle/resources/bpmn/json/di.json","node_modules/component-classes/index.js","node_modules/component-closest/index.js","node_modules/component-delegate/index.js","node_modules/component-event/index.js","node_modules/component-indexof/index.js","node_modules/component-matches-selector/index.js","node_modules/component-query/index.js","node_modules/diagram-js-direct-editing/index.js","node_modules/diagram-js-direct-editing/lib/DirectEditing.js","node_modules/diagram-js-direct-editing/lib/TextBox.js","node_modules/diagram-js/index.js","node_modules/diagram-js/lib/Diagram.js","node_modules/diagram-js/lib/command/CommandInterceptor.js","node_modules/diagram-js/lib/command/CommandStack.js","node_modules/diagram-js/lib/command/index.js","node_modules/diagram-js/lib/core/Canvas.js","node_modules/diagram-js/lib/core/ElementFactory.js","node_modules/diagram-js/lib/core/ElementRegistry.js","node_modules/diagram-js/lib/core/EventBus.js","node_modules/diagram-js/lib/core/GraphicsFactory.js","node_modules/diagram-js/lib/core/index.js","node_modules/diagram-js/lib/draw/BaseRenderer.js","node_modules/diagram-js/lib/draw/DefaultRenderer.js","node_modules/diagram-js/lib/draw/Styles.js","node_modules/diagram-js/lib/draw/index.js","node_modules/diagram-js/lib/features/align-elements/AlignElements.js","node_modules/diagram-js/lib/features/align-elements/index.js","node_modules/diagram-js/lib/features/attach-support/AttachSupport.js","node_modules/diagram-js/lib/features/attach-support/index.js","node_modules/diagram-js/lib/features/auto-resize/AutoResize.js","node_modules/diagram-js/lib/features/auto-resize/AutoResizeProvider.js","node_modules/diagram-js/lib/features/auto-scroll/AutoScroll.js","node_modules/diagram-js/lib/features/auto-scroll/index.js","node_modules/diagram-js/lib/features/bendpoints/BendpointMove.js","node_modules/diagram-js/lib/features/bendpoints/BendpointSnapping.js","node_modules/diagram-js/lib/features/bendpoints/BendpointUtil.js","node_modules/diagram-js/lib/features/bendpoints/Bendpoints.js","node_modules/diagram-js/lib/features/bendpoints/ConnectionSegmentMove.js","node_modules/diagram-js/lib/features/bendpoints/index.js","node_modules/diagram-js/lib/features/change-support/ChangeSupport.js","node_modules/diagram-js/lib/features/change-support/index.js","node_modules/diagram-js/lib/features/clipboard/Clipboard.js","node_modules/diagram-js/lib/features/clipboard/index.js","node_modules/diagram-js/lib/features/connect/Connect.js","node_modules/diagram-js/lib/features/connect/index.js","node_modules/diagram-js/lib/features/context-pad/ContextPad.js","node_modules/diagram-js/lib/features/context-pad/index.js","node_modules/diagram-js/lib/features/copy-paste/CopyPaste.js","node_modules/diagram-js/lib/features/copy-paste/index.js","node_modules/diagram-js/lib/features/create/Create.js","node_modules/diagram-js/lib/features/create/index.js","node_modules/diagram-js/lib/features/distribute-elements/DistributeElements.js","node_modules/diagram-js/lib/features/distribute-elements/index.js","node_modules/diagram-js/lib/features/dragging/Dragging.js","node_modules/diagram-js/lib/features/dragging/HoverFix.js","node_modules/diagram-js/lib/features/dragging/index.js","node_modules/diagram-js/lib/features/editor-actions/EditorActions.js","node_modules/diagram-js/lib/features/editor-actions/index.js","node_modules/diagram-js/lib/features/global-connect/GlobalConnect.js","node_modules/diagram-js/lib/features/global-connect/index.js","node_modules/diagram-js/lib/features/hand-tool/HandTool.js","node_modules/diagram-js/lib/features/hand-tool/index.js","node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js","node_modules/diagram-js/lib/features/interaction-events/index.js","node_modules/diagram-js/lib/features/keyboard/Keyboard.js","node_modules/diagram-js/lib/features/keyboard/index.js","node_modules/diagram-js/lib/features/label-support/LabelSupport.js","node_modules/diagram-js/lib/features/label-support/index.js","node_modules/diagram-js/lib/features/lasso-tool/LassoTool.js","node_modules/diagram-js/lib/features/lasso-tool/index.js","node_modules/diagram-js/lib/features/modeling/Modeling.js","node_modules/diagram-js/lib/features/modeling/cmd/AlignElementsHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/AppendShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/CreateConnectionHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/CreateLabelHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/CreateShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/DeleteElementsHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/DeleteShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/DistributeElementsHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/LayoutConnectionHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/MoveConnectionHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/MoveElementsHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/MoveShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/NoopHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/PasteHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/ReconnectConnectionHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/ReplaceShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/ResizeShapeHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/SpaceToolHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/ToggleShapeCollapseHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/UpdateAttachmentHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/UpdateWaypointsHandler.js","node_modules/diagram-js/lib/features/modeling/cmd/helper/AnchorsHelper.js","node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveHelper.js","node_modules/diagram-js/lib/features/mouse-tracking/MouseTracking.js","node_modules/diagram-js/lib/features/mouse-tracking/index.js","node_modules/diagram-js/lib/features/move/Move.js","node_modules/diagram-js/lib/features/move/MovePreview.js","node_modules/diagram-js/lib/features/move/index.js","node_modules/diagram-js/lib/features/ordering/OrderingProvider.js","node_modules/diagram-js/lib/features/outline/Outline.js","node_modules/diagram-js/lib/features/outline/index.js","node_modules/diagram-js/lib/features/overlays/Overlays.js","node_modules/diagram-js/lib/features/overlays/index.js","node_modules/diagram-js/lib/features/palette/Palette.js","node_modules/diagram-js/lib/features/palette/index.js","node_modules/diagram-js/lib/features/popup-menu/PopupMenu.js","node_modules/diagram-js/lib/features/popup-menu/index.js","node_modules/diagram-js/lib/features/preview-support/PreviewSupport.js","node_modules/diagram-js/lib/features/preview-support/index.js","node_modules/diagram-js/lib/features/replace/Replace.js","node_modules/diagram-js/lib/features/replace/index.js","node_modules/diagram-js/lib/features/resize/Resize.js","node_modules/diagram-js/lib/features/resize/ResizeHandles.js","node_modules/diagram-js/lib/features/resize/ResizePreview.js","node_modules/diagram-js/lib/features/resize/ResizeUtil.js","node_modules/diagram-js/lib/features/resize/index.js","node_modules/diagram-js/lib/features/rules/RuleProvider.js","node_modules/diagram-js/lib/features/rules/Rules.js","node_modules/diagram-js/lib/features/rules/index.js","node_modules/diagram-js/lib/features/search-pad/SearchPad.js","node_modules/diagram-js/lib/features/search-pad/index.js","node_modules/diagram-js/lib/features/selection/Selection.js","node_modules/diagram-js/lib/features/selection/SelectionBehavior.js","node_modules/diagram-js/lib/features/selection/SelectionVisuals.js","node_modules/diagram-js/lib/features/selection/index.js","node_modules/diagram-js/lib/features/snapping/SnapContext.js","node_modules/diagram-js/lib/features/snapping/SnapUtil.js","node_modules/diagram-js/lib/features/snapping/Snapping.js","node_modules/diagram-js/lib/features/space-tool/SpaceTool.js","node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js","node_modules/diagram-js/lib/features/space-tool/SpaceUtil.js","node_modules/diagram-js/lib/features/space-tool/index.js","node_modules/diagram-js/lib/features/tool-manager/ToolManager.js","node_modules/diagram-js/lib/features/tool-manager/index.js","node_modules/diagram-js/lib/features/tooltips/Tooltips.js","node_modules/diagram-js/lib/features/tooltips/index.js","node_modules/diagram-js/lib/features/touch/TouchFix.js","node_modules/diagram-js/lib/features/touch/TouchInteractionEvents.js","node_modules/diagram-js/lib/features/touch/index.js","node_modules/diagram-js/lib/i18n/translate/index.js","node_modules/diagram-js/lib/i18n/translate/translate.js","node_modules/diagram-js/lib/layout/BaseLayouter.js","node_modules/diagram-js/lib/layout/CroppingConnectionDocking.js","node_modules/diagram-js/lib/layout/LayoutUtil.js","node_modules/diagram-js/lib/layout/ManhattanLayout.js","node_modules/diagram-js/lib/model/index.js","node_modules/diagram-js/lib/navigation/movecanvas/MoveCanvas.js","node_modules/diagram-js/lib/navigation/movecanvas/index.js","node_modules/diagram-js/lib/navigation/touch/index.js","node_modules/diagram-js/lib/navigation/zoomscroll/ZoomScroll.js","node_modules/diagram-js/lib/navigation/zoomscroll/ZoomUtil.js","node_modules/diagram-js/lib/navigation/zoomscroll/index.js","node_modules/diagram-js/lib/util/AttachUtil.js","node_modules/diagram-js/lib/util/ClickTrap.js","node_modules/diagram-js/lib/util/Collections.js","node_modules/diagram-js/lib/util/CopyPasteUtil.js","node_modules/diagram-js/lib/util/Cursor.js","node_modules/diagram-js/lib/util/Elements.js","node_modules/diagram-js/lib/util/Event.js","node_modules/diagram-js/lib/util/Geometry.js","node_modules/diagram-js/lib/util/GraphicsUtil.js","node_modules/diagram-js/lib/util/IdGenerator.js","node_modules/diagram-js/lib/util/Intersection.js","node_modules/diagram-js/lib/util/LineIntersection.js","node_modules/diagram-js/lib/util/Math.js","node_modules/diagram-js/lib/util/Mouse.js","node_modules/diagram-js/lib/util/Platform.js","node_modules/diagram-js/lib/util/PositionUtil.js","node_modules/diagram-js/lib/util/Removal.js","node_modules/diagram-js/lib/util/RenderUtil.js","node_modules/diagram-js/lib/util/SvgTransformUtil.js","node_modules/diagram-js/lib/util/Text.js","node_modules/didi/lib/annotation.js","node_modules/didi/lib/index.js","node_modules/didi/lib/injector.js","node_modules/didi/lib/module.js","node_modules/domify/index.js","node_modules/hammerjs/hammer.js","node_modules/hat/index.js","node_modules/ids/index.js","node_modules/inherits/inherits_browser.js","node_modules/lodash/array/findIndex.js","node_modules/lodash/array/flatten.js","node_modules/lodash/array/intersection.js","node_modules/lodash/array/last.js","node_modules/lodash/array/union.js","node_modules/lodash/array/uniq.js","node_modules/lodash/array/unique.js","node_modules/lodash/array/without.js","node_modules/lodash/chain/lodash.js","node_modules/lodash/collection/any.js","node_modules/lodash/collection/every.js","node_modules/lodash/collection/filter.js","node_modules/lodash/collection/find.js","node_modules/lodash/collection/forEach.js","node_modules/lodash/collection/groupBy.js","node_modules/lodash/collection/map.js","node_modules/lodash/collection/reduce.js","node_modules/lodash/collection/reject.js","node_modules/lodash/collection/size.js","node_modules/lodash/collection/some.js","node_modules/lodash/collection/sortBy.js","node_modules/lodash/date/now.js","node_modules/lodash/function/bind.js","node_modules/lodash/function/debounce.js","node_modules/lodash/function/defer.js","node_modules/lodash/function/restParam.js","node_modules/lodash/internal/LazyWrapper.js","node_modules/lodash/internal/LodashWrapper.js","node_modules/lodash/internal/SetCache.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/arrayEvery.js","node_modules/lodash/internal/arrayFilter.js","node_modules/lodash/internal/arrayMap.js","node_modules/lodash/internal/arrayPush.js","node_modules/lodash/internal/arrayReduce.js","node_modules/lodash/internal/arraySome.js","node_modules/lodash/internal/assignWith.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseCallback.js","node_modules/lodash/internal/baseClone.js","node_modules/lodash/internal/baseCompareAscending.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseCreate.js","node_modules/lodash/internal/baseDelay.js","node_modules/lodash/internal/baseDifference.js","node_modules/lodash/internal/baseEach.js","node_modules/lodash/internal/baseEvery.js","node_modules/lodash/internal/baseFilter.js","node_modules/lodash/internal/baseFind.js","node_modules/lodash/internal/baseFindIndex.js","node_modules/lodash/internal/baseFlatten.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForIn.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseGet.js","node_modules/lodash/internal/baseIndexOf.js","node_modules/lodash/internal/baseIsEqual.js","node_modules/lodash/internal/baseIsEqualDeep.js","node_modules/lodash/internal/baseIsMatch.js","node_modules/lodash/internal/baseLodash.js","node_modules/lodash/internal/baseMap.js","node_modules/lodash/internal/baseMatches.js","node_modules/lodash/internal/baseMatchesProperty.js","node_modules/lodash/internal/baseMerge.js","node_modules/lodash/internal/baseMergeDeep.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/basePropertyDeep.js","node_modules/lodash/internal/baseReduce.js","node_modules/lodash/internal/baseSetData.js","node_modules/lodash/internal/baseSlice.js","node_modules/lodash/internal/baseSome.js","node_modules/lodash/internal/baseSortBy.js","node_modules/lodash/internal/baseToString.js","node_modules/lodash/internal/baseUniq.js","node_modules/lodash/internal/baseValues.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/bufferClone.js","node_modules/lodash/internal/cacheIndexOf.js","node_modules/lodash/internal/cachePush.js","node_modules/lodash/internal/compareAscending.js","node_modules/lodash/internal/composeArgs.js","node_modules/lodash/internal/composeArgsRight.js","node_modules/lodash/internal/createAggregator.js","node_modules/lodash/internal/createAssigner.js","node_modules/lodash/internal/createBaseEach.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/createBindWrapper.js","node_modules/lodash/internal/createCache.js","node_modules/lodash/internal/createCtorWrapper.js","node_modules/lodash/internal/createFind.js","node_modules/lodash/internal/createFindIndex.js","node_modules/lodash/internal/createForEach.js","node_modules/lodash/internal/createHybridWrapper.js","node_modules/lodash/internal/createPartialWrapper.js","node_modules/lodash/internal/createReduce.js","node_modules/lodash/internal/createWrapper.js","node_modules/lodash/internal/equalArrays.js","node_modules/lodash/internal/equalByTag.js","node_modules/lodash/internal/equalObjects.js","node_modules/lodash/internal/getData.js","node_modules/lodash/internal/getFuncName.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getMatchData.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/indexOfNaN.js","node_modules/lodash/internal/initCloneArray.js","node_modules/lodash/internal/initCloneByTag.js","node_modules/lodash/internal/initCloneObject.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isKey.js","node_modules/lodash/internal/isLaziable.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/isStrictComparable.js","node_modules/lodash/internal/mergeData.js","node_modules/lodash/internal/metaMap.js","node_modules/lodash/internal/pickByArray.js","node_modules/lodash/internal/pickByCallback.js","node_modules/lodash/internal/realNames.js","node_modules/lodash/internal/reorder.js","node_modules/lodash/internal/replaceHolders.js","node_modules/lodash/internal/setData.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/sortedUniq.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/internal/toPath.js","node_modules/lodash/internal/wrapperClone.js","node_modules/lodash/lang/clone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isNumber.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/lang/isPlainObject.js","node_modules/lodash/lang/isString.js","node_modules/lodash/lang/isTypedArray.js","node_modules/lodash/lang/toPlainObject.js","node_modules/lodash/object/assign.js","node_modules/lodash/object/has.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/object/merge.js","node_modules/lodash/object/omit.js","node_modules/lodash/object/pairs.js","node_modules/lodash/object/pick.js","node_modules/lodash/object/transform.js","node_modules/lodash/object/values.js","node_modules/lodash/utility/identity.js","node_modules/lodash/utility/noop.js","node_modules/lodash/utility/property.js","node_modules/min-dom/lib/attr.js","node_modules/min-dom/lib/classes.js","node_modules/min-dom/lib/clear.js","node_modules/min-dom/lib/closest.js","node_modules/min-dom/lib/delegate.js","node_modules/min-dom/lib/domify.js","node_modules/min-dom/lib/event.js","node_modules/min-dom/lib/matches.js","node_modules/min-dom/lib/query.js","node_modules/min-dom/lib/remove.js","node_modules/moddle-xml/lib/common.js","node_modules/moddle-xml/lib/reader.js","node_modules/moddle-xml/lib/writer.js","node_modules/moddle/index.js","node_modules/moddle/lib/base.js","node_modules/moddle/lib/descriptor-builder.js","node_modules/moddle/lib/factory.js","node_modules/moddle/lib/moddle.js","node_modules/moddle/lib/ns.js","node_modules/moddle/lib/properties.js","node_modules/moddle/lib/registry.js","node_modules/moddle/lib/types.js","node_modules/object-refs/index.js","node_modules/object-refs/lib/collection.js","node_modules/object-refs/lib/refs.js","node_modules/sax/lib/sax.js","node_modules/tiny-stack/lib/tiny-stack.js","node_modules/tiny-svg/lib/append.js","node_modules/tiny-svg/lib/appendTo.js","node_modules/tiny-svg/lib/attr.js","node_modules/tiny-svg/lib/classes.js","node_modules/tiny-svg/lib/clear.js","node_modules/tiny-svg/lib/clone.js","node_modules/tiny-svg/lib/create.js","node_modules/tiny-svg/lib/geometry.js","node_modules/tiny-svg/lib/innerSVG.js","node_modules/tiny-svg/lib/remove.js","node_modules/tiny-svg/lib/transform.js","node_modules/tiny-svg/lib/util/ensureImported.js","node_modules/tiny-svg/lib/util/ns.js","node_modules/tiny-svg/lib/util/parse.js","node_modules/tiny-svg/lib/util/serialize.js"],"names":[],"mappingshvfdA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACntllIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxppHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjprvrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhnbdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjrnxvyhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/fbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvzbxrtfjjxcvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvnzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtcvzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzppxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1SA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjzjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzriBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlbtrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjpijzjzxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbzzUA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClh3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhnljGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvlxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACptBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnzhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtqBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbxnrzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACntCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar Ids = require(288);\r\n\r\nvar Viewer = require(3);\r\n\r\nvar NavigatedViewer = require(2);\r\n\r\nvar initialDiagram =\r\n  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\r\n  '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\r\n                    'xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" ' +\r\n                    'xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" ' +\r\n                    'xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" ' +\r\n                    'targetNamespace=\"http://bpmn.io/schema/bpmn\" ' +\r\n                    'id=\"Definitions_1\">' +\r\n    '<bpmn:process id=\"Process_1\" isExecutable=\"false\">' +\r\n      '<bpmn:startEvent id=\"StartEvent_1\"/>' +\r\n    '</bpmn:process>' +\r\n    '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">' +\r\n      '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">' +\r\n        '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">' +\r\n          '<dc:Bounds height=\"36.0\" width=\"36.0\" x=\"173.0\" y=\"102.0\"/>' +\r\n        '</bpmndi:BPMNShape>' +\r\n      '</bpmndi:BPMNPlane>' +\r\n    '</bpmndi:BPMNDiagram>' +\r\n  '</bpmn:definitions>';\r\n\r\n\r\n/**\r\n * A modeler for BPMN 2.0 diagrams.\r\n *\r\n *\r\n * ## Extending the Modeler\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var bpmnModeler = new Modeler({ additionalModules: [ extensionModule ] });\r\n * bpmnModeler.importXML(...);\r\n * ```\r\n *\r\n *\r\n * ## Customizing / Replacing Components\r\n *\r\n * You can replace individual diagram components by redefining them in override modules.\r\n * This works for all components, including those defined in the core.\r\n *\r\n * Pass in override modules via the `options.additionalModules` flag like this:\r\n *\r\n * ```javascript\r\n * function CustomContextPadProvider(contextPad) {\r\n *\r\n *   contextPad.registerProvider(this);\r\n *\r\n *   this.getContextPadEntries = function(element) {\r\n *     // no entries, effectively disable the context pad\r\n *     return {};\r\n *   };\r\n * }\r\n *\r\n * CustomContextPadProvider.$inject = [ 'contextPad' ];\r\n *\r\n * var overrideModule = {\r\n *   contextPadProvider: [ 'type', CustomContextPadProvider ]\r\n * };\r\n *\r\n * var bpmnModeler = new Modeler({ additionalModules: [ overrideModule ]});\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nfunction Modeler(options) {\r\n  Viewer.call(this, options);\r\n\r\n  // hook ID collection into the modeler\r\n  this.on('import.parse.complete', function(event) {\r\n    if (!event.error) {\r\n      this._collectIds(event.definitions, event.context);\r\n    }\r\n  }, this);\r\n\r\n  this.on('diagram.destroy', function() {\r\n    this.moddle.ids.clear();\r\n  }, this);\r\n}\r\n\r\ninherits(Modeler, Viewer);\r\n\r\nmodule.exports = Modeler;\r\n\r\nmodule.exports.Viewer = Viewer;\r\n\r\nmodule.exports.NavigatedViewer = NavigatedViewer;\r\n\r\n/**\r\n * Create a new diagram to start modeling.\r\n *\r\n * @param {Function} [done]\r\n */\r\nModeler.prototype.createDiagram = function(done) {\r\n  return this.importXML(initialDiagram, done);\r\n};\r\n\r\n/**\r\n * Create a moddle instance, attaching ids to it.\r\n *\r\n * @param {Object} options\r\n */\r\nModeler.prototype._createModdle = function(options) {\r\n  var moddle = Viewer.prototype._createModdle.call(this, options);\r\n\r\n  // attach ids to moddle to be able to track\r\n  // and validated ids in the BPMN 2.0 XML document\r\n  // tree\r\n  moddle.ids = new Ids([ 32, 36, 1 ]);\r\n\r\n  return moddle;\r\n};\r\n\r\n/**\r\n * Collect ids processed during parsing of the\r\n * definitions object.\r\n *\r\n * @param {ModdleElement} definitions\r\n * @param {Context} context\r\n */\r\nModeler.prototype._collectIds = function(definitions, context) {\r\n\r\n  var moddle = definitions.$model,\r\n      ids = moddle.ids,\r\n      id;\r\n\r\n  // remove references from previous import\r\n  ids.clear();\r\n\r\n  for (id in context.elementsById) {\r\n    ids.claim(id, context.elementsById[id]);\r\n  }\r\n};\r\n\r\n\r\nModeler.prototype._interactionModules = [\r\n  // non-modeling components\r\n  require(256),\r\n  require(257),\r\n  require(260)\r\n];\r\n\r\nModeler.prototype._modelingModules = [\r\n  // modeling components\r\n  require(139),\r\n  require(145),\r\n  require(206),\r\n  require(224),\r\n  require(10),\r\n  require(18),\r\n  require(12),\r\n  require(22),\r\n  require(27),\r\n  require(66),\r\n  require(72),\r\n  require(77),\r\n  require(87)\r\n];\r\n\r\n\r\n// modules the modeler is composed of\r\n//\r\n// - viewer modules\r\n// - interaction modules\r\n// - modeling modules\r\n\r\nModeler.prototype._modules = [].concat(\r\n  Modeler.prototype._modules,\r\n  Modeler.prototype._interactionModules,\r\n  Modeler.prototype._modelingModules);\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar Viewer = require(3);\r\n\r\n\r\n/**\r\n * A viewer that includes mouse navigation facilities\r\n *\r\n * @param {Object} options\r\n */\r\nfunction NavigatedViewer(options) {\r\n  Viewer.call(this, options);\r\n}\r\n\r\ninherits(NavigatedViewer, Viewer);\r\n\r\nmodule.exports = NavigatedViewer;\r\n\r\nNavigatedViewer.prototype._navigationModules = [\r\n  require(260),\r\n  require(256)\r\n];\r\n\r\nNavigatedViewer.prototype._modules = [].concat(\r\n  NavigatedViewer.prototype._modules,\r\n  NavigatedViewer.prototype._navigationModules);","/**\r\n * The code in the <project-logo></project-logo> area\r\n * must not be changed.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n'use strict';\r\n\r\nvar assign = require(431),\r\n    omit = require(436),\r\n    isNumber = require(425);\r\n\r\nvar domify = require(449),\r\n    domQuery = require(452),\r\n    domRemove = require(453);\r\n\r\nvar innerSVG = require(479);\r\n\r\nvar Diagram = require(117),\r\n    BpmnModdle = require(99);\r\n\r\n\r\nvar inherits = require(289);\r\n\r\nvar Importer = require(90);\r\n\r\n\r\nfunction checkValidationError(err) {\r\n\r\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\r\n  // (in case he or the exporting tool did not get that right)\r\n\r\n  var pattern = /unparsable content <([^>]+)> detected([/s/S]*)$/;\r\n  var match = pattern.exec(err.message);\r\n\r\n  if (match) {\r\n    err.message =\r\n      'unparsable content <' + match[1] + '> detected; ' +\r\n      'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\r\n  }\r\n\r\n  return err;\r\n}\r\n\r\nvar DEFAULT_OPTIONS = {\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'relative'\r\n};\r\n\r\n\r\n/**\r\n * Ensure the passed argument is a proper unit (defaulting to px)\r\n */\r\nfunction ensureUnit(val) {\r\n  return val + (isNumber(val) ? 'px' : '');\r\n}\r\n\r\n/**\r\n * A viewer for BPMN 2.0 diagrams.\r\n *\r\n * Have a look at {@link NavigatedViewer} or {@link Modeler} for bundles that include\r\n * additional features.\r\n *\r\n *\r\n * ## Extending the Viewer\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var bpmnViewer = new Viewer({ additionalModules: [ extensionModule ] });\r\n * bpmnViewer.importXML(...);\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nfunction Viewer(options) {\r\n\r\n  options = assign({}, DEFAULT_OPTIONS, options);\r\n\r\n  this.moddle = this._createModdle(options);\r\n\r\n  this.container = this._createContainer(options);\r\n\r\n  /* <project-logo> */\r\n\r\n  addProjectLogo(this.container);\r\n\r\n  /* </project-logo> */\r\n\r\n  this._init(this.container, this.moddle, options);\r\n}\r\n\r\ninherits(Viewer, Diagram);\r\n\r\nmodule.exports = Viewer;\r\n\r\n\r\n/**\r\n * Parse and render a BPMN 2.0 diagram.\r\n *\r\n * Once finished the viewer reports back the result to the\r\n * provided callback function with (err, warnings).\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During import the viewer will fire life-cycle events:\r\n *\r\n *   * import.parse.start (about to read model from xml)\r\n *   * import.parse.complete (model read; may have worked or not)\r\n *   * import.render.start (graphical import start)\r\n *   * import.render.complete (graphical import finished)\r\n *   * import.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {String} xml the BPMN 2.0 xml\r\n * @param {Function} [done] invoked with (err, warnings=[])\r\n */\r\nViewer.prototype.importXML = function(xml, done) {\r\n\r\n  // done is optional\r\n  done = done || function() {};\r\n\r\n  var self = this;\r\n\r\n  // hook in pre-parse listeners +\r\n  // allow xml manipulation\r\n  xml = this._emit('import.parse.start', { xml: xml }) || xml;\r\n\r\n  this.moddle.fromXML(xml, 'bpmn:Definitions', function(err, definitions, context) {\r\n\r\n    // hook in post parse listeners +\r\n    // allow definitions manipulation\r\n    definitions = self._emit('import.parse.complete', {\r\n      error: err,\r\n      definitions: definitions,\r\n      context: context\r\n    }) || definitions;\r\n\r\n    if (err) {\r\n      err = checkValidationError(err);\r\n\r\n      self._emit('import.done', { error: err });\r\n\r\n      return done(err);\r\n    }\r\n\r\n    var parseWarnings = context.warnings;\r\n\r\n    self.importDefinitions(definitions, function(err, importWarnings) {\r\n      var allWarnings = [].concat(parseWarnings, importWarnings || []);\r\n\r\n      self._emit('import.done', { error: err, warnings: allWarnings });\r\n\r\n      done(err, allWarnings);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Export the currently displayed BPMN 2.0 diagram as\r\n * a BPMN 2.0 XML document.\r\n *\r\n * @param {Object} [options] export options\r\n * @param {Boolean} [options.format=false] output formated XML\r\n * @param {Boolean} [options.preamble=true] output preamble\r\n *\r\n * @param {Function} done invoked with (err, xml)\r\n */\r\nViewer.prototype.saveXML = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var definitions = this.definitions;\r\n\r\n  if (!definitions) {\r\n    return done(new Error('no definitions loaded'));\r\n  }\r\n\r\n  this.moddle.toXML(definitions, options, done);\r\n};\r\n\r\n/**\r\n * Export the currently displayed BPMN 2.0 diagram as\r\n * an SVG image.\r\n *\r\n * @param {Object} [options]\r\n * @param {Function} done invoked with (err, svgStr)\r\n */\r\nViewer.prototype.saveSVG = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var canvas = this.get('canvas');\r\n\r\n  var contentNode = canvas.getDefaultLayer(),\r\n      defsNode = domQuery('defs', canvas._svg);\r\n\r\n  var contents = innerSVG(contentNode),\r\n      defs = (defsNode && defsNode.outerHTML) || '';\r\n\r\n  var bbox = contentNode.getBBox();\r\n\r\n  var svg =\r\n    '<?xml version=\"1.0\" encoding=\"utf-8\"?>/n' +\r\n    '<!-- created with bpmn-js / http://bpmn.io -->/n' +\r\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">/n' +\r\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\r\n         'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\r\n         'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\r\n      defs + contents +\r\n    '</svg>';\r\n\r\n  done(null, svg);\r\n};\r\n\r\n/**\r\n * Get a named diagram service.\r\n *\r\n * @example\r\n *\r\n * var elementRegistry = viewer.get('elementRegistry');\r\n * var startEventShape = elementRegistry.get('StartEvent_1');\r\n *\r\n * @param {String} name\r\n *\r\n * @return {Object} diagram service instance\r\n *\r\n * @method Viewer#get\r\n */\r\n\r\n/**\r\n * Invoke a function in the context of this viewer.\r\n *\r\n * @example\r\n *\r\n * viewer.invoke(function(elementRegistry) {\r\n *   var startEventShape = elementRegistry.get('StartEvent_1');\r\n * });\r\n *\r\n * @param {Function} fn to be invoked\r\n *\r\n * @return {Object} the functions return value\r\n *\r\n * @method Viewer#invoke\r\n */\r\n\r\n/**\r\n * Remove all drawn elements from the viewer.\r\n *\r\n * After calling this method the viewer can still\r\n * be reused for opening another diagram.\r\n *\r\n * @method Viewer#clear\r\n */\r\n\r\nViewer.prototype.importDefinitions = function(definitions, done) {\r\n\r\n  // use try/catch to not swallow synchronous exceptions\r\n  // that may be raised during model parsing\r\n  try {\r\n\r\n    if (this.definitions) {\r\n      // clear existing rendered diagram\r\n      this.clear();\r\n    }\r\n\r\n    // update definitions\r\n    this.definitions = definitions;\r\n\r\n    // perform graphical import\r\n    Importer.importBpmnDiagram(this, definitions, done);\r\n  } catch (e) {\r\n\r\n    // handle synchronous errors\r\n    done(e);\r\n  }\r\n};\r\n\r\nViewer.prototype.getModules = function() {\r\n  return this._modules;\r\n};\r\n\r\n/**\r\n * Destroy the viewer instance and remove all its\r\n * remainders from the document tree.\r\n */\r\nViewer.prototype.destroy = function() {\r\n\r\n  // diagram destroy\r\n  Diagram.prototype.destroy.call(this);\r\n\r\n  // dom detach\r\n  domRemove(this.container);\r\n};\r\n\r\n/**\r\n * Register an event listener\r\n *\r\n * Remove a previously added listener via {@link #off(event, callback)}.\r\n *\r\n * @param {String} event\r\n * @param {Number} [priority]\r\n * @param {Function} callback\r\n * @param {Object} [that]\r\n */\r\nViewer.prototype.on = function(event, priority, callback, target) {\r\n  return this.get('eventBus').on(event, priority, callback, target);\r\n};\r\n\r\n/**\r\n * De-register an event listener\r\n *\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nViewer.prototype.off = function(event, callback) {\r\n  this.get('eventBus').off(event, callback);\r\n};\r\n\r\nViewer.prototype.attachTo = function(parentNode) {\r\n\r\n  if (!parentNode) {\r\n    throw new Error('parentNode required');\r\n  }\r\n\r\n  // ensure we detach from the\r\n  // previous, old parent\r\n  this.detach();\r\n\r\n  // unwrap jQuery if provided\r\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\r\n    parentNode = parentNode.get(0);\r\n  }\r\n\r\n  if (typeof parentNode === 'string') {\r\n    parentNode = domQuery(parentNode);\r\n  }\r\n\r\n  var container = this._container;\r\n\r\n  parentNode.appendChild(container);\r\n\r\n  this._emit('attach', {});\r\n};\r\n\r\nViewer.prototype.detach = function() {\r\n\r\n  var container = this._container,\r\n      parentNode = container.parentNode;\r\n\r\n  if (!parentNode) {\r\n    return;\r\n  }\r\n\r\n  this._emit('detach', {});\r\n\r\n  parentNode.removeChild(container);\r\n};\r\n\r\nViewer.prototype._init = function(container, moddle, options) {\r\n\r\n  this._container = container;\r\n  var baseModules = options.modules || this.getModules(),\r\n      additionalModules = options.additionalModules || [],\r\n      staticModules = [\r\n        {\r\n          bpmnjs: [ 'value', this ],\r\n          moddle: [ 'value', moddle ]\r\n        }\r\n      ];\r\n\r\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\r\n\r\n  var diagramOptions = assign(omit(options, 'additionalModules'), {\r\n    canvas: assign({}, options.canvas, { container: container }),\r\n    modules: diagramModules\r\n  });\r\n\r\n  // invoke diagram constructor\r\n  Diagram.call(this, diagramOptions);\r\n\r\n  if (options && options.container) {\r\n    this.attachTo(options.container);\r\n  }\r\n};\r\n\r\n/**\r\n * Emit an event on the underlying {@link EventBus}\r\n *\r\n * @param  {String} type\r\n * @param  {Object} event\r\n *\r\n * @return {Object} event processing result (if any)\r\n */\r\nViewer.prototype._emit = function(type, event) {\r\n  return this.get('eventBus').fire(type, event);\r\n};\r\n\r\nViewer.prototype._createContainer = function(options) {\r\n\r\n  var container = domify('<div class=\"bjs-container\"></div>');\r\n\r\n  assign(container.style, {\r\n    width: ensureUnit(options.width),\r\n    height: ensureUnit(options.height),\r\n    position: options.position\r\n  });\r\n\r\n  return container;\r\n};\r\n\r\nViewer.prototype._createModdle = function(options) {\r\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\r\n\r\n  return new BpmnModdle(moddleOptions);\r\n};\r\n\r\n\r\n// modules the viewer is composed of\r\nViewer.prototype._modules = [\r\n  require(4),\r\n  require(248),\r\n  require(233),\r\n  require(211)\r\n];\r\n\r\n// default moddle extensions the viewer is composed of\r\nViewer.prototype._moddleExtensions = {};\r\n\r\n/* <project-logo> */\r\n\r\nvar PoweredBy = require(96),\r\n    domEvent = require(450);\r\n\r\n/**\r\n * Adds the project logo to the diagram container as\r\n * required by the bpmn.io license.\r\n *\r\n * @see http://bpmn.io/license\r\n *\r\n * @param {Element} container\r\n */\r\nfunction addProjectLogo(container) {\r\n  var logoData = PoweredBy.BPMNIO_LOGO;\r\n\r\n  var linkMarkup =\r\n    '<a href=\"http://bpmn.io\" ' +\r\n       'target=\"_blank\" ' +\r\n       'class=\"bjs-powered-by\" ' +\r\n       'title=\"Powered by bpmn.io\" ' +\r\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100\">' +\r\n        '<img src=\"data:image/png;base64,' + logoData + '\">' +\r\n    '</a>';\r\n\r\n  var linkElement = domify(linkMarkup);\r\n\r\n  container.appendChild(linkElement);\r\n\r\n  domEvent.bind(linkElement, 'click', function(event) {\r\n    PoweredBy.open();\r\n\r\n    event.preventDefault();\r\n  });\r\n}\r\n\r\n/* </project-logo> */\r\n","module.exports = {\r\n  __depends__: [\r\n    require(7),\r\n    require(92)\r\n  ]\r\n};","'use strict';\r\n\r\nvar inherits = require(289),\r\n    isObject = require(426),\r\n    assign = require(431),\r\n    forEach = require(303),\r\n    every = require(300),\r\n    some = require(309);\r\n\r\nvar BaseRenderer = require(128),\r\n    TextUtil = require(280),\r\n    DiUtil = require(93);\r\n\r\nvar getBusinessObject = require(95).getBusinessObject,\r\n    is = require(95).is;\r\n\r\nvar RenderUtil = require(278);\r\n\r\nvar componentsToPath = RenderUtil.componentsToPath,\r\n    createLine = RenderUtil.createLine;\r\n\r\nvar domQuery = require(452);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477),\r\n    svgClasses = require(474);\r\n\r\nvar rotate = require(279).rotate,\r\n    transform = require(279).transform,\r\n    translate = require(279).translate;\r\n\r\nvar TASK_BORDER_RADIUS = 10;\r\nvar INNER_OUTER_DIST = 3;\r\n\r\nvar LABEL_STYLE = {\r\n  fontFamily: 'Arial, sans-serif',\r\n  fontSize: 12\r\n};\r\n\r\n\r\nfunction BpmnRenderer(eventBus, styles, pathMap, canvas, priority) {\r\n\r\n  BaseRenderer.call(this, eventBus, priority);\r\n\r\n  var textUtil = new TextUtil({\r\n    style: LABEL_STYLE,\r\n    size: { width: 100 }\r\n  });\r\n\r\n  var markers = {};\r\n\r\n  var computeStyle = styles.computeStyle;\r\n\r\n  function addMarker(id, options) {\r\n    var attrs = assign({\r\n      fill: 'black',\r\n      strokeWidth: 1,\r\n      strokeLinecap: 'round',\r\n      strokeDasharray: 'none'\r\n    }, options.attrs);\r\n\r\n    var ref = options.ref || { x: 0, y: 0 };\r\n\r\n    var scale = options.scale || 1;\r\n\r\n    // fix for safari / chrome / firefox bug not correctly\r\n    // resetting stroke dash array\r\n    if (attrs.strokeDasharray === 'none') {\r\n      attrs.strokeDasharray = [10000, 1];\r\n    }\r\n\r\n    var marker = svgCreate('marker');\r\n\r\n    svgAttr(options.element, attrs);\r\n\r\n    svgAppend(marker, options.element);\r\n\r\n    svgAttr(marker, {\r\n      id: id,\r\n      viewBox: '0 0 20 20',\r\n      refX: ref.x,\r\n      refY: ref.y,\r\n      markerWidth: 20 * scale,\r\n      markerHeight: 20 * scale,\r\n      orient: 'auto'\r\n    });\r\n\r\n    var defs = domQuery('defs', canvas._svg);\r\n\r\n    if (!defs) {\r\n      defs = svgCreate('defs');\r\n\r\n      svgAppend(canvas._svg, defs);\r\n    }\r\n\r\n    svgAppend(defs, marker);\r\n\r\n    markers[id] = marker;\r\n  }\r\n\r\n  function marker(type, fill, stroke) {\r\n    var id = type + '-' + fill + '-' + stroke;\r\n\r\n    if (!markers[id]) {\r\n      createMarker(type, fill, stroke);\r\n    }\r\n\r\n    return 'url(#' + id +  ')';\r\n  }\r\n\r\n  function createMarker(type, fill, stroke) {\r\n    var id = type + '-' + fill + '-' + stroke;\r\n\r\n    if (type === 'sequenceflow-end') {\r\n      var sequenceflowEnd = svgCreate('path');\r\n      svgAttr(sequenceflowEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\r\n\r\n      addMarker(id, {\r\n        element: sequenceflowEnd,\r\n        ref: { x: 11, y: 10 },\r\n        scale: 0.5,\r\n        attrs: {\r\n          fill: stroke,\r\n          stroke: stroke\r\n        }\r\n      });\r\n    }\r\n\r\n    if (type === 'messageflow-start') {\r\n      var messageflowStart = svgCreate('circle');\r\n      svgAttr(messageflowStart, { cx: 6, cy: 6, r: 3.5 });\r\n\r\n      addMarker(id, {\r\n        element: messageflowStart,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke\r\n        },\r\n        ref: { x: 6, y: 6 }\r\n      });\r\n    }\r\n\r\n    if (type === 'messageflow-end') {\r\n      var messageflowEnd = svgCreate('path');\r\n      svgAttr(messageflowEnd, { d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z' });\r\n\r\n      addMarker(id, {\r\n        element: messageflowEnd,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke,\r\n          strokeLinecap: 'butt'\r\n        },\r\n        ref: { x: 8.5, y: 5 }\r\n      });\r\n    }\r\n\r\n    if (type === 'association-start') {\r\n      var associationStart = svgCreate('path');\r\n      svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\r\n\r\n      addMarker(id, {\r\n        element: associationStart,\r\n        attrs: {\r\n          fill: 'none',\r\n          stroke: stroke,\r\n          strokeWidth: 1.5\r\n        },\r\n        ref: { x: 1, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'association-end') {\r\n      var associationEnd = svgCreate('path');\r\n      svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\r\n\r\n      addMarker(id, {\r\n        element: associationEnd,\r\n        attrs: {\r\n          fill: 'none',\r\n          stroke: stroke,\r\n          strokeWidth: 1.5\r\n        },\r\n        ref: { x: 12, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'conditional-flow-marker') {\r\n      var conditionalflowMarker = svgCreate('path');\r\n      svgAttr(conditionalflowMarker, { d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z' });\r\n\r\n      addMarker(id, {\r\n        element: conditionalflowMarker,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke\r\n        },\r\n        ref: { x: -1, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'conditional-default-flow-marker') {\r\n      var conditionaldefaultflowMarker = svgCreate('path');\r\n      svgAttr(conditionaldefaultflowMarker, { d: 'M 6 4 L 10 16' });\r\n\r\n      addMarker(id, {\r\n        element: conditionaldefaultflowMarker,\r\n        attrs: {\r\n          stroke: stroke\r\n        },\r\n        ref: { x: 0, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n  }\r\n\r\n  function drawCircle(parentGfx, width, height, offset, attrs) {\r\n\r\n    if (isObject(offset)) {\r\n      attrs = offset;\r\n      offset = 0;\r\n    }\r\n\r\n    offset = offset || 0;\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var cx = width / 2,\r\n        cy = height / 2;\r\n\r\n    var circle = svgCreate('circle');\r\n    svgAttr(circle, {\r\n      cx: cx,\r\n      cy: cy,\r\n      r: Math.round((width + height) / 4 - offset)\r\n    });\r\n    svgAttr(circle, attrs);\r\n\r\n    svgAppend(parentGfx, circle);\r\n\r\n    return circle;\r\n  }\r\n\r\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\r\n\r\n    if (isObject(offset)) {\r\n      attrs = offset;\r\n      offset = 0;\r\n    }\r\n\r\n    offset = offset || 0;\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var rect = svgCreate('rect');\r\n    svgAttr(rect, {\r\n      x: offset,\r\n      y: offset,\r\n      width: width - offset * 2,\r\n      height: height - offset * 2,\r\n      rx: r,\r\n      ry: r\r\n    });\r\n    svgAttr(rect, attrs);\r\n\r\n    svgAppend(parentGfx, rect);\r\n\r\n    return rect;\r\n  }\r\n\r\n  function drawDiamond(parentGfx, width, height, attrs) {\r\n\r\n    var x_2 = width / 2;\r\n    var y_2 = height / 2;\r\n\r\n    var points = [{ x: x_2, y: 0 }, { x: width, y: y_2 }, { x: x_2, y: height }, { x: 0, y: y_2 }];\r\n\r\n    var pointsString = points.map(function(point) {\r\n      return point.x + ',' + point.y;\r\n    }).join(' ');\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var polygon = svgCreate('polygon');\r\n    svgAttr(polygon, {\r\n      points: pointsString\r\n    });\r\n    svgAttr(polygon, attrs);\r\n\r\n    svgAppend(parentGfx, polygon);\r\n\r\n    return polygon;\r\n  }\r\n\r\n  function drawLine(parentGfx, waypoints, attrs) {\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'none'\r\n    });\r\n\r\n    var line = createLine(waypoints, attrs);\r\n\r\n    svgAppend(parentGfx, line);\r\n\r\n    return line;\r\n  }\r\n\r\n  function drawPath(parentGfx, d, attrs) {\r\n\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      strokeWidth: 2,\r\n      stroke: 'black'\r\n    });\r\n\r\n    var path = svgCreate('path');\r\n    svgAttr(path, { d: d });\r\n    svgAttr(path, attrs);\r\n\r\n    svgAppend(parentGfx, path);\r\n\r\n    return path;\r\n  }\r\n\r\n  function drawMarker(type, parentGfx, path, attrs) {\r\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\r\n  }\r\n\r\n  function as(type) {\r\n    return function(parentGfx, element) {\r\n      return handlers[type](parentGfx, element);\r\n    };\r\n  }\r\n\r\n  function renderer(type) {\r\n    return handlers[type];\r\n  }\r\n\r\n  function renderEventContent(element, parentGfx) {\r\n\r\n    var event = getSemantic(element);\r\n    var isThrowing = isThrowEvent(event);\r\n\r\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\r\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\r\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\r\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\r\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\r\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: false })) {\r\n      return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\r\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: true })) {\r\n      return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\r\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\r\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\r\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\r\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\r\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\r\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function renderLabel(parentGfx, label, options) {\r\n    var text = textUtil.createText(label || '', options);\r\n    svgClasses(text).add('djs-label');\r\n    svgAppend(parentGfx, text);\r\n\r\n    return text;\r\n  }\r\n\r\n  function renderEmbeddedLabel(parentGfx, element, align) {\r\n    var semantic = getSemantic(element);\r\n\r\n    return renderLabel(parentGfx, semantic.name, {\r\n      box: element,\r\n      align: align,\r\n      padding: 5,\r\n      style: {\r\n        fill: getStrokeColor(element)\r\n      }\r\n    });\r\n  }\r\n\r\n  function renderExternalLabel(parentGfx, element) {\r\n    var semantic = getSemantic(element);\r\n    var box = {\r\n      width: 90,\r\n      height: 30,\r\n      x: element.width / 2 + element.x,\r\n      y: element.height / 2 + element.y\r\n    };\r\n\r\n    return renderLabel(parentGfx, semantic.name, {\r\n      box: box,\r\n      fitBox: true,\r\n      style: { fontSize: '11px' }\r\n    });\r\n  }\r\n\r\n  function renderLaneLabel(parentGfx, text, element) {\r\n    var textBox = renderLabel(parentGfx, text, {\r\n      box: { height: 30, width: element.height },\r\n      align: 'center-middle',\r\n      style: {\r\n        fill: getStrokeColor(element)\r\n      }\r\n    });\r\n\r\n    var top = -1 * element.height;\r\n\r\n    transform(textBox, 0, -top, 270);\r\n  }\r\n\r\n  function createPathFromConnection(connection) {\r\n    var waypoints = connection.waypoints;\r\n\r\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\r\n    for (var i = 1; i < waypoints.length; i++) {\r\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\r\n    }\r\n    return pathData;\r\n  }\r\n\r\n  var handlers = this.handlers = {\r\n    'bpmn:Event': function(parentGfx, element, attrs) {\r\n      return drawCircle(parentGfx, element.width, element.height, attrs);\r\n    },\r\n    'bpmn:StartEvent': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (!semantic.isInterrupting) {\r\n        attrs = {\r\n          strokeDasharray: '6',\r\n          strokeLinecap: 'round'\r\n        };\r\n      }\r\n\r\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:MessageEventDefinition': function(parentGfx, element, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\r\n        xScaleFactor: 0.9,\r\n        yScaleFactor: 0.9,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.235,\r\n          my: 0.315\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(element) : getFillColor(element);\r\n      var stroke = isThrowing ? getFillColor(element) : getStrokeColor(element);\r\n\r\n      var messagePath = drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: stroke\r\n      });\r\n\r\n      return messagePath;\r\n    },\r\n    'bpmn:TimerEventDefinition': function(parentGfx, element) {\r\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\r\n        strokeWidth: 2,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\r\n        xScaleFactor: 0.75,\r\n        yScaleFactor: 0.75,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.5\r\n        }\r\n      });\r\n\r\n      drawPath(parentGfx, pathData, {\r\n        strokeWidth: 2,\r\n        strokeLinecap: 'square',\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      for (var i = 0;i < 12;i++) {\r\n\r\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\r\n          xScaleFactor: 0.75,\r\n          yScaleFactor: 0.75,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.5,\r\n            my: 0.5\r\n          }\r\n        });\r\n\r\n        var width = element.width / 2;\r\n        var height = element.height / 2;\r\n\r\n        drawPath(parentGfx, linePathData, {\r\n          strokeWidth: 1,\r\n          strokeLinecap: 'square',\r\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')',\r\n          stroke: getStrokeColor(element)\r\n        });\r\n      }\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event) {\r\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.222\r\n        }\r\n      });\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:LinkEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.57,\r\n          my: 0.263\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\r\n        xScaleFactor: 1.1,\r\n        yScaleFactor: 1.1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.2,\r\n          my: 0.722\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:CancelEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\r\n        xScaleFactor: 1.0,\r\n        yScaleFactor: 1.0,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.638,\r\n          my: -0.055\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? 'black' : 'none';\r\n\r\n      var path = drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill\r\n      });\r\n\r\n      rotate(path, 45);\r\n\r\n      return path;\r\n    },\r\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.22,\r\n          my: 0.5\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:SignalEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\r\n        xScaleFactor: 0.9,\r\n        yScaleFactor: 0.9,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\r\n        xScaleFactor: 1.1,\r\n        yScaleFactor: 1.1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.222,\r\n          my: 0.36\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? 'black' : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill\r\n      });\r\n    },\r\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event) {\r\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\r\n        xScaleFactor: 1.2,\r\n        yScaleFactor: 1.2,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.458,\r\n          my: 0.194\r\n        }\r\n      });\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(event),\r\n        stroke: getStrokeColor(event)\r\n      });\r\n    },\r\n    'bpmn:EndEvent': function(parentGfx, element) {\r\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\r\n        strokeWidth: 4,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      renderEventContent(element, parentGfx, true);\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:TerminateEventDefinition': function(parentGfx, element) {\r\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\r\n        strokeWidth: 4,\r\n        fill: getStrokeColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:IntermediateEvent': function(parentGfx, element) {\r\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      /* inner */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, 'none'),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\r\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\r\n\r\n    'bpmn:Activity': function(parentGfx, element, attrs) {\r\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\r\n    },\r\n\r\n    'bpmn:Task': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\r\n\r\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\r\n      attachTaskMarkers(parentGfx, element);\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:ServiceTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\r\n        abspos: {\r\n          x: 12,\r\n          y: 18\r\n        }\r\n      });\r\n\r\n      /* service bg */ drawPath(parentGfx, pathDataBG, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\r\n        abspos: {\r\n          x: 17.2,\r\n          y: 18\r\n        }\r\n      });\r\n\r\n      /* service fill */ drawPath(parentGfx, fillPathData, {\r\n        strokeWidth: 0,\r\n        fill: getFillColor(element)\r\n      });\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\r\n        abspos: {\r\n          x: 17,\r\n          y: 22\r\n        }\r\n      });\r\n\r\n      /* service */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:UserTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var x = 15;\r\n      var y = 12;\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 0.5,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user2 path */ drawPath(parentGfx, pathData2, {\r\n        strokeWidth: 0.5,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user3 path */ drawPath(parentGfx, pathData3, {\r\n        strokeWidth: 0.5,\r\n        fill: getStrokeColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ManualTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\r\n        abspos: {\r\n          x: 17,\r\n          y: 15\r\n        }\r\n      });\r\n\r\n      /* manual path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 0.5, // 0.25,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:SendTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: 21,\r\n        containerHeight: 14,\r\n        position: {\r\n          mx: 0.285,\r\n          my: 0.357\r\n        }\r\n      });\r\n\r\n      /* send path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element),\r\n        stroke: getFillColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ReceiveTask' : function(parentGfx, element) {\r\n      var semantic = getSemantic(element);\r\n\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n      var pathData;\r\n\r\n      if (semantic.instantiate) {\r\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, { strokeWidth: 1 });\r\n\r\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\r\n          abspos: {\r\n            x: 7.77,\r\n            y: 9.52\r\n          }\r\n        });\r\n      } else {\r\n\r\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\r\n          xScaleFactor: 0.9,\r\n          yScaleFactor: 0.9,\r\n          containerWidth: 21,\r\n          containerHeight: 14,\r\n          position: {\r\n            mx: 0.3,\r\n            my: 0.4\r\n          }\r\n        });\r\n      }\r\n\r\n      /* receive path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ScriptTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\r\n        abspos: {\r\n          x: 15,\r\n          y: 20\r\n        }\r\n      });\r\n\r\n      /* script path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:BusinessRuleTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\r\n        abspos: {\r\n          x: 8,\r\n          y: 8\r\n        }\r\n      });\r\n\r\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\r\n      svgAttr(businessHeaderPath, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, '#aaaaaa'),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\r\n        abspos: {\r\n          x: 8,\r\n          y: 8\r\n        }\r\n      });\r\n\r\n      var businessPath = drawPath(parentGfx, headerData);\r\n      svgAttr(businessPath, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:SubProcess': function(parentGfx, element, attrs) {\r\n      attrs = assign({\r\n        fillOpacity: 0.95,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      }, attrs);\r\n\r\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\r\n\r\n      var expanded = DiUtil.isExpanded(element);\r\n\r\n      var isEventSubProcess = DiUtil.isEventSubProcess(element);\r\n\r\n      if (isEventSubProcess) {\r\n        svgAttr(rect, {\r\n          strokeDasharray: '1,2'\r\n        });\r\n      }\r\n\r\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\r\n\r\n      if (expanded) {\r\n        attachTaskMarkers(parentGfx, element);\r\n      } else {\r\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\r\n      }\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:AdHocSubProcess': function(parentGfx, element) {\r\n      return renderer('bpmn:SubProcess')(parentGfx, element);\r\n    },\r\n    'bpmn:Transaction': function(parentGfx, element) {\r\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\r\n\r\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      /* inner path */ drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:CallActivity': function(parentGfx, element) {\r\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\r\n        strokeWidth: 5\r\n      });\r\n    },\r\n    'bpmn:Participant': function(parentGfx, element) {\r\n\r\n      var attrs = {\r\n        fillOpacity: 0.95,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\r\n\r\n      var expandedPool = DiUtil.isExpanded(element);\r\n\r\n      if (expandedPool) {\r\n        drawLine(parentGfx, [\r\n          { x: 30, y: 0 },\r\n          { x: 30, y: element.height }\r\n        ], {\r\n          stroke: getStrokeColor(element)\r\n        });\r\n        var text = getSemantic(element).name;\r\n        renderLaneLabel(parentGfx, text, element);\r\n      } else {\r\n        // Collapsed pool draw text inline\r\n        var text2 = getSemantic(element).name;\r\n        renderLabel(parentGfx, text2, {\r\n          box: element, align: 'center-middle',\r\n          style: {\r\n            fill: getStrokeColor(element)\r\n          }\r\n        });\r\n      }\r\n\r\n      var participantMultiplicity = !!(getSemantic(element).participantMultiplicity);\r\n\r\n      if (participantMultiplicity) {\r\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\r\n      }\r\n\r\n      return lane;\r\n    },\r\n    'bpmn:Lane': function(parentGfx, element, attrs) {\r\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      }, attrs));\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (semantic.$type === 'bpmn:Lane') {\r\n        var text = semantic.name;\r\n        renderLaneLabel(parentGfx, text, element);\r\n      }\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:InclusiveGateway': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var diamond = drawDiamond(parentGfx, element.width, element.height, attrs);\r\n\r\n      /* circle path */\r\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\r\n        strokeWidth: 2.5,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ExclusiveGateway': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var diamond = drawDiamond(parentGfx, element.width, element.height, attrs);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\r\n        xScaleFactor: 0.4,\r\n        yScaleFactor: 0.4,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.32,\r\n          my: 0.3\r\n        }\r\n      });\r\n\r\n      if ((getDi(element).isMarkerVisible)) {\r\n        drawPath(parentGfx, pathData, {\r\n          strokeWidth: 1,\r\n          fill: getStrokeColor(element),\r\n          stroke: getStrokeColor(element)\r\n        });\r\n      }\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ComplexGateway': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var diamond = drawDiamond(parentGfx, element.width, element.height, attrs);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\r\n        xScaleFactor: 0.5,\r\n        yScaleFactor:0.5,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.46,\r\n          my: 0.26\r\n        }\r\n      });\r\n\r\n      /* complex path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ParallelGateway': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var diamond = drawDiamond(parentGfx, element.width, element.height, attrs);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\r\n        xScaleFactor: 0.6,\r\n        yScaleFactor:0.6,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.46,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      /* parallel path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:EventBasedGateway': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      var attrs = {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var diamond = drawDiamond(parentGfx, element.width, element.height, attrs);\r\n\r\n      /* outer circle path */ drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\r\n        strokeWidth: 1,\r\n        fill: 'none',\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var type = semantic.eventGatewayType;\r\n      var instantiate = !!semantic.instantiate;\r\n\r\n      function drawEvent() {\r\n\r\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\r\n          xScaleFactor: 0.18,\r\n          yScaleFactor: 0.18,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.36,\r\n            my: 0.44\r\n          }\r\n        });\r\n\r\n        var attrs = {\r\n          strokeWidth: 2,\r\n          fill: getFillColor(element, 'none'),\r\n          stroke: getStrokeColor(element)\r\n        };\r\n\r\n        /* event path */ drawPath(parentGfx, pathData, attrs);\r\n      }\r\n\r\n      if (type === 'Parallel') {\r\n\r\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\r\n          xScaleFactor: 0.4,\r\n          yScaleFactor:0.4,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.474,\r\n            my: 0.296\r\n          }\r\n        });\r\n\r\n        var parallelPath = drawPath(parentGfx, pathData);\r\n        svgAttr(parallelPath, {\r\n          strokeWidth: 1,\r\n          fill: 'none'\r\n        });\r\n      } else if (type === 'Exclusive') {\r\n\r\n        if (!instantiate) {\r\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\r\n          svgAttr(innerCircle, {\r\n            strokeWidth: 1,\r\n            fill: 'none',\r\n            stroke: getStrokeColor(element)\r\n          });\r\n        }\r\n\r\n        drawEvent();\r\n      }\r\n\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:Gateway': function(parentGfx, element) {\r\n      return drawDiamond(parentGfx, element.width, element.height);\r\n    },\r\n    'bpmn:SequenceFlow': function(parentGfx, element) {\r\n      var pathData = createPathFromConnection(element);\r\n\r\n      var fill = getFillColor(element),\r\n          stroke = getStrokeColor(element);\r\n\r\n      var attrs = {\r\n        strokeLinejoin: 'round',\r\n        markerEnd: marker('sequenceflow-end', fill, stroke),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var path = drawPath(parentGfx, pathData, attrs);\r\n\r\n      var sequenceFlow = getSemantic(element);\r\n      var source = element.source.businessObject;\r\n\r\n      // conditional flow marker\r\n      if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\r\n        svgAttr(path, {\r\n          markerStart: marker('conditional-flow-marker', fill, stroke)\r\n        });\r\n      }\r\n\r\n      // default marker\r\n      if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) &&\r\n          source.default === sequenceFlow) {\r\n        svgAttr(path, {\r\n          markerStart: marker('conditional-default-flow-marker', fill, stroke)\r\n        });\r\n      }\r\n\r\n      return path;\r\n    },\r\n    'bpmn:Association': function(parentGfx, element, attrs) {\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      var fill = getFillColor(element),\r\n          stroke = getStrokeColor(element);\r\n\r\n      attrs = assign({\r\n        strokeDasharray: '0.5, 5',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        stroke: getStrokeColor(element)\r\n      }, attrs || {});\r\n\r\n      if (semantic.associationDirection === 'One' ||\r\n          semantic.associationDirection === 'Both') {\r\n        attrs.markerEnd = marker('association-end', fill, stroke);\r\n      }\r\n\r\n      if (semantic.associationDirection === 'Both') {\r\n        attrs.markerStart = marker('association-start', fill, stroke);\r\n      }\r\n\r\n      return drawLine(parentGfx, element.waypoints, attrs);\r\n    },\r\n    'bpmn:DataInputAssociation': function(parentGfx, element) {\r\n      var fill = getFillColor(element),\r\n          stroke = getStrokeColor(element);\r\n\r\n      return renderer('bpmn:Association')(parentGfx, element, {\r\n        markerEnd: marker('association-end', fill, stroke)\r\n      });\r\n    },\r\n    'bpmn:DataOutputAssociation': function(parentGfx, element) {\r\n      var fill = getFillColor(element),\r\n          stroke = getStrokeColor(element);\r\n\r\n      return renderer('bpmn:Association')(parentGfx, element, {\r\n        markerEnd: marker('association-end', fill, stroke)\r\n      });\r\n    },\r\n    'bpmn:MessageFlow': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element),\r\n          di = getDi(element);\r\n\r\n      var fill = getFillColor(element),\r\n          stroke = getStrokeColor(element);\r\n\r\n      var pathData = createPathFromConnection(element);\r\n\r\n      var attrs = {\r\n        markerEnd: marker('messageflow-end', fill, stroke),\r\n        markerStart: marker('messageflow-start', fill, stroke),\r\n        strokeDasharray: '10, 12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        strokeWidth: '1.5px',\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      var path = drawPath(parentGfx, pathData, attrs);\r\n\r\n      if (semantic.messageRef) {\r\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\r\n\r\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\r\n          abspos: {\r\n            x: midPoint.x,\r\n            y: midPoint.y\r\n          }\r\n        });\r\n\r\n        var messageAttrs = { strokeWidth: 1 };\r\n\r\n        if (di.messageVisibleKind === 'initiating') {\r\n          messageAttrs.fill = 'white';\r\n          messageAttrs.stroke = 'black';\r\n        } else {\r\n          messageAttrs.fill = '#888';\r\n          messageAttrs.stroke = 'white';\r\n        }\r\n\r\n        drawPath(parentGfx, markerPathData, messageAttrs);\r\n      }\r\n\r\n      return path;\r\n    },\r\n    'bpmn:DataObject': function(parentGfx, element) {\r\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.474,\r\n          my: 0.296\r\n        }\r\n      });\r\n\r\n      var elementObject = drawPath(parentGfx, pathData, {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (isCollection(semantic)) {\r\n        renderDataItemCollection(parentGfx, element);\r\n      }\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\r\n    'bpmn:DataInput': function(parentGfx, element) {\r\n\r\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\r\n\r\n      // page\r\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\r\n\r\n      /* input arrow path */ drawPath(parentGfx, arrowPathData, { strokeWidth: 1 });\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataOutput': function(parentGfx, element) {\r\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\r\n\r\n      // page\r\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\r\n\r\n      /* output arrow path */ drawPath(parentGfx, arrowPathData, {\r\n        strokeWidth: 1,\r\n        fill: 'black'\r\n      });\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataStoreReference': function(parentGfx, element) {\r\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0,\r\n          my: 0.133\r\n        }\r\n      });\r\n\r\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\r\n        strokeWidth: 2,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      return elementStore;\r\n    },\r\n    'bpmn:BoundaryEvent': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element),\r\n          cancel = semantic.cancelActivity;\r\n\r\n      var attrs = {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      };\r\n\r\n      if (!cancel) {\r\n        attrs.strokeDasharray = '6';\r\n        attrs.strokeLinecap = 'round';\r\n      }\r\n\r\n      var outer = renderer('bpmn:Event')(parentGfx, element, attrs);\r\n      /* inner path */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, assign(attrs, { fill: 'none' }));\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:Group': function(parentGfx, element) {\r\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\r\n        strokeWidth: 1,\r\n        strokeDasharray: '8,3,1,3',\r\n        fill: 'none',\r\n        pointerEvents: 'none'\r\n      });\r\n    },\r\n    'label': function(parentGfx, element) {\r\n      return renderExternalLabel(parentGfx, element);\r\n    },\r\n    'bpmn:TextAnnotation': function(parentGfx, element) {\r\n      var style = {\r\n        'fill': 'none',\r\n        'stroke': 'none'\r\n      };\r\n\r\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n      drawPath(parentGfx, textPathData, {\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      var text = getSemantic(element).text || '';\r\n      renderLabel(parentGfx, text, { box: element, align: 'left-top', padding: 5 });\r\n\r\n      return textElement;\r\n    },\r\n    'ParticipantMultiplicityMarker': function(parentGfx, element) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2) / element.width),\r\n          my: (element.height - 15) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('participant-multiplicity', parentGfx, markerPath);\r\n    },\r\n    'SubProcessMarker': function(parentGfx, element) {\r\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      // Process marker is placed in the middle of the box\r\n      // therefore fixed values can be used here\r\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\r\n\r\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\r\n        xScaleFactor: 1.5,\r\n        yScaleFactor: 1.5,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: (element.width / 2 - 7.5) / element.width,\r\n          my: (element.height - 20) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('sub-process', parentGfx, markerPath, {\r\n        fill: getFillColor(element),\r\n        stroke: getStrokeColor(element)\r\n      });\r\n    },\r\n    'ParallelMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.parallel) / element.width),\r\n          my: (element.height - 20) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('parallel', parentGfx, markerPath);\r\n    },\r\n    'SequentialMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.seq) / element.width),\r\n          my: (element.height - 19) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('sequential', parentGfx, markerPath);\r\n    },\r\n    'CompensationMarker': function(parentGfx, element, position) {\r\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.compensation) / element.width),\r\n          my: (element.height - 13) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('compensation', parentGfx, markerMath, { strokeWidth: 1 });\r\n    },\r\n    'LoopMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.loop) / element.width),\r\n          my: (element.height - 7) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('loop', parentGfx, markerPath, {\r\n        strokeWidth: 1,\r\n        fill: 'none',\r\n        strokeLinecap: 'round',\r\n        strokeMiterlimit: 0.5\r\n      });\r\n    },\r\n    'AdhocMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.adhoc) / element.width),\r\n          my: (element.height - 15) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('adhoc', parentGfx, markerPath, {\r\n        strokeWidth: 1,\r\n        fill: 'black'\r\n      });\r\n    }\r\n  };\r\n\r\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\r\n    var obj = getSemantic(element);\r\n\r\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\r\n    var position;\r\n\r\n    if (subprocess) {\r\n      position = {\r\n        seq: -21,\r\n        parallel: -22,\r\n        compensation: -42,\r\n        loop: -18,\r\n        adhoc: 10\r\n      };\r\n    } else {\r\n      position = {\r\n        seq: -3,\r\n        parallel: -6,\r\n        compensation: -27,\r\n        loop: 0,\r\n        adhoc: 10\r\n      };\r\n    }\r\n\r\n    forEach(taskMarkers, function(marker) {\r\n      renderer(marker)(parentGfx, element, position);\r\n    });\r\n\r\n    if (obj.isForCompensation) {\r\n      renderer('CompensationMarker')(parentGfx, element, position);\r\n    }\r\n\r\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\r\n      renderer('AdhocMarker')(parentGfx, element, position);\r\n    }\r\n\r\n    var loopCharacteristics = obj.loopCharacteristics,\r\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\r\n\r\n    if (loopCharacteristics) {\r\n\r\n      if (isSequential === undefined) {\r\n        renderer('LoopMarker')(parentGfx, element, position);\r\n      }\r\n\r\n      if (isSequential === false) {\r\n        renderer('ParallelMarker')(parentGfx, element, position);\r\n      }\r\n\r\n      if (isSequential === true) {\r\n        renderer('SequentialMarker')(parentGfx, element, position);\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderDataItemCollection(parentGfx, element) {\r\n\r\n    var yPosition = (element.height - 16) / element.height;\r\n\r\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\r\n      xScaleFactor: 1,\r\n      yScaleFactor: 1,\r\n      containerWidth: element.width,\r\n      containerHeight: element.height,\r\n      position: {\r\n        mx: 0.451,\r\n        my: yPosition\r\n      }\r\n    });\r\n\r\n    /* collection path */ drawPath(parentGfx, pathData, {\r\n      strokeWidth: 2\r\n    });\r\n  }\r\n}\r\n\r\n\r\ninherits(BpmnRenderer, BaseRenderer);\r\n\r\nBpmnRenderer.$inject = [ 'eventBus', 'styles', 'pathMap', 'canvas' ];\r\n\r\nmodule.exports = BpmnRenderer;\r\n\r\n\r\nBpmnRenderer.prototype.canRender = function(element) {\r\n  return is(element, 'bpmn:BaseElement');\r\n};\r\n\r\nBpmnRenderer.prototype.drawShape = function(parentGfx, element) {\r\n  var type = element.type;\r\n  var h = this.handlers[type];\r\n\r\n  /* jshint -W040 */\r\n  return h(parentGfx, element);\r\n};\r\n\r\nBpmnRenderer.prototype.drawConnection = function(parentGfx, element) {\r\n  var type = element.type;\r\n  var h = this.handlers[type];\r\n\r\n  /* jshint -W040 */\r\n  return h(parentGfx, element);\r\n};\r\n\r\nBpmnRenderer.prototype.getShapePath = function(element) {\r\n\r\n  if (is(element, 'bpmn:Event')) {\r\n    return getCirclePath(element);\r\n  }\r\n\r\n  if (is(element, 'bpmn:Activity')) {\r\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\r\n  }\r\n\r\n  if (is(element, 'bpmn:Gateway')) {\r\n    return getDiamondPath(element);\r\n  }\r\n\r\n  return getRectPath(element);\r\n};\r\n\r\n\r\n///////// helper functions /////////////////////////////\r\n\r\n/**\r\n * Checks if eventDefinition of the given element matches with semantic type.\r\n *\r\n * @return {boolean} true if element is of the given semantic type\r\n */\r\nfunction isTypedEvent(event, eventDefinitionType, filter) {\r\n\r\n  function matches(definition, filter) {\r\n    return every(filter, function(val, key) {\r\n\r\n      // we want a == conversion here, to be able to catch\r\n      // undefined == false and friends\r\n      /* jshint -W116 */\r\n      return definition[key] == val;\r\n    });\r\n  }\r\n\r\n  return some(event.eventDefinitions, function(definition) {\r\n    return definition.$type === eventDefinitionType && matches(event, filter);\r\n  });\r\n}\r\n\r\nfunction isThrowEvent(event) {\r\n  return (event.$type === 'bpmn:IntermediateThrowEvent') || (event.$type === 'bpmn:EndEvent');\r\n}\r\n\r\nfunction isCollection(element) {\r\n  var dataObject = element.dataObjectRef;\r\n\r\n  return element.isCollection || (dataObject && dataObject.isCollection);\r\n}\r\n\r\nfunction getDi(element) {\r\n  return element.businessObject.di;\r\n}\r\n\r\nfunction getSemantic(element) {\r\n  return element.businessObject;\r\n}\r\n\r\n\r\n\r\n/////// cropping path customizations /////////////////////////\r\n\r\nfunction getCirclePath(shape) {\r\n\r\n  var cx = shape.x + shape.width / 2,\r\n      cy = shape.y + shape.height / 2,\r\n      radius = shape.width / 2;\r\n\r\n  var circlePath = [\r\n    ['M', cx, cy],\r\n    ['m', 0, -radius],\r\n    ['a', radius, radius, 0, 1, 1, 0, 2 * radius],\r\n    ['a', radius, radius, 0, 1, 1, 0, -2 * radius],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(circlePath);\r\n}\r\n\r\nfunction getRoundRectPath(shape, borderRadius) {\r\n\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var roundRectPath = [\r\n    ['M', x + borderRadius, y],\r\n    ['l', width - borderRadius * 2, 0],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, borderRadius],\r\n    ['l', 0, height - borderRadius * 2],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, borderRadius],\r\n    ['l', borderRadius * 2 - width, 0],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, -borderRadius],\r\n    ['l', 0, borderRadius * 2 - height],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, -borderRadius],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(roundRectPath);\r\n}\r\n\r\nfunction getDiamondPath(shape) {\r\n\r\n  var width = shape.width,\r\n      height = shape.height,\r\n      x = shape.x,\r\n      y = shape.y,\r\n      halfWidth = width / 2,\r\n      halfHeight = height / 2;\r\n\r\n  var diamondPath = [\r\n    ['M', x + halfWidth, y],\r\n    ['l', halfWidth, halfHeight],\r\n    ['l', -halfWidth, halfHeight],\r\n    ['l', -halfWidth, -halfHeight],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(diamondPath);\r\n}\r\n\r\nfunction getRectPath(shape) {\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var rectPath = [\r\n    ['M', x, y],\r\n    ['l', width, 0],\r\n    ['l', 0, height],\r\n    ['l', -width, 0],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(rectPath);\r\n}\r\n\r\nfunction getFillColor(element, defaultColor) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo.di.get('fill') || defaultColor || 'white';\r\n}\r\n\r\nfunction getStrokeColor(element, defaultColor) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo.di.get('stroke') || defaultColor || 'black';\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Map containing SVG paths needed by BpmnRenderer.\r\n */\r\n\r\nfunction PathMap() {\r\n\r\n  /**\r\n   * Contains a map of path elements\r\n   *\r\n   * <h1>Path definition</h1>\r\n   * A parameterized path is defined like this:\r\n   * <pre>\r\n   * 'GATEWAY_PARALLEL': {\r\n   *   d: 'm {mx},{my} {e.x0},0 0,{e.x1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\r\n          '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\r\n   *   height: 17.5,\r\n   *   width:  17.5,\r\n   *   heightElements: [2.5, 7.5],\r\n   *   widthElements: [2.5, 7.5]\r\n   * }\r\n   * </pre>\r\n   * <p>It's important to specify a correct <b>height and width</b> for the path as the scaling\r\n   * is based on the ratio between the specified height and width in this object and the\r\n   * height and width that is set as scale target (Note x,y coordinates will be scaled with\r\n   * individual ratios).</p>\r\n   * <p>The '<b>heightElements</b>' and '<b>widthElements</b>' array must contain the values that will be scaled.\r\n   * The scaling is based on the computed ratios.\r\n   * Coordinates on the y axis should be in the <b>heightElement</b>'s array, they will be scaled using\r\n   * the computed ratio coefficient.\r\n   * In the parameterized path the scaled values can be accessed through the 'e' object in {} brackets.\r\n   *   <ul>\r\n   *    <li>The values for the y axis can be accessed in the path string using {e.y0}, {e.y1}, ....</li>\r\n   *    <li>The values for the x axis can be accessed in the path string using {e.x0}, {e.x1}, ....</li>\r\n   *   </ul>\r\n   *   The numbers x0, x1 respectively y0, y1, ... map to the corresponding array index.\r\n   * </p>\r\n   */\r\n  this.pathMap = {\r\n    'EVENT_MESSAGE': {\r\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'EVENT_SIGNAL': {\r\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x1},0 Z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [18],\r\n      widthElements: [10, 20]\r\n    },\r\n    'EVENT_ESCALATION': {\r\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x0},-{e.y1} l -{e.x0},{e.y1} Z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [20, 7],\r\n      widthElements: [8]\r\n    },\r\n    'EVENT_CONDITIONAL': {\r\n      d: 'M {e.x0},{e.y0} l {e.x1},0 l 0,{e.y2} l -{e.x1},0 Z ' +\r\n         'M {e.x2},{e.y3} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y4} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y5} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y6} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y7} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y8} l {e.x0},0 ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [8.5, 14.5, 18, 11.5, 14.5, 17.5, 20.5, 23.5, 26.5],\r\n      widthElements:  [10.5, 14.5, 12.5]\r\n    },\r\n    'EVENT_LINK': {\r\n      d: 'm {mx},{my} 0,{e.y0} -{e.x1},0 0,{e.y1} {e.x1},0 0,{e.y0} {e.x0},-{e.y2} -{e.x0},-{e.y2} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [4.4375, 6.75, 7.8125],\r\n      widthElements: [9.84375, 13.5]\r\n    },\r\n    'EVENT_ERROR': {\r\n      d: 'm {mx},{my} {e.x0},-{e.y0} {e.x1},-{e.y1} {e.x2},{e.y2} {e.x3},-{e.y3} -{e.x4},{e.y4} -{e.x5},-{e.y5} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [0.023, 8.737, 8.151, 16.564, 10.591, 8.714],\r\n      widthElements: [0.085, 6.672, 6.97, 4.273, 5.337, 6.636]\r\n    },\r\n    'EVENT_CANCEL_45': {\r\n      d: 'm {mx},{my} -{e.x1},0 0,{e.x0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\r\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [4.75, 8.5],\r\n      widthElements: [4.75, 8.5]\r\n    },\r\n    'EVENT_COMPENSATION': {\r\n      d: 'm {mx},{my} {e.x0},-{e.y0} 0,{e.y1} z m {e.x1},-{e.y2} {e.x2},-{e.y3} 0,{e.y1} -{e.x2},-{e.y3} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [6.5, 13, 0.4, 6.1],\r\n      widthElements: [9, 9.3, 8.7]\r\n    },\r\n    'EVENT_TIMER_WH': {\r\n      d: 'M {mx},{my} l {e.x0},-{e.y0} m -{e.x0},{e.y0} l {e.x1},{e.y1} ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [10, 2],\r\n      widthElements: [3, 7]\r\n    },\r\n    'EVENT_TIMER_LINE': {\r\n      d:  'M {mx},{my} ' +\r\n          'm {e.x0},{e.y0} l -{e.x1},{e.y1} ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [10, 3],\r\n      widthElements: [0, 0]\r\n    },\r\n    'EVENT_MULTIPLE': {\r\n      d:'m {mx},{my} {e.x1},-{e.y0} {e.x1},{e.y0} -{e.x0},{e.y1} -{e.x2},0 z',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [6.28099, 12.56199],\r\n      widthElements: [3.1405, 9.42149, 12.56198]\r\n    },\r\n    'EVENT_PARALLEL_MULTIPLE': {\r\n      d:'m {mx},{my} {e.x0},0 0,{e.y1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\r\n        '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [2.56228, 7.68683],\r\n      widthElements: [2.56228, 7.68683]\r\n    },\r\n    'GATEWAY_EXCLUSIVE': {\r\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x1},{e.y0} {e.x2},0 {e.x4},{e.y2} ' +\r\n                    '{e.x4},{e.y1} {e.x2},0 {e.x1},{e.y3} {e.x0},{e.y3} ' +\r\n                    '{e.x3},0 {e.x5},{e.y1} {e.x5},{e.y2} {e.x3},0 z',\r\n      height: 17.5,\r\n      width:  17.5,\r\n      heightElements: [8.5, 6.5312, -6.5312, -8.5],\r\n      widthElements:  [6.5, -6.5, 3, -3, 5, -5]\r\n    },\r\n    'GATEWAY_PARALLEL': {\r\n      d:'m {mx},{my} 0,{e.y1} -{e.x1},0 0,{e.y0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\r\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\r\n      height: 30,\r\n      width:  30,\r\n      heightElements: [5, 12.5],\r\n      widthElements: [5, 12.5]\r\n    },\r\n    'GATEWAY_EVENT_BASED': {\r\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x0},{e.y1} {e.x1},{e.y2} {e.x2},0 z',\r\n      height: 11,\r\n      width:  11,\r\n      heightElements: [-6, 6, 12, -12],\r\n      widthElements: [9, -3, -12]\r\n    },\r\n    'GATEWAY_COMPLEX': {\r\n      d:'m {mx},{my} 0,{e.y0} -{e.x0},-{e.y1} -{e.x1},{e.y2} {e.x0},{e.y1} -{e.x2},0 0,{e.y3} ' +\r\n        '{e.x2},0  -{e.x0},{e.y1} l {e.x1},{e.y2} {e.x0},-{e.y1} 0,{e.y0} {e.x3},0 0,-{e.y0} {e.x0},{e.y1} ' +\r\n        '{e.x1},-{e.y2} -{e.x0},-{e.y1} {e.x2},0 0,-{e.y3} -{e.x2},0 {e.x0},-{e.y1} -{e.x1},-{e.y2} ' +\r\n        '-{e.x0},{e.y1} 0,-{e.y0} -{e.x3},0 z',\r\n      height: 17.125,\r\n      width:  17.125,\r\n      heightElements: [4.875, 3.4375, 2.125, 3],\r\n      widthElements: [3.4375, 2.125, 4.875, 3]\r\n    },\r\n    'DATA_OBJECT_PATH': {\r\n      d:'m 0,0 {e.x1},0 {e.x0},{e.y0} 0,{e.y1} -{e.x2},0 0,-{e.y2} {e.x1},0 0,{e.y0} {e.x0},0',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [10, 50, 60],\r\n      widthElements: [10, 40, 50, 60]\r\n    },\r\n    'DATA_OBJECT_COLLECTION_PATH': {\r\n      d:'m {mx}, {my} ' +\r\n        'm  0 15  l 0 -15 ' +\r\n        'm  4 15  l 0 -15 ' +\r\n        'm  4 15  l 0 -15 ',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [12],\r\n      widthElements: [1, 6, 12, 15]\r\n    },\r\n    'DATA_ARROW': {\r\n      d:'m 5,9 9,0 0,-3 5,5 -5,5 0,-3 -9,0 z',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'DATA_STORE': {\r\n      d:'m  {mx},{my} ' +\r\n        'l  0,{e.y2} ' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\r\n        'l  0,-{e.y2} ' +\r\n        'c -{e.x0},-{e.y1} -{e.x1},-{e.y1} -{e.x2},0' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\r\n        'm  -{e.x2},{e.y0}' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1} {e.x2},0' +\r\n        'm  -{e.x2},{e.y0}' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0',\r\n      height: 61,\r\n      width:  61,\r\n      heightElements: [7, 10, 45],\r\n      widthElements:  [2, 58, 60]\r\n    },\r\n    'TEXT_ANNOTATION': {\r\n      d: 'm {mx}, {my} m 10,0 l -10,0 l 0,{e.y0} l 10,0',\r\n      height: 30,\r\n      width: 10,\r\n      heightElements: [30],\r\n      widthElements: [10]\r\n    },\r\n    'MARKER_SUB_PROCESS': {\r\n      d: 'm{mx},{my} m 7,2 l 0,10 m -5,-5 l 10,0',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_PARALLEL': {\r\n      d: 'm{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_SEQUENTIAL': {\r\n      d: 'm{mx},{my} m 0,3 l 10,0 m -10,3 l 10,0 m -10,3 l 10,0',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_COMPENSATION': {\r\n      d: 'm {mx},{my} 7,-5 0,10 z m 7.1,-0.3 6.9,-4.7 0,10 -6.9,-4.7 z',\r\n      height: 10,\r\n      width: 21,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_LOOP': {\r\n      d: 'm {mx},{my} c 3.526979,0 6.386161,-2.829858 6.386161,-6.320661 0,-3.490806 -2.859182,-6.320661 ' +\r\n        '-6.386161,-6.320661 -3.526978,0 -6.38616,2.829855 -6.38616,6.320661 0,1.745402 ' +\r\n        '0.714797,3.325567 1.870463,4.469381 0.577834,0.571908 1.265885,1.034728 2.029916,1.35457 ' +\r\n        'l -0.718163,-3.909793 m 0.718163,3.909793 -3.885211,0.802902',\r\n      height: 13.9,\r\n      width: 13.7,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_ADHOC': {\r\n      d: 'm {mx},{my} m 0.84461,2.64411 c 1.05533,-1.23780996 2.64337,-2.07882 4.29653,-1.97997996 2.05163,0.0805 ' +\r\n        '3.85579,1.15803 5.76082,1.79107 1.06385,0.34139996 2.24454,0.1438 3.18759,-0.43767 0.61743,-0.33642 ' +\r\n        '1.2775,-0.64078 1.7542,-1.17511 0,0.56023 0,1.12046 0,1.6807 -0.98706,0.96237996 -2.29792,1.62393996 ' +\r\n        '-3.6918,1.66181996 -1.24459,0.0927 -2.46671,-0.2491 -3.59505,-0.74812 -1.35789,-0.55965 ' +\r\n        '-2.75133,-1.33436996 -4.27027,-1.18121996 -1.37741,0.14601 -2.41842,1.13685996 -3.44288,1.96782996 z',\r\n      height: 4,\r\n      width: 15,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'TASK_TYPE_SEND': {\r\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\r\n      height: 14,\r\n      width:  21,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'TASK_TYPE_SCRIPT': {\r\n      d: 'm {mx},{my} c 9.966553,-6.27276 -8.000926,-7.91932 2.968968,-14.938 l -8.802728,0 ' +\r\n        'c -10.969894,7.01868 6.997585,8.66524 -2.968967,14.938 z ' +\r\n        'm -7,-12 l 5,0 ' +\r\n        'm -4.5,3 l 4.5,0 ' +\r\n        'm -3,3 l 5,0' +\r\n        'm -4,3 l 5,0',\r\n      height: 15,\r\n      width:  12.6,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'TASK_TYPE_USER_1': {\r\n      d: 'm {mx},{my} c 0.909,-0.845 1.594,-2.049 1.594,-3.385 0,-2.554 -1.805,-4.62199999 ' +\r\n        '-4.357,-4.62199999 -2.55199998,0 -4.28799998,2.06799999 -4.28799998,4.62199999 0,1.348 ' +\r\n        '0.974,2.562 1.89599998,3.405 -0.52899998,0.187 -5.669,2.097 -5.794,4.7560005 v 6.718 ' +\r\n        'h 17 v -6.718 c 0,-2.2980005 -5.5279996,-4.5950005 -6.0509996,-4.7760005 z' +\r\n        'm -8,6 l 0,5.5 m 11,0 l 0,-5'\r\n    },\r\n    'TASK_TYPE_USER_2': {\r\n      d: 'm {mx},{my} m 2.162,1.009 c 0,2.4470005 -2.158,4.4310005 -4.821,4.4310005 ' +\r\n        '-2.66499998,0 -4.822,-1.981 -4.822,-4.4310005 '\r\n    },\r\n    'TASK_TYPE_USER_3': {\r\n      d: 'm {mx},{my} m -6.9,-3.80 c 0,0 2.25099998,-2.358 4.27399998,-1.177 2.024,1.181 4.221,1.537 ' +\r\n        '4.124,0.965 -0.098,-0.57 -0.117,-3.79099999 -4.191,-4.13599999 -3.57499998,0.001 ' +\r\n        '-4.20799998,3.36699999 -4.20699998,4.34799999 z'\r\n    },\r\n    'TASK_TYPE_MANUAL': {\r\n      d: 'm {mx},{my} c 0.234,-0.01 5.604,0.008 8.029,0.004 0.808,0 1.271,-0.172 1.417,-0.752 0.227,-0.898 ' +\r\n        '-0.334,-1.314 -1.338,-1.316 -2.467,-0.01 -7.886,-0.004 -8.108,-0.004 -0.014,-0.079 0.016,-0.533 0,-0.61 ' +\r\n        '0.195,-0.042 8.507,0.006 9.616,0.002 0.877,-0.007 1.35,-0.438 1.353,-1.208 0.003,-0.768 -0.479,-1.09 ' +\r\n        '-1.35,-1.091 -2.968,-0.002 -9.619,-0.013 -9.619,-0.013 v -0.591 c 0,0 5.052,-0.016 7.225,-0.016 ' +\r\n        '0.888,-0.002 1.354,-0.416 1.351,-1.193 -0.006,-0.761 -0.492,-1.196 -1.361,-1.196 -3.473,-0.005 ' +\r\n        '-10.86,-0.003 -11.0829995,-0.003 -0.022,-0.047 -0.045,-0.094 -0.069,-0.139 0.3939995,-0.319 ' +\r\n        '2.0409995,-1.626 2.4149995,-2.017 0.469,-0.4870005 0.519,-1.1650005 0.162,-1.6040005 -0.414,-0.511 ' +\r\n        '-0.973,-0.5 -1.48,-0.236 -1.4609995,0.764 -6.5999995,3.6430005 -7.7329995,4.2710005 -0.9,0.499 ' +\r\n        '-1.516,1.253 -1.882,2.19 -0.37000002,0.95 -0.17,2.01 -0.166,2.979 0.004,0.718 -0.27300002,1.345 ' +\r\n        '-0.055,2.063 0.629,2.087 2.425,3.312 4.859,3.318 4.6179995,0.014 9.2379995,-0.139 13.8569995,-0.158 ' +\r\n        '0.755,-0.004 1.171,-0.301 1.182,-1.033 0.012,-0.754 -0.423,-0.969 -1.183,-0.973 -1.778,-0.01 ' +\r\n        '-5.824,-0.004 -6.04,-0.004 10e-4,-0.084 0.003,-0.586 10e-4,-0.67 z'\r\n    },\r\n    'TASK_TYPE_INSTANTIATING_SEND': {\r\n      d: 'm {mx},{my} l 0,8.4 l 12.6,0 l 0,-8.4 z l 6.3,3.6 l 6.3,-3.6'\r\n    },\r\n    'TASK_TYPE_SERVICE': {\r\n      d: 'm {mx},{my} v -1.71335 c 0.352326,-0.0705 0.703932,-0.17838 1.047628,-0.32133 ' +\r\n        '0.344416,-0.14465 0.665822,-0.32133 0.966377,-0.52145 l 1.19431,1.18005 1.567487,-1.57688 ' +\r\n        '-1.195028,-1.18014 c 0.403376,-0.61394 0.683079,-1.29908 0.825447,-2.01824 l 1.622133,-0.01 ' +\r\n        'v -2.2196 l -1.636514,0.01 c -0.07333,-0.35153 -0.178319,-0.70024 -0.323564,-1.04372 ' +\r\n        '-0.145244,-0.34406 -0.321407,-0.6644 -0.522735,-0.96217 l 1.131035,-1.13631 -1.583305,-1.56293 ' +\r\n        '-1.129598,1.13589 c -0.614052,-0.40108 -1.302883,-0.68093 -2.022633,-0.82247 l 0.0093,-1.61852 ' +\r\n        'h -2.241173 l 0.0042,1.63124 c -0.353763,0.0736 -0.705369,0.17977 -1.049785,0.32371 -0.344415,0.14437 ' +\r\n        '-0.665102,0.32092 -0.9635006,0.52046 l -1.1698628,-1.15823 -1.5667691,1.5792 1.1684265,1.15669 ' +\r\n        'c -0.4026573,0.61283 -0.68308,1.29797 -0.8247287,2.01713 l -1.6588041,0.003 v 2.22174 ' +\r\n        'l 1.6724648,-0.006 c 0.073327,0.35077 0.1797598,0.70243 0.3242851,1.04472 0.1452428,0.34448 ' +\r\n        '0.3214064,0.6644 0.5227339,0.96066 l -1.1993431,1.19723 1.5840256,1.56011 1.1964668,-1.19348 ' +\r\n        'c 0.6140517,0.40346 1.3028827,0.68232 2.0233517,0.82331 l 7.19e-4,1.69892 h 2.226848 z ' +\r\n        'm 0.221462,-3.9957 c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\r\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\r\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\r\n    },\r\n    'TASK_TYPE_SERVICE_FILL': {\r\n      d: 'm {mx},{my} c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\r\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\r\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\r\n    },\r\n    'TASK_TYPE_BUSINESS_RULE_HEADER': {\r\n      d: 'm {mx},{my} 0,4 20,0 0,-4 z'\r\n    },\r\n    'TASK_TYPE_BUSINESS_RULE_MAIN': {\r\n      d: 'm {mx},{my} 0,12 20,0 0,-12 z' +\r\n        'm 0,8 l 20,0 ' +\r\n        'm -13,-4 l 0,8'\r\n    },\r\n    'MESSAGE_FLOW_MARKER': {\r\n      d: 'm {mx},{my} m -10.5 ,-7 l 0,14 l 21,0 l 0,-14 z l 10.5,6 l 10.5,-6'\r\n    }\r\n  };\r\n\r\n  this.getRawPath = function getRawPath(pathId) {\r\n    return this.pathMap[pathId].d;\r\n  };\r\n\r\n  /**\r\n   * Scales the path to the given height and width.\r\n   * <h1>Use case</h1>\r\n   * <p>Use case is to scale the content of elements (event, gateways) based\r\n   * on the element bounding box's size.\r\n   * </p>\r\n   * <h1>Why not transform</h1>\r\n   * <p>Scaling a path with transform() will also scale the stroke and IE does not support\r\n   * the option 'non-scaling-stroke' to prevent this.\r\n   * Also there are use cases where only some parts of a path should be\r\n   * scaled.</p>\r\n   *\r\n   * @param {String} pathId The ID of the path.\r\n   * @param {Object} param <p>\r\n   *   Example param object scales the path to 60% size of the container (data.width, data.height).\r\n   *   <pre>\r\n   *   {\r\n   *     xScaleFactor: 0.6,\r\n   *     yScaleFactor:0.6,\r\n   *     containerWidth: data.width,\r\n   *     containerHeight: data.height,\r\n   *     position: {\r\n   *       mx: 0.46,\r\n   *       my: 0.2,\r\n   *     }\r\n   *   }\r\n   *   </pre>\r\n   *   <ul>\r\n   *    <li>targetpathwidth = xScaleFactor * containerWidth</li>\r\n   *    <li>targetpathheight = yScaleFactor * containerHeight</li>\r\n   *    <li>Position is used to set the starting coordinate of the path. M is computed:\r\n    *    <ul>\r\n    *      <li>position.x * containerWidth</li>\r\n    *      <li>position.y * containerHeight</li>\r\n    *    </ul>\r\n    *    Center of the container <pre> position: {\r\n   *       mx: 0.5,\r\n   *       my: 0.5,\r\n   *     }</pre>\r\n   *     Upper left corner of the container\r\n   *     <pre> position: {\r\n   *       mx: 0.0,\r\n   *       my: 0.0,\r\n   *     }</pre>\r\n   *    </li>\r\n   *   </ul>\r\n   * </p>\r\n   *\r\n   */\r\n  this.getScaledPath = function getScaledPath(pathId, param) {\r\n    var rawPath = this.pathMap[pathId];\r\n\r\n    // positioning\r\n    // compute the start point of the path\r\n    var mx, my;\r\n\r\n    if (param.abspos) {\r\n      mx = param.abspos.x;\r\n      my = param.abspos.y;\r\n    } else {\r\n      mx = param.containerWidth * param.position.mx;\r\n      my = param.containerHeight * param.position.my;\r\n    }\r\n\r\n    var coordinates = {}; //map for the scaled coordinates\r\n    if (param.position) {\r\n\r\n      // path\r\n      var heightRatio = (param.containerHeight / rawPath.height) * param.yScaleFactor;\r\n      var widthRatio = (param.containerWidth / rawPath.width) * param.xScaleFactor;\r\n\r\n\r\n      //Apply height ratio\r\n      for (var heightIndex = 0; heightIndex < rawPath.heightElements.length; heightIndex++) {\r\n        coordinates['y' + heightIndex] = rawPath.heightElements[heightIndex] * heightRatio;\r\n      }\r\n\r\n      //Apply width ratio\r\n      for (var widthIndex = 0; widthIndex < rawPath.widthElements.length; widthIndex++) {\r\n        coordinates['x' + widthIndex] = rawPath.widthElements[widthIndex] * widthRatio;\r\n      }\r\n    }\r\n\r\n    //Apply value to raw path\r\n    var path = format(\r\n      rawPath.d, {\r\n        mx: mx,\r\n        my: my,\r\n        e: coordinates\r\n      }\r\n    );\r\n    return path;\r\n  };\r\n}\r\n\r\nmodule.exports = PathMap;\r\n\r\n////////// helpers //////////\r\n\r\n// copied from https://github.com/adobe-webplatform/Snap.svg/blob/master/src/svg.js\r\nvar tokenRegex = //{([^/}]+)/}/g,\r\n    objNotationRegex = /(?:(?:^|/.)(.+?)(?=/[|/.|$|/()|/[('|\")(.+?)/2/])(/(/))?/g; // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n\r\nfunction replacer(all, key, obj) {\r\n  var res = obj;\r\n  key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {\r\n    name = name || quotedName;\r\n    if (res) {\r\n      if (name in res) {\r\n        res = res[name];\r\n      }\r\n      typeof res == 'function' && isFunc && (res = res());\r\n    }\r\n  });\r\n  res = (res == null || res == obj ? all : res) + '';\r\n\r\n  return res;\r\n}\r\n\r\nfunction format(str, obj) {\r\n  return String(str).replace(tokenRegex, function(all, key) {\r\n    return replacer(all, key, obj);\r\n  });\r\n}\r\n","module.exports = {\r\n  __init__: [ 'bpmnRenderer' ],\r\n  bpmnRenderer: [ 'type', require(5) ],\r\n  pathMap: [ 'type', require(6) ]\r\n};\r\n","var AutoResize = require(136);\r\n\r\nvar inherits = require(289);\r\n\r\nvar is = require(95).is;\r\n\r\n/**\r\n * Sub class of the AutoResize module which implements a BPMN\r\n * specific resize function.\r\n */\r\nfunction BpmnAutoResize(eventBus, elementRegistry, modeling, rules) {\r\n  AutoResize.call(this, eventBus, elementRegistry, modeling, rules);\r\n}\r\n\r\nBpmnAutoResize.$inject = [ 'eventBus', 'elementRegistry', 'modeling', 'rules' ];\r\n\r\ninherits(BpmnAutoResize, AutoResize);\r\n\r\nmodule.exports = BpmnAutoResize;\r\n\r\n\r\n/**\r\n * Resize shapes and lanes\r\n *\r\n * @param  {djs.model.Shape} target\r\n * @param  {Object} newBounds\r\n */\r\nBpmnAutoResize.prototype.resize = function(target, newBounds) {\r\n\r\n  if (is(target, 'bpmn:Participant')) {\r\n    this._modeling.resizeLane(target, newBounds);\r\n  } else {\r\n    this._modeling.resizeShape(target, newBounds);\r\n  }\r\n};","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nvar inherits = require(289);\r\n\r\nvar forEach = require(303);\r\n\r\nvar AutoResizeProvider = require(137);\r\n\r\n/**\r\n * This module is a provider for automatically resizing parent BPMN elements\r\n */\r\nfunction BpmnAutoResizeProvider(eventBus, modeling) {\r\n  AutoResizeProvider.call(this, eventBus);\r\n\r\n  this._modeling = modeling;\r\n}\r\n\r\ninherits(BpmnAutoResizeProvider, AutoResizeProvider);\r\n\r\nBpmnAutoResizeProvider.$inject = [ 'eventBus', 'modeling' ];\r\n\r\nmodule.exports = BpmnAutoResizeProvider;\r\n\r\n\r\n/**\r\n * Check if the given target can be expanded\r\n *\r\n * @param  {djs.model.Shape} target\r\n *\r\n * @return {boolean}\r\n */\r\nBpmnAutoResizeProvider.prototype.canResize = function(elements, target) {\r\n\r\n  if (!is(target, 'bpmn:Participant') && !is(target, 'bpmn:Lane') && !(is(target, 'bpmn:SubProcess'))) {\r\n    return false;\r\n  }\r\n\r\n  var canResize = true;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    if (is(element, 'bpmn:Lane') || element.labelTarget) {\r\n      canResize = false;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return canResize;\r\n};\r\n","module.exports = {\r\n  __init__: [ 'bpmnAutoResize', 'bpmnAutoResizeProvider' ],\r\n  bpmnAutoResize: [ 'type', require(8) ],\r\n  bpmnAutoResizeProvider: [ 'type', require(9) ]\r\n};\r\n","'use strict';\r\n\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    isArray = require(422),\r\n    is = require(95).is,\r\n    isExpanded = require(93).isExpanded,\r\n    isAny = require(68).isAny,\r\n    getChildLanes = require(67).getChildLanes,\r\n    isEventSubProcess = require(93).isEventSubProcess,\r\n    hasPrimaryModifier = require(274).hasPrimaryModifier;\r\n\r\n/**\r\n * A provider for BPMN 2.0 elements context pad\r\n */\r\nfunction ContextPadProvider(eventBus, contextPad, modeling, elementFactory,\r\n                            connect, create, popupMenu,\r\n                            canvas, rules, translate) {\r\n\r\n  contextPad.registerProvider(this);\r\n\r\n  this._contextPad = contextPad;\r\n\r\n  this._modeling = modeling;\r\n\r\n  this._elementFactory = elementFactory;\r\n  this._connect = connect;\r\n  this._create = create;\r\n  this._popupMenu = popupMenu;\r\n  this._canvas  = canvas;\r\n  this._rules = rules;\r\n  this._translate = translate;\r\n\r\n\r\n  eventBus.on('create.end', 250, function(event) {\r\n    var shape = event.context.shape;\r\n\r\n    if (!hasPrimaryModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    var entries = contextPad.getEntries(shape);\r\n\r\n    if (entries.replace) {\r\n      entries.replace.action.click(event, shape);\r\n    }\r\n  });\r\n}\r\n\r\nContextPadProvider.$inject = [\r\n  'eventBus',\r\n  'contextPad',\r\n  'modeling',\r\n  'elementFactory',\r\n  'connect',\r\n  'create',\r\n  'popupMenu',\r\n  'canvas',\r\n  'rules',\r\n  'translate'\r\n];\r\n\r\nmodule.exports = ContextPadProvider;\r\n\r\n\r\nContextPadProvider.prototype.getContextPadEntries = function(element) {\r\n\r\n  var contextPad = this._contextPad,\r\n      modeling = this._modeling,\r\n\r\n      elementFactory = this._elementFactory,\r\n      connect = this._connect,\r\n      create = this._create,\r\n      popupMenu = this._popupMenu,\r\n      canvas = this._canvas,\r\n      rules = this._rules,\r\n\r\n      translate = this._translate;\r\n\r\n  var actions = {};\r\n\r\n  if (element.type === 'label') {\r\n    return actions;\r\n  }\r\n\r\n  var businessObject = element.businessObject;\r\n\r\n  function startConnect(event, element, autoActivate) {\r\n    connect.start(event, element, autoActivate);\r\n  }\r\n\r\n  function removeElement(e) {\r\n    modeling.removeElements([ element ]);\r\n  }\r\n\r\n  function getReplaceMenuPosition(element) {\r\n\r\n    var Y_OFFSET = 5;\r\n\r\n    var diagramContainer = canvas.getContainer(),\r\n        pad = contextPad.getPad(element).html;\r\n\r\n    var diagramRect = diagramContainer.getBoundingClientRect(),\r\n        padRect = pad.getBoundingClientRect();\r\n\r\n    var top = padRect.top - diagramRect.top;\r\n    var left = padRect.left - diagramRect.left;\r\n\r\n    var pos = {\r\n      x: left,\r\n      y: top + padRect.height + Y_OFFSET\r\n    };\r\n\r\n    return pos;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create an append action\r\n   *\r\n   * @param {String} type\r\n   * @param {String} className\r\n   * @param {String} [title]\r\n   * @param {Object} [options]\r\n   *\r\n   * @return {Object} descriptor\r\n   */\r\n  function appendAction(type, className, title, options) {\r\n\r\n    if (typeof title !== 'string') {\r\n      options = title;\r\n      title = translate('Append {type}', { type: type.replace(/^bpmn/:/, '') });\r\n    }\r\n\r\n    function appendListener(event, element) {\r\n\r\n      var shape = elementFactory.createShape(assign({ type: type }, options));\r\n      create.start(event, shape, element);\r\n    }\r\n\r\n    return {\r\n      group: 'model',\r\n      className: className,\r\n      title: title,\r\n      action: {\r\n        dragstart: appendListener,\r\n        click: appendListener\r\n      }\r\n    };\r\n  }\r\n\r\n  function splitLaneHandler(count) {\r\n\r\n    return function(event, element) {\r\n      // actual split\r\n      modeling.splitLane(element, count);\r\n\r\n      // refresh context pad after split to\r\n      // get rid of split icons\r\n      contextPad.open(element, true);\r\n    };\r\n  }\r\n\r\n\r\n  if (isAny(businessObject, [ 'bpmn:Lane', 'bpmn:Participant' ]) && isExpanded(businessObject)) {\r\n\r\n    var childLanes = getChildLanes(element);\r\n\r\n    assign(actions, {\r\n      'lane-insert-above': {\r\n        group: 'lane-insert-above',\r\n        className: 'bpmn-icon-lane-insert-above',\r\n        title: translate('Add Lane above'),\r\n        action: {\r\n          click: function(event, element) {\r\n            modeling.addLane(element, 'top');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (childLanes.length < 2) {\r\n\r\n      if (element.height >= 120) {\r\n        assign(actions, {\r\n          'lane-divide-two': {\r\n            group: 'lane-divide',\r\n            className: 'bpmn-icon-lane-divide-two',\r\n            title: translate('Divide into two Lanes'),\r\n            action: {\r\n              click: splitLaneHandler(2)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (element.height >= 180) {\r\n        assign(actions, {\r\n          'lane-divide-three': {\r\n            group: 'lane-divide',\r\n            className: 'bpmn-icon-lane-divide-three',\r\n            title: translate('Divide into three Lanes'),\r\n            action: {\r\n              click: splitLaneHandler(3)\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    assign(actions, {\r\n      'lane-insert-below': {\r\n        group: 'lane-insert-below',\r\n        className: 'bpmn-icon-lane-insert-below',\r\n        title: translate('Add Lane below'),\r\n        action: {\r\n          click: function(event, element) {\r\n            modeling.addLane(element, 'bottom');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:FlowNode')) {\r\n\r\n    if (is(businessObject, 'bpmn:EventBasedGateway')) {\r\n\r\n      assign(actions, {\r\n        'append.receive-task': appendAction('bpmn:ReceiveTask', 'bpmn-icon-receive-task'),\r\n        'append.message-intermediate-event': appendAction('bpmn:IntermediateCatchEvent',\r\n                                                  'bpmn-icon-intermediate-event-catch-message',\r\n                                                  { eventDefinitionType: 'bpmn:MessageEventDefinition' }),\r\n        'append.timer-intermediate-event': appendAction('bpmn:IntermediateCatchEvent',\r\n                                                  'bpmn-icon-intermediate-event-catch-timer',\r\n                                                  { eventDefinitionType: 'bpmn:TimerEventDefinition' }),\r\n        'append.condtion-intermediate-event': appendAction('bpmn:IntermediateCatchEvent',\r\n                                                  'bpmn-icon-intermediate-event-catch-condition',\r\n                                                  { eventDefinitionType: 'bpmn:ConditionalEventDefinition' }),\r\n        'append.signal-intermediate-event': appendAction('bpmn:IntermediateCatchEvent',\r\n                                                  'bpmn-icon-intermediate-event-catch-signal',\r\n                                                  { eventDefinitionType: 'bpmn:SignalEventDefinition' })\r\n      });\r\n    } else\r\n\r\n    if (isEventType(businessObject, 'bpmn:BoundaryEvent', 'bpmn:CompensateEventDefinition')) {\r\n\r\n      assign(actions, {\r\n        'append.compensation-activity':\r\n            appendAction('bpmn:Task', 'bpmn-icon-task', translate('Append compensation activity'), {\r\n              isForCompensation: true\r\n            })\r\n      });\r\n    } else\r\n\r\n    if (!is(businessObject, 'bpmn:EndEvent') &&\r\n        !businessObject.isForCompensation &&\r\n        !isEventType(businessObject, 'bpmn:IntermediateThrowEvent', 'bpmn:LinkEventDefinition') &&\r\n        !isEventSubProcess(businessObject)) {\r\n\r\n      assign(actions, {\r\n        'append.end-event': appendAction('bpmn:EndEvent', 'bpmn-icon-end-event-none'),\r\n        'append.gateway': appendAction('bpmn:ExclusiveGateway', 'bpmn-icon-gateway-xor'),\r\n        'append.append-task': appendAction('bpmn:Task', 'bpmn-icon-task'),\r\n        'append.intermediate-event': appendAction('bpmn:IntermediateThrowEvent',\r\n                                                  'bpmn-icon-intermediate-event-none')\r\n      });\r\n    }\r\n  }\r\n\r\n  var replaceMenu;\r\n\r\n  if (popupMenu._providers['bpmn-replace']) {\r\n    replaceMenu = popupMenu.create('bpmn-replace', element);\r\n  }\r\n\r\n  if (replaceMenu && !replaceMenu.isEmpty()) {\r\n\r\n    // Replace menu entry\r\n    assign(actions, {\r\n      'replace': {\r\n        group: 'edit',\r\n        className: 'bpmn-icon-screw-wrench',\r\n        title: translate('Change type'),\r\n        action: {\r\n          click: function(event, element) {\r\n            replaceMenu.open(assign(getReplaceMenuPosition(element), {\r\n              cursor: { x: event.x, y: event.y }\r\n            }), element);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (isAny(businessObject, [\r\n    'bpmn:FlowNode',\r\n    'bpmn:InteractionNode',\r\n    'bpmn:DataObjectReference',\r\n    'bpmn:DataStoreReference'\r\n  ]) ) {\r\n\r\n    assign(actions, {\r\n      'append.text-annotation': appendAction('bpmn:TextAnnotation', 'bpmn-icon-text-annotation'),\r\n\r\n      'connect': {\r\n        group: 'connect',\r\n        className: 'bpmn-icon-connection-multi',\r\n        title: translate('Connect using ' +\r\n                  (businessObject.isForCompensation ? '' : 'Sequence/MessageFlow or ') +\r\n                  'Association'),\r\n        action: {\r\n          click: startConnect,\r\n          dragstart: startConnect\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (isAny(businessObject, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\r\n    assign(actions, {\r\n      'connect': {\r\n        group: 'connect',\r\n        className: 'bpmn-icon-connection-multi',\r\n        title: translate('Connect using DataInputAssociation'),\r\n        action: {\r\n          click: startConnect,\r\n          dragstart: startConnect\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // delete element entry, only show if allowed by rules\r\n  var deleteAllowed = rules.allowed('elements.delete', { elements: [ element ] });\r\n\r\n  if (isArray(deleteAllowed)) {\r\n    // was the element returned as a deletion candidate?\r\n    deleteAllowed = deleteAllowed[0] === element;\r\n  }\r\n\r\n  if (deleteAllowed) {\r\n    assign(actions, {\r\n      'delete': {\r\n        group: 'edit',\r\n        className: 'bpmn-icon-trash',\r\n        title: translate('Remove'),\r\n        action: {\r\n          click: removeElement,\r\n          dragstart: removeElement\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return actions;\r\n};\r\n\r\nfunction isEventType(eventBo, type, definition) {\r\n\r\n  var isType = eventBo.$instanceOf(type);\r\n  var isDefinition = false;\r\n\r\n  var definitions = eventBo.eventDefinitions || [];\r\n  forEach(definitions, function(def) {\r\n    if (def.$type === definition) {\r\n      isDefinition = true;\r\n    }\r\n  });\r\n\r\n  return isType && isDefinition;\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(114),\r\n    require(153),\r\n    require(233),\r\n    require(151),\r\n    require(157),\r\n    require(74)\r\n  ],\r\n  __init__: [ 'contextPadProvider' ],\r\n  contextPadProvider: [ 'type', require(11) ]\r\n};","'use strict';\r\n\r\nvar ModelUtil = require(95),\r\n    getBusinessObject = ModelUtil.getBusinessObject,\r\n    is = ModelUtil.is;\r\n\r\nvar ModelCloneHelper = require(97);\r\n\r\nvar ModelCloneUtils = require(98),\r\n    getProperties = ModelCloneUtils.getProperties;\r\n\r\nvar IGNORED_PROPERTIES = ModelCloneUtils.IGNORED_PROPERTIES;\r\n\r\nvar filter = require(301),\r\n    forEach = require(303);\r\n\r\nfunction setProperties(descriptor, data, properties) {\r\n  forEach(properties, function(property) {\r\n    if (data[property] !== undefined) {\r\n      descriptor[property] = data[property];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeProperties(element, properties) {\r\n  forEach(properties, function(prop) {\r\n    if (element[prop]) {\r\n      delete element[prop];\r\n    }\r\n  });\r\n}\r\n\r\nfunction BpmnCopyPaste(\r\n    bpmnFactory, eventBus, copyPaste,\r\n    clipboard, canvas, bpmnRules) {\r\n\r\n  var helper = new ModelCloneHelper(eventBus);\r\n\r\n  copyPaste.registerDescriptor(function(element, descriptor) {\r\n    var businessObject = descriptor.oldBusinessObject = getBusinessObject(element);\r\n\r\n    var colors = {};\r\n\r\n    descriptor.type = element.type;\r\n\r\n    setProperties(descriptor, businessObject.di, [ 'isExpanded' ]);\r\n\r\n    setProperties(colors, businessObject.di, [ 'fill', 'stroke' ]);\r\n\r\n    descriptor.colors = colors;\r\n\r\n    if (element.type === 'label') {\r\n      return descriptor;\r\n    }\r\n\r\n    setProperties(descriptor, businessObject, [\r\n      'type',\r\n      'processRef',\r\n      'triggeredByEvent'\r\n    ]);\r\n\r\n    if (businessObject.default) {\r\n      descriptor.default = businessObject.default.id;\r\n    }\r\n\r\n    return descriptor;\r\n  });\r\n\r\n  eventBus.on('element.paste', function(context) {\r\n    var descriptor = context.descriptor,\r\n        createdElements = context.createdElements,\r\n        parent = descriptor.parent,\r\n        rootElement = canvas.getRootElement(),\r\n        oldBusinessObject = descriptor.oldBusinessObject,\r\n        newBusinessObject,\r\n        source,\r\n        target,\r\n        canConnect;\r\n\r\n    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);\r\n\r\n    var properties = getProperties(oldBusinessObject.$descriptor);\r\n\r\n    properties = filter(properties, function(property) {\r\n      return IGNORED_PROPERTIES.indexOf(property.replace(/bpmn:/, '')) === -1;\r\n    });\r\n\r\n    descriptor.businessObject = helper.clone(oldBusinessObject, newBusinessObject, properties);\r\n\r\n    if (descriptor.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    if (is(parent, 'bpmn:Process')) {\r\n      descriptor.parent = is(rootElement, 'bpmn:Collaboration') ? rootElement : parent;\r\n    }\r\n\r\n    if (descriptor.type === 'bpmn:DataOutputAssociation' ||\r\n        descriptor.type === 'bpmn:DataInputAssociation' ||\r\n        descriptor.type === 'bpmn:MessageFlow') {\r\n      descriptor.parent = rootElement;\r\n    }\r\n\r\n    if (is(parent, 'bpmn:Lane')) {\r\n      descriptor.parent = parent.parent;\r\n    }\r\n\r\n    // make sure that the correct type of connection is created\r\n    if (descriptor.waypoints) {\r\n      source = createdElements[descriptor.source];\r\n      target = createdElements[descriptor.target];\r\n\r\n      if (source && target) {\r\n        source = source.element;\r\n        target = target.element;\r\n      }\r\n\r\n      canConnect = bpmnRules.canConnect(source, target);\r\n\r\n      if (canConnect) {\r\n        descriptor.type = canConnect.type;\r\n      }\r\n    }\r\n\r\n    // remove the id or else we cannot paste multiple times\r\n    delete newBusinessObject.id;\r\n\r\n    // assign an ID\r\n    bpmnFactory._ensureId(newBusinessObject);\r\n\r\n    if (descriptor.type === 'bpmn:Participant' && descriptor.processRef) {\r\n      descriptor.processRef = newBusinessObject.processRef = bpmnFactory.create('bpmn:Process');\r\n    }\r\n\r\n    setProperties(newBusinessObject, descriptor, [\r\n      'isExpanded',\r\n      'triggeredByEvent'\r\n    ]);\r\n\r\n    removeProperties(descriptor, [\r\n      'triggeredByEvent'\r\n    ]);\r\n  });\r\n\r\n}\r\n\r\n\r\nBpmnCopyPaste.$inject = [\r\n  'bpmnFactory',\r\n  'eventBus',\r\n  'copyPaste',\r\n  'clipboard',\r\n  'canvas',\r\n  'bpmnRules'\r\n];\r\n\r\nmodule.exports = BpmnCopyPaste;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(155)\r\n  ],\r\n  __init__: [ 'bpmnCopyPaste' ],\r\n  bpmnCopyPaste: [ 'type', require(13) ]\r\n};\r\n","'use strict';\r\n\r\nvar filter = require(301);\r\n\r\nvar isAny = require(68).isAny;\r\n\r\n/**\r\n * Registers element exclude filters for elements that currently do \r\n * not support distribution.\r\n */\r\nfunction BpmnDistributeElements(distributeElements) {\r\n\r\n  distributeElements.registerFilter(function(elements) {\r\n    return filter(elements, function(element) {\r\n      var cannotDistribute = isAny(element, [\r\n        'bpmn:Association',\r\n        'bpmn:BoundaryEvent',\r\n        'bpmn:DataInputAssociation',\r\n        'bpmn:DataOutputAssociation',\r\n        'bpmn:Lane',\r\n        'bpmn:MessageFlow',\r\n        'bpmn:Participant',\r\n        'bpmn:SequenceFlow',\r\n        'bpmn:TextAnnotation'\r\n      ]);\r\n\r\n      return !(element.labelTarget || cannotDistribute);\r\n    });\r\n  });\r\n}\r\n\r\nBpmnDistributeElements.$inject = [ 'distributeElements' ];\r\n\r\nmodule.exports = BpmnDistributeElements;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(159)\r\n  ],\r\n  __init__: [ 'bpmnDistributeElements' ],\r\n  bpmnDistributeElements: [ 'type', require(15) ]\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar EditorActions = require(163);\r\n\r\nvar filter = require(301);\r\n\r\nvar is = require(95).is;\r\n\r\nvar getBBox = require(266).getBBox;\r\n\r\nfunction BpmnEditorActions(\r\n    injector,\r\n    canvas, elementRegistry, selection,\r\n    spaceTool,\r\n    lassoTool,\r\n    handTool,\r\n    globalConnect,\r\n    distributeElements,\r\n    alignElements,\r\n    directEditing,\r\n    searchPad,\r\n    modeling) {\r\n\r\n  injector.invoke(EditorActions, this);\r\n\r\n  this.register({\r\n    selectElements: function() {\r\n      // select all elements except for the invisible\r\n      // root element\r\n      var rootElement = canvas.getRootElement();\r\n\r\n      var elements = elementRegistry.filter(function(element) {\r\n        return element !== rootElement;\r\n      });\r\n\r\n      selection.select(elements);\r\n\r\n      return elements;\r\n    },\r\n    spaceTool: function() {\r\n      spaceTool.toggle();\r\n    },\r\n    lassoTool: function() {\r\n      lassoTool.toggle();\r\n    },\r\n    handTool: function() {\r\n      handTool.toggle();\r\n    },\r\n    globalConnectTool: function() {\r\n      globalConnect.toggle();\r\n    },\r\n    distributeElements: function(opts) {\r\n      var currentSelection = selection.get(),\r\n          type = opts.type;\r\n\r\n      if (currentSelection.length) {\r\n        distributeElements.trigger(currentSelection, type);\r\n      }\r\n    },\r\n    alignElements: function(opts) {\r\n      var currentSelection = selection.get(),\r\n          aligneableElements = [],\r\n          type = opts.type;\r\n\r\n      if (currentSelection.length) {\r\n        aligneableElements = filter(currentSelection, function(element) {\r\n          return !is(element, 'bpmn:Lane');\r\n        });\r\n\r\n        alignElements.trigger(aligneableElements, type);\r\n      }\r\n    },\r\n    setColor: function(opts) {\r\n      var currentSelection = selection.get();\r\n\r\n      if (currentSelection.length) {\r\n        modeling.setColor(currentSelection, opts);\r\n      }\r\n    },\r\n    directEditing: function() {\r\n      var currentSelection = selection.get();\r\n\r\n      if (currentSelection.length) {\r\n        directEditing.activate(currentSelection[0]);\r\n      }\r\n    },\r\n    find: function() {\r\n      searchPad.toggle();\r\n    },\r\n    moveToOrigin: function() {\r\n      var rootElement = canvas.getRootElement(),\r\n          boundingBox,\r\n          elements;\r\n\r\n      if (is(rootElement, 'bpmn:Collaboration')) {\r\n        elements = elementRegistry.filter(function(element) {\r\n          return is(element.parent, 'bpmn:Collaboration');\r\n        });\r\n      } else {\r\n        elements = elementRegistry.filter(function(element) {\r\n          return element !== rootElement && !is(element.parent, 'bpmn:SubProcess');\r\n        });\r\n      }\r\n\r\n      boundingBox = getBBox(elements);\r\n\r\n      modeling.moveElements(elements, { x: -boundingBox.x, y: -boundingBox.y }, rootElement);\r\n    }\r\n  });\r\n}\r\n\r\ninherits(BpmnEditorActions, EditorActions);\r\n\r\nBpmnEditorActions.$inject = [\r\n  'injector',\r\n  'canvas', 'elementRegistry', 'selection',\r\n  'spaceTool',\r\n  'lassoTool',\r\n  'handTool',\r\n  'globalConnect',\r\n  'distributeElements',\r\n  'alignElements',\r\n  'directEditing',\r\n  'searchPad',\r\n  'modeling'\r\n];\r\n\r\nmodule.exports = BpmnEditorActions;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(133),\r\n    require(164),\r\n    require(168),\r\n    require(176),\r\n    require(240),\r\n    require(20),\r\n    require(14),\r\n    require(16),\r\n    require(84),\r\n    require(66)\r\n  ],\r\n  editorActions: [ 'type', require(17) ]\r\n};\r\n","'use strict';\r\n\r\nvar isAny = require(68).isAny;\r\n\r\n/**\r\n * Extention of GlobalConnect tool that implements BPMN specific rules about\r\n * connection start elements.\r\n */\r\nfunction BpmnGlobalConnect(globalConnect) {\r\n  globalConnect.registerProvider(this);\r\n}\r\n\r\nBpmnGlobalConnect.$inject = [ 'globalConnect' ];\r\n\r\nmodule.exports = BpmnGlobalConnect;\r\n\r\n\r\n/**\r\n * Checks if given element can be used for starting connection.\r\n *\r\n * @param  {Element} source\r\n * @return {Boolean}\r\n */\r\nBpmnGlobalConnect.prototype.canStartConnect = function(source) {\r\n\r\n  if (nonExistantOrLabel(source)) {\r\n    return null;\r\n  }\r\n\r\n  var businessObject = source.businessObject;\r\n\r\n  return isAny(businessObject, [\r\n    'bpmn:FlowNode',\r\n    'bpmn:InteractionNode',\r\n    'bpmn:DataObjectReference',\r\n    'bpmn:DataStoreReference'\r\n  ]);\r\n};\r\n\r\n\r\nfunction nonExistantOrLabel(element) {\r\n  return !element || isLabel(element);\r\n}\r\n\r\nfunction isLabel(element) {\r\n  return element.labelTarget;\r\n}\r\n\r\n\r\n","module.exports = {\r\n  __depends__: [\r\n    require(166)\r\n  ],\r\n  __init__: [ 'bpmnGlobalConnect' ],\r\n  bpmnGlobalConnect: [ 'type', require(19) ]\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * BPMN 2.0 specific key bindings.\r\n *\r\n * @param {Keyboard} keyboard\r\n * @param {EditorActions} editorActions\r\n */\r\nfunction BpmnKeyBindings(keyboard, editorActions) {\r\n\r\n  keyboard.addListener(function(key, modifiers) {\r\n\r\n    // ctrl + a -> select all elements\r\n    if (key === 65 && keyboard.isCmd(modifiers)) {\r\n      editorActions.trigger('selectElements');\r\n\r\n      return true;\r\n    }\r\n\r\n    // ctrl + f -> search labels\r\n    if (key === 70 && keyboard.isCmd(modifiers)) {\r\n      editorActions.trigger('find');\r\n\r\n      return true;\r\n    }\r\n\r\n    if (keyboard.hasModifier(modifiers)) {\r\n      return;\r\n    }\r\n\r\n    // s -> activate space tool\r\n    if (key === 83) {\r\n      editorActions.trigger('spaceTool');\r\n\r\n      return true;\r\n    }\r\n\r\n    // l -> activate lasso tool\r\n    if (key === 76) {\r\n      editorActions.trigger('lassoTool');\r\n\r\n      return true;\r\n    }\r\n\r\n    // h -> activate hand tool\r\n    if (key === 72) {\r\n      editorActions.trigger('handTool');\r\n\r\n      return true;\r\n    }\r\n\r\n    // c -> activate global connect tool\r\n    if (key === 67) {\r\n      editorActions.trigger('globalConnectTool');\r\n\r\n      return true;\r\n    }\r\n\r\n    // e -> activate direct editing\r\n    if (key === 69) {\r\n      editorActions.trigger('directEditing');\r\n\r\n      return true;\r\n    }\r\n  });\r\n}\r\n\r\nBpmnKeyBindings.$inject = [\r\n  'keyboard',\r\n  'editorActions'\r\n];\r\n\r\nmodule.exports = BpmnKeyBindings;","module.exports = {\r\n  __depends__: [\r\n    require(172)\r\n  ],\r\n  __init__: [ 'bpmnKeyBindings' ],\r\n  bpmnKeyBindings: [ 'type', require(21) ]\r\n};\r\n","var svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar getBusinessObject = require(95).getBusinessObject,\r\n    is = require(95).is;\r\n\r\nvar translate = require(279).translate;\r\n\r\nvar MARKER_HIDDEN = 'djs-element-hidden',\r\n    MARKER_LABEL_HIDDEN = 'djs-label-hidden';\r\n\r\nfunction getStrokeColor(element, defaultColor) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo.di.get('stroke') || defaultColor || 'black';\r\n}\r\n\r\nfunction LabelEditingPreview(eventBus, canvas, elementRegistry, pathMap) {\r\n  var self = this;\r\n\r\n  var defaultLayer = canvas.getDefaultLayer();\r\n\r\n  var element, absoluteElementBBox, gfx;\r\n\r\n  eventBus.on('directEditing.activate', function(context) {\r\n    var activeProvider = context.active;\r\n\r\n    element = activeProvider.element.label || activeProvider.element;\r\n\r\n    // text annotation\r\n    if (is(element, 'bpmn:TextAnnotation')) {\r\n      absoluteElementBBox = canvas.getAbsoluteBBox(element);\r\n\r\n      gfx = svgCreate('g');\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n\r\n      var path = self.path = svgCreate('path');\r\n\r\n      svgAttr(path, {\r\n        d: textPathData,\r\n        strokeWidth: 2,\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      svgAppend(gfx, path);\r\n\r\n      svgAppend(defaultLayer, gfx);\r\n\r\n      translate(gfx, element.x, element.y);\r\n    }\r\n\r\n    if (is(element, 'bpmn:TextAnnotation') ||\r\n        element.labelTarget) {\r\n      canvas.addMarker(element, MARKER_HIDDEN);\r\n    } else if (is(element, 'bpmn:Task') ||\r\n               is(element, 'bpmn:CallActivity') ||\r\n               is(element, 'bpmn:SubProcess') ||\r\n               is(element, 'bpmn:Participant')) {\r\n      canvas.addMarker(element, MARKER_LABEL_HIDDEN);\r\n    }\r\n  });\r\n\r\n  eventBus.on('directEditing.resize', function(context) {\r\n\r\n    // text annotation\r\n    if (is(element, 'bpmn:TextAnnotation')) {\r\n      var height = context.height,\r\n          dy = context.dy;\r\n\r\n      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: newElementHeight,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n\r\n      svgAttr(self.path, {\r\n        d: textPathData\r\n      });\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'directEditing.complete', 'directEditing.cancel' ], function(context) {\r\n    var activeProvider = context.active;\r\n\r\n    if (activeProvider) {\r\n      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);\r\n      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);\r\n    }\r\n\r\n    element = undefined;\r\n    absoluteElementBBox = undefined;\r\n\r\n    if (gfx) {\r\n      svgRemove(gfx);\r\n\r\n      gfx = undefined;\r\n    }\r\n  });\r\n}\r\n\r\nLabelEditingPreview.$inject = [ 'eventBus', 'canvas', 'elementRegistry', 'pathMap' ];\r\n\r\nmodule.exports = LabelEditingPreview;\r\n","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\nvar UpdateLabelHandler = require(26);\r\n\r\nvar LabelUtil = require(25);\r\n\r\nvar is = require(95).is,\r\n    isExpanded = require(93).isExpanded;\r\n\r\nvar SMALL_FONT_SIZE = 11,\r\n    SMALL_LINE_HEIGHT = 13,\r\n    MEDIUM_FONT_SIZE = 12,\r\n    MEDIUM_LINE_HEIGHT = 14;\r\n\r\nfunction LabelEditingProvider(eventBus, canvas, directEditing, commandStack, resizeHandles) {\r\n\r\n  this._canvas = canvas;\r\n  this._commandStack = commandStack;\r\n\r\n  directEditing.registerProvider(this);\r\n\r\n  commandStack.registerHandler('element.updateLabel', UpdateLabelHandler);\r\n\r\n  // listen to dblclick on non-root elements\r\n  eventBus.on('element.dblclick', function(event) {\r\n    directEditing.activate(event.element);\r\n\r\n    resizeHandles.removeResizers();\r\n  });\r\n\r\n  // complete on followup canvas operation\r\n  eventBus.on([ 'element.mousedown', 'drag.init', 'canvas.viewbox.changing' ], function(event) {\r\n    directEditing.complete();\r\n  });\r\n\r\n  // cancel on command stack changes\r\n  eventBus.on([ 'commandStack.changed' ], function(e) {\r\n    directEditing.cancel();\r\n  });\r\n\r\n  if ('ontouchstart' in document.documentElement) {\r\n    // we deactivate automatic label editing on mobile devices\r\n    // as it breaks the user interaction workflow\r\n\r\n    // TODO(nre): we should temporarily focus the edited element here\r\n    // and release the focused viewport after the direct edit operation is finished\r\n  } else {\r\n    eventBus.on('create.end', 500, function(event) {\r\n      var element = event.shape,\r\n          canExecute = event.context.canExecute;\r\n\r\n      if (!canExecute) {\r\n        return;\r\n      }\r\n\r\n      if (is(element, 'bpmn:Task') || is(element, 'bpmn:TextAnnotation') ||\r\n          (is(element, 'bpmn:SubProcess') && !isExpanded(element))) {\r\n        directEditing.activate(element);\r\n\r\n        resizeHandles.removeResizers();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nLabelEditingProvider.$inject = [ 'eventBus', 'canvas', 'directEditing', 'commandStack', 'resizeHandles' ];\r\n\r\nmodule.exports = LabelEditingProvider;\r\n\r\n\r\n/**\r\n * Activate direct editing for activities and text annotations.\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} an object with properties bounds (position and size), text and options\r\n */\r\nLabelEditingProvider.prototype.activate = function(element) {\r\n\r\n  // text\r\n  var text = LabelUtil.getLabel(element);\r\n\r\n  if (text === undefined) {\r\n    return;\r\n  }\r\n\r\n  var context = {\r\n    text: text\r\n  };\r\n\r\n  // bounds\r\n  var bounds = this.getEditingBBox(element);\r\n\r\n  assign(context, bounds);\r\n\r\n  // options\r\n  var target = element.label || element;\r\n\r\n  var options = {};\r\n\r\n  // tasks\r\n  if (is(element, 'bpmn:Task') ||\r\n      is(element, 'bpmn:Participant') ||\r\n      is(element, 'bpmn:Lane') ||\r\n      (is(element, 'bpmn:CallActivity') && !isExpanded(element)) ||\r\n      (is(element, 'bpmn:SubProcess') && !isExpanded(element))) {\r\n    assign(options, {\r\n      centerVertically: true\r\n    });\r\n  }\r\n\r\n  // external labels\r\n  if (target.labelTarget) {\r\n    assign(options, {\r\n      autoResize: true\r\n    });\r\n  }\r\n\r\n  // text annotations\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n    assign(options, {\r\n      resizable: true,\r\n      autoResize: true\r\n    });\r\n  }\r\n\r\n  assign(context, {\r\n    options: options\r\n  });\r\n\r\n  return context;\r\n};\r\n\r\n\r\n/**\r\n * Get the editing bounding box based on the element's size and position\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} an object containing information about position and size (fixed or minimum and/or maximum)\r\n */\r\nLabelEditingProvider.prototype.getEditingBBox = function(element) {\r\n  var canvas = this._canvas;\r\n\r\n  var target = element.label || element;\r\n\r\n  var bbox = canvas.getAbsoluteBBox(target);\r\n\r\n  var mid = {\r\n    x: bbox.x + bbox.width / 2,\r\n    y: bbox.y + bbox.height / 2\r\n  };\r\n\r\n  // default position\r\n  var bounds = { x: bbox.x, y: bbox.y };\r\n\r\n  var zoom = canvas.zoom();\r\n\r\n  // take zoom into account\r\n  var smallFontSize = SMALL_FONT_SIZE * zoom,\r\n      smallLineHeight = SMALL_LINE_HEIGHT * zoom,\r\n      mediumFontSize = MEDIUM_FONT_SIZE * zoom,\r\n      mediumLineHeight = MEDIUM_LINE_HEIGHT * zoom;\r\n\r\n  var style = {};\r\n\r\n  // adjust for expanded pools AND lanes\r\n  if ((is(element, 'bpmn:Participant') && isExpanded(element))\r\n       || is(element, 'bpmn:Lane')) {\r\n\r\n    assign(bounds, {\r\n      width: bbox.height,\r\n      height: 30 * zoom,\r\n      x: bbox.x - bbox.height / 2 + (15 * zoom),\r\n      y: mid.y - (30 * zoom) / 2\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: mediumFontSize + 'px',\r\n      lineHeight: mediumLineHeight + 'px',\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px',\r\n      transform: 'rotate(-90deg)'\r\n    });\r\n  }\r\n\r\n\r\n  // internal labels for tasks and collapsed call activities, sub processes and participants\r\n  if (\r\n    is(element, 'bpmn:Task') ||\r\n    (is(element, 'bpmn:CallActivity') && !isExpanded(element)) ||\r\n    (is(element, 'bpmn:SubProcess') && !isExpanded(element)) ||\r\n    (is(element, 'bpmn:Participant') && !isExpanded(element))\r\n  ) {\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      height: bbox.height\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: mediumFontSize + 'px',\r\n      lineHeight: mediumLineHeight + 'px',\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px'\r\n    });\r\n  }\r\n\r\n\r\n  // internal labels for expanded sub processes\r\n  if (is(element, 'bpmn:SubProcess') && isExpanded(element)) {\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      x: bbox.x\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: mediumFontSize + 'px',\r\n      lineHeight: mediumLineHeight + 'px',\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px'\r\n    });\r\n  }\r\n\r\n\r\n  // external labels for events, data elements, gateways and connections\r\n  if (target.labelTarget) {\r\n    var width = 90 * zoom,\r\n        paddingTop = 7 * zoom,\r\n        paddingBottom = 4 * zoom;\r\n\r\n    assign(bounds, {\r\n      width: width,\r\n      height: bbox.height + paddingTop + paddingBottom,\r\n      x: mid.x - width / 2,\r\n      y: bbox.y - paddingTop\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: smallFontSize + 'px',\r\n      lineHeight: smallLineHeight + 'px',\r\n      paddingTop: paddingTop + 'px',\r\n      paddingBottom: paddingBottom + 'px'\r\n    });\r\n  }\r\n\r\n\r\n  // text annotations\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      height: bbox.height,\r\n      minWidth: 30 * zoom,\r\n      minHeight: 10 * zoom\r\n    });\r\n\r\n    assign(style, {\r\n      textAlign: 'left',\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px',\r\n      fontSize: mediumFontSize + 'px',\r\n      lineHeight: mediumLineHeight + 'px'\r\n    });\r\n  }\r\n\r\n  return { bounds: bounds, style: style };\r\n};\r\n\r\n\r\nLabelEditingProvider.prototype.update = function(element, newLabel, activeContextText, bounds) {\r\n  var absoluteElementBBox = this._canvas.getAbsoluteBBox(element);\r\n\r\n  this._commandStack.execute('element.updateLabel', {\r\n    element: element,\r\n    newLabel: newLabel,\r\n    bounds: {\r\n      x: element.x,\r\n      y: element.y,\r\n      width: element.width / absoluteElementBBox.width * bounds.width,\r\n      height: element.height / absoluteElementBBox.height * bounds.height\r\n    }\r\n  });\r\n};\r\n","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nfunction getLabelAttr(semantic) {\r\n  if (is(semantic, 'bpmn:FlowElement') ||\r\n      is(semantic, 'bpmn:Participant') ||\r\n      is(semantic, 'bpmn:Lane') ||\r\n      is(semantic, 'bpmn:SequenceFlow') ||\r\n      is(semantic, 'bpmn:MessageFlow')) {\r\n\r\n    return 'name';\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:TextAnnotation')) {\r\n    return 'text';\r\n  }\r\n}\r\n\r\nmodule.exports.getLabel = function(element) {\r\n  var semantic = element.businessObject,\r\n      attr = getLabelAttr(semantic);\r\n\r\n  if (attr) {\r\n    return semantic[attr] || '';\r\n  }\r\n};\r\n\r\n\r\nmodule.exports.setLabel = function(element, text, isExternal) {\r\n  var semantic = element.businessObject,\r\n      attr = getLabelAttr(semantic);\r\n\r\n  if (attr) {\r\n    semantic[attr] = text;\r\n  }\r\n\r\n  // show external label if not empty\r\n  if (isExternal) {\r\n    element.hidden = !text;\r\n  }\r\n\r\n  return element;\r\n};","'use strict';\r\n\r\nvar LabelUtil = require(25);\r\n\r\nvar TextUtil = require(280);\r\n\r\nvar hasExternalLabel = require(94).hasExternalLabel;\r\n\r\nvar getBusinessObject = require(95).getBusinessObject,\r\n    is = require(95).is;\r\n\r\nvar NULL_DIMENSIONS = {\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\n\r\n/**\r\n * A handler that updates the text of a BPMN element.\r\n */\r\nfunction UpdateLabelHandler(modeling) {\r\n\r\n  var textUtil = new TextUtil();\r\n\r\n  /**\r\n   * Set the label and return the changed elements.\r\n   *\r\n   * Element parameter can be label itself or connection (i.e. sequence flow).\r\n   *\r\n   * @param {djs.model.Base} element\r\n   * @param {String} text\r\n   */\r\n  function setText(element, text) {\r\n\r\n    // external label if present\r\n    var label = element.label || element;\r\n\r\n    var labelTarget = element.labelTarget || element;\r\n\r\n    LabelUtil.setLabel(label, text, labelTarget !== label);\r\n\r\n    return [ label, labelTarget ];\r\n  }\r\n\r\n  function execute(ctx) {\r\n    ctx.oldLabel = LabelUtil.getLabel(ctx.element);\r\n    return setText(ctx.element, ctx.newLabel);\r\n  }\r\n\r\n  function revert(ctx) {\r\n    return setText(ctx.element, ctx.oldLabel);\r\n  }\r\n\r\n  function postExecute(ctx) {\r\n    var element = ctx.element,\r\n        label = element.label || element,\r\n        bounds = ctx.bounds;\r\n\r\n    // ignore internal labels for elements except text annotations\r\n    if (!hasExternalLabel(element) && !is(element, 'bpmn:TextAnnotation')) {\r\n      return;\r\n    }\r\n\r\n    var bo = getBusinessObject(label);\r\n\r\n    var text = bo.name || bo.text;\r\n\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    // get layouted text bounds and resize external\r\n    // external label accordingly\r\n    var newBounds = is(element, 'bpmn:TextAnnotation') ? bounds : getLayoutedBounds(label, text, textUtil);\r\n\r\n    modeling.resizeShape(label, newBounds, NULL_DIMENSIONS);\r\n  }\r\n\r\n  // API\r\n\r\n  this.execute = execute;\r\n  this.revert = revert;\r\n  this.postExecute = postExecute;\r\n}\r\n\r\nUpdateLabelHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = UpdateLabelHandler;\r\n\r\n\r\n// TODO(nikku): repeating code (search for <getLayoutedBounds>)\r\n\r\nvar EXTERNAL_LABEL_STYLE = {\r\n  fontFamily: 'Arial, sans-serif',\r\n  fontSize: '11px'\r\n};\r\n\r\nfunction getLayoutedBounds(bounds, text, textUtil) {\r\n\r\n  var layoutedLabelDimensions = textUtil.getDimensions(text, {\r\n    box: {\r\n      width: 90,\r\n      height: 30,\r\n      x: bounds.width / 2 + bounds.x,\r\n      y: bounds.height / 2 + bounds.y\r\n    },\r\n    style: EXTERNAL_LABEL_STYLE\r\n  });\r\n\r\n  // resize label shape to fit label text\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2 - layoutedLabelDimensions.width / 2),\r\n    y: Math.round(bounds.y),\r\n    width: Math.ceil(layoutedLabelDimensions.width),\r\n    height: Math.ceil(layoutedLabelDimensions.height)\r\n  };\r\n}","module.exports = {\r\n  __depends__: [\r\n    require(121),\r\n    require(147),\r\n    require(224),\r\n    require(114)\r\n  ],\r\n  __init__: [\r\n    'labelEditingProvider',\r\n    'labelEditingPreview'\r\n  ],\r\n  labelEditingProvider: [ 'type', require(24) ],\r\n  labelEditingPreview: [ 'type', require(23) ]\r\n};\r\n","'use strict';\r\n\r\nvar map = require(305),\r\n    assign = require(431),\r\n    pick = require(438);\r\n\r\n\r\nfunction BpmnFactory(moddle) {\r\n  this._model = moddle;\r\n}\r\n\r\nBpmnFactory.$inject = [ 'moddle' ];\r\n\r\n\r\nBpmnFactory.prototype._needsId = function(element) {\r\n  return element.$instanceOf('bpmn:RootElement') ||\r\n         element.$instanceOf('bpmn:FlowElement') ||\r\n         element.$instanceOf('bpmn:MessageFlow') ||\r\n         element.$instanceOf('bpmn:DataAssociation') ||\r\n         element.$instanceOf('bpmn:Artifact') ||\r\n         element.$instanceOf('bpmn:Participant') ||\r\n         element.$instanceOf('bpmn:Lane') ||\r\n         element.$instanceOf('bpmn:Process') ||\r\n         element.$instanceOf('bpmn:Collaboration') ||\r\n         element.$instanceOf('bpmndi:BPMNShape') ||\r\n         element.$instanceOf('bpmndi:BPMNEdge') ||\r\n         element.$instanceOf('bpmndi:BPMNDiagram') ||\r\n         element.$instanceOf('bpmndi:BPMNPlane') ||\r\n         element.$instanceOf('bpmn:Property');\r\n};\r\n\r\nBpmnFactory.prototype._ensureId = function(element) {\r\n\r\n  // generate semantic ids for elements\r\n  // bpmn:SequenceFlow -> SequenceFlow_ID\r\n  var prefix = (element.$type || '').replace(/^[^:]*:/g, '') + '_';\r\n\r\n  if (!element.id && this._needsId(element)) {\r\n    element.id = this._model.ids.nextPrefixed(prefix, element);\r\n  }\r\n};\r\n\r\n\r\nBpmnFactory.prototype.create = function(type, attrs) {\r\n  var element = this._model.create(type, attrs || {});\r\n\r\n  this._ensureId(element);\r\n\r\n  return element;\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiLabel = function() {\r\n  return this.create('bpmndi:BPMNLabel', {\r\n    bounds: this.createDiBounds()\r\n  });\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiShape = function(semantic, bounds, attrs) {\r\n\r\n  return this.create('bpmndi:BPMNShape', assign({\r\n    bpmnElement: semantic,\r\n    bounds: this.createDiBounds(bounds)\r\n  }, attrs));\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiBounds = function(bounds) {\r\n  return this.create('dc:Bounds', bounds);\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiWaypoints = function(waypoints) {\r\n  return map(waypoints, function(pos) {\r\n    return this.createDiWaypoint(pos);\r\n  }, this);\r\n};\r\n\r\nBpmnFactory.prototype.createDiWaypoint = function(point) {\r\n  return this.create('dc:Point', pick(point, [ 'x', 'y' ]));\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiEdge = function(semantic, waypoints, attrs) {\r\n  return this.create('bpmndi:BPMNEdge', assign({\r\n    bpmnElement: semantic\r\n  }, attrs));\r\n};\r\n\r\nBpmnFactory.prototype.createDiPlane = function(semantic) {\r\n  return this.create('bpmndi:BPMNPlane', {\r\n    bpmnElement: semantic\r\n  });\r\n};\r\n\r\nmodule.exports = BpmnFactory;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar assign = require(431);\r\n\r\nvar BaseLayouter = require(250),\r\n    ManhattanLayout = require(253);\r\n\r\nvar LayoutUtil = require(252);\r\n\r\nvar isExpanded = require(93).isExpanded;\r\n\r\nvar getMid = LayoutUtil.getMid,\r\n    getOrientation = LayoutUtil.getOrientation;\r\n\r\nvar is = require(95).is;\r\n\r\n\r\nfunction BpmnLayouter() {}\r\n\r\ninherits(BpmnLayouter, BaseLayouter);\r\n\r\nmodule.exports = BpmnLayouter;\r\n\r\n\r\nBpmnLayouter.prototype.layoutConnection = function(connection, hints) {\r\n\r\n  hints = hints || {};\r\n\r\n  var source = connection.source,\r\n      target = connection.target,\r\n      waypoints = connection.waypoints,\r\n      start = hints.connectionStart,\r\n      end = hints.connectionEnd;\r\n\r\n  var manhattanOptions,\r\n      updatedWaypoints;\r\n\r\n  if (!start) {\r\n    start = getConnectionDocking(waypoints && waypoints[0], source);\r\n  }\r\n\r\n  if (!end) {\r\n    end = getConnectionDocking(waypoints && waypoints[waypoints.length - 1], target);\r\n  }\r\n\r\n  // TODO(nikku): support vertical modeling\r\n  // and invert preferredLayouts accordingly\r\n\r\n  if (is(connection, 'bpmn:Association') ||\r\n      is(connection, 'bpmn:DataAssociation')) {\r\n\r\n    if (waypoints && !isCompensationAssociation(connection)) {\r\n      return [].concat([ start ], waypoints.slice(1, -1), [ end ]);\r\n    }\r\n  }\r\n\r\n  // manhattan layout sequence / message flows\r\n  if (is(connection, 'bpmn:MessageFlow')) {\r\n    manhattanOptions = {\r\n      preferredLayouts: [ 'v:v' ]\r\n    };\r\n\r\n    if (is(target, 'bpmn:Participant')) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'straight', 'v:v' ]\r\n      };\r\n    }\r\n\r\n    if (isExpandedSubProcess(target)) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'straight', 'v:v' ]\r\n      };\r\n    }\r\n\r\n    if (isExpandedSubProcess(source) && is(target, 'bpmn:FlowNode')) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'straight', 'v:v' ],\r\n        preserveDocking: isExpandedSubProcess(target) ? 'source' : 'target'\r\n      };\r\n    }\r\n\r\n    if (is(source, 'bpmn:Participant') && is(target, 'bpmn:FlowNode')) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'straight', 'v:v' ],\r\n        preserveDocking: 'target'\r\n      };\r\n    }\r\n\r\n    if (is(target, 'bpmn:Event')) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'v:v' ]\r\n      };\r\n    }\r\n  } else\r\n\r\n\r\n  // layout all connection between flow elements h:h,\r\n  //\r\n  // except for\r\n  //\r\n  // (1) outgoing of BoundaryEvents -> layout h:v or v:h based on attach orientation\r\n  // (2) incoming / outgoing of Gateway -> v:h (outgoing), h:v (incoming)\r\n  //\r\n  if (is(connection, 'bpmn:SequenceFlow') ||\r\n      isCompensationAssociation(connection)) {\r\n\r\n    // make sure boundary event connections do\r\n    // not look ugly =:>\r\n    if (is(source, 'bpmn:BoundaryEvent')) {\r\n\r\n      var orientation = getAttachOrientation(source);\r\n\r\n      if (/left|right/.test(orientation)) {\r\n        manhattanOptions = {\r\n          preferredLayouts: [ 'h:v' ]\r\n        };\r\n      } else\r\n\r\n      if (/top|bottom/.test(orientation)) {\r\n        manhattanOptions = {\r\n          preferredLayouts: [ 'v:h' ]\r\n        };\r\n      }\r\n    } else\r\n\r\n    if (is(source, 'bpmn:Gateway')) {\r\n\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'v:h' ]\r\n      };\r\n    } else\r\n\r\n    if (is(target, 'bpmn:Gateway')) {\r\n\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'h:v' ]\r\n      };\r\n    }\r\n\r\n    // apply horizontal love <3\r\n    else {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'h:h' ]\r\n      };\r\n    }\r\n  }\r\n\r\n  if (manhattanOptions) {\r\n\r\n    manhattanOptions = assign(manhattanOptions, hints);\r\n\r\n    updatedWaypoints =\r\n      ManhattanLayout.repairConnection(\r\n        source, target,\r\n        start, end,\r\n        waypoints,\r\n        manhattanOptions);\r\n  }\r\n\r\n  return updatedWaypoints || [ start, end ];\r\n};\r\n\r\n\r\nfunction getAttachOrientation(attachedElement) {\r\n\r\n  var hostElement = attachedElement.host,\r\n      padding = -10;\r\n\r\n  return getOrientation(getMid(attachedElement), hostElement, padding);\r\n}\r\n\r\n\r\nfunction getConnectionDocking(point, shape) {\r\n  return point ? (point.original || point) : getMid(shape);\r\n}\r\n\r\nfunction isCompensationAssociation(connection) {\r\n\r\n  var source = connection.source,\r\n      target = connection.target;\r\n\r\n  return is(target, 'bpmn:Activity') &&\r\n         is(source, 'bpmn:BoundaryEvent') &&\r\n         target.businessObject.isForCompensation;\r\n}\r\n\r\n\r\nfunction isExpandedSubProcess(element) {\r\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\r\n}","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    inherits = require(289);\r\n\r\nvar Collections = require(263),\r\n    Model = require(254);\r\n\r\nvar getBusinessObject = require(95).getBusinessObject,\r\n    is = require(95).is;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n/**\r\n * A handler responsible for updating the underlying BPMN 2.0 XML + DI\r\n * once changes on the diagram happen\r\n */\r\nfunction BpmnUpdater(eventBus, bpmnFactory, connectionDocking, translate) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._bpmnFactory = bpmnFactory;\r\n  this._translate = translate;\r\n\r\n  var self = this;\r\n\r\n\r\n\r\n  ////// connection cropping /////////////////////////\r\n\r\n  // crop connection ends during create/update\r\n  function cropConnection(e) {\r\n    var context = e.context,\r\n        connection;\r\n\r\n    if (!context.cropped) {\r\n      connection = context.connection;\r\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\r\n      context.cropped = true;\r\n    }\r\n  }\r\n\r\n  this.executed([\r\n    'connection.layout',\r\n    'connection.create',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], cropConnection);\r\n\r\n  this.reverted([ 'connection.layout' ], function(e) {\r\n    delete e.context.cropped;\r\n  });\r\n\r\n\r\n\r\n  ////// BPMN + DI update /////////////////////////\r\n\r\n\r\n  // update parent\r\n  function updateParent(e) {\r\n    var context = e.context;\r\n\r\n    self.updateParent(context.shape || context.connection, context.oldParent);\r\n  }\r\n\r\n  function reverseUpdateParent(e) {\r\n    var context = e.context;\r\n\r\n    var element = context.shape || context.connection,\r\n        // oldParent is the (old) new parent, because we are undoing\r\n        oldParent = context.parent || context.newParent;\r\n\r\n    self.updateParent(element, oldParent);\r\n  }\r\n\r\n  this.executed([\r\n    'shape.move',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete'\r\n  ], ifBpmn(updateParent));\r\n\r\n  this.reverted([\r\n    'shape.move',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete'\r\n  ], ifBpmn(reverseUpdateParent));\r\n\r\n  /*\r\n   * ## Updating Parent\r\n   *\r\n   * When morphing a Process into a Collaboration or vice-versa,\r\n   * make sure that both the *semantic* and *di* parent of each element\r\n   * is updated.\r\n   *\r\n   */\r\n  function updateRoot(event) {\r\n    var context = event.context,\r\n        oldRoot = context.oldRoot,\r\n        children = oldRoot.children;\r\n\r\n    forEach(children, function(child) {\r\n      if (is(child, 'bpmn:BaseElement')) {\r\n        self.updateParent(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.executed([ 'canvas.updateRoot' ], updateRoot);\r\n  this.reverted([ 'canvas.updateRoot' ], updateRoot);\r\n\r\n\r\n  // update bounds\r\n  function updateBounds(e) {\r\n    var shape = e.context.shape;\r\n\r\n    if (!is(shape, 'bpmn:BaseElement')) {\r\n      return;\r\n    }\r\n\r\n    self.updateBounds(shape);\r\n  }\r\n\r\n  this.executed([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\r\n\r\n    // exclude labels because they're handled separately during shape.changed\r\n    if (event.context.shape.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    updateBounds(event);\r\n  }));\r\n\r\n  this.reverted([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\r\n\r\n    // exclude labels because they're handled separately during shape.changed\r\n    if (event.context.shape.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    updateBounds(event);\r\n  }));\r\n\r\n  // Handle labels separately. This is necessary, because the label bounds have to be updated\r\n  // every time its shape changes, not only on move, create and resize.\r\n  eventBus.on('shape.changed', function(event) {\r\n    if (event.element.type === 'label') {\r\n      updateBounds({ context: { shape: event.element } });\r\n    }\r\n  });\r\n\r\n  // attach / detach connection\r\n  function updateConnection(e) {\r\n    self.updateConnection(e.context);\r\n  }\r\n\r\n  this.executed([\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnection));\r\n\r\n  this.reverted([\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnection));\r\n\r\n\r\n  // update waypoints\r\n  function updateConnectionWaypoints(e) {\r\n    self.updateConnectionWaypoints(e.context.connection);\r\n  }\r\n\r\n  this.executed([\r\n    'connection.layout',\r\n    'connection.move',\r\n    'connection.updateWaypoints',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnectionWaypoints));\r\n\r\n  this.reverted([\r\n    'connection.layout',\r\n    'connection.move',\r\n    'connection.updateWaypoints',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnectionWaypoints));\r\n\r\n\r\n  // update Default & Conditional flows\r\n  this.executed([\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(function(e) {\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        businessObject = getBusinessObject(connection),\r\n        oldSource = getBusinessObject(context.oldSource),\r\n        oldTarget = getBusinessObject(context.oldTarget),\r\n        newSource = getBusinessObject(connection.source),\r\n        newTarget = getBusinessObject(connection.target);\r\n\r\n    if (oldSource === newSource || oldTarget === newTarget) {\r\n      return;\r\n    }\r\n\r\n    // on reconnectStart -> default flow\r\n    if (oldSource && oldSource.default === businessObject) {\r\n      context.default = oldSource.default;\r\n      oldSource.default = undefined;\r\n    }\r\n\r\n    // on reconnectEnd -> default flow\r\n    if ((businessObject.sourceRef && businessObject.sourceRef.default) &&\r\n        !(is(newTarget, 'bpmn:Activity') ||\r\n          is(newTarget, 'bpmn:EndEvent') ||\r\n          is(newTarget, 'bpmn:Gateway') ||\r\n          is(newTarget, 'bpmn:IntermediateThrowEvent')) ) {\r\n      context.default = businessObject.sourceRef.default;\r\n      businessObject.sourceRef.default = undefined;\r\n    }\r\n\r\n    // on reconnectStart -> conditional flow\r\n    if (oldSource && (businessObject.conditionExpression) &&\r\n      !(is(newSource, 'bpmn:Activity') ||\r\n        is(newSource, 'bpmn:Gateway')) ) {\r\n      context.conditionExpression = businessObject.conditionExpression;\r\n      businessObject.conditionExpression = undefined;\r\n    }\r\n\r\n    // on reconnectEnd -> conditional flow\r\n    if (oldTarget && (businessObject.conditionExpression) &&\r\n        !(is(newTarget, 'bpmn:Activity') ||\r\n          is(newTarget, 'bpmn:EndEvent') ||\r\n          is(newTarget, 'bpmn:Gateway') ||\r\n          is(newTarget, 'bpmn:IntermediateThrowEvent')) ) {\r\n      context.conditionExpression = businessObject.conditionExpression;\r\n      businessObject.conditionExpression = undefined;\r\n    }\r\n  }));\r\n\r\n  this.reverted([\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(function(e) {\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        businessObject = getBusinessObject(connection),\r\n        newSource = getBusinessObject(connection.source);\r\n\r\n    // default flow\r\n    if (context.default) {\r\n      if (is(newSource, 'bpmn:ExclusiveGateway') || is(newSource, 'bpmn:InclusiveGateway') ||\r\n          is(newSource, 'bpmn:Activity')) {\r\n        newSource.default = context.default;\r\n      }\r\n    }\r\n\r\n    // conditional flow\r\n    if (context.conditionExpression && is(newSource, 'bpmn:Activity')) {\r\n      businessObject.conditionExpression = context.conditionExpression;\r\n    }\r\n  }));\r\n\r\n  // update attachments\r\n  function updateAttachment(e) {\r\n    self.updateAttachment(e.context);\r\n  }\r\n\r\n  this.executed([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\r\n  this.reverted([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\r\n}\r\n\r\ninherits(BpmnUpdater, CommandInterceptor);\r\n\r\nmodule.exports = BpmnUpdater;\r\n\r\nBpmnUpdater.$inject = [ 'eventBus', 'bpmnFactory', 'connectionDocking', 'translate' ];\r\n\r\n\r\n/////// implementation //////////////////////////////////\r\n\r\nBpmnUpdater.prototype.updateAttachment = function(context) {\r\n\r\n  var shape = context.shape,\r\n      businessObject = shape.businessObject,\r\n      host = shape.host;\r\n\r\n  businessObject.attachedToRef = host && host.businessObject;\r\n};\r\n\r\nBpmnUpdater.prototype.updateParent = function(element, oldParent) {\r\n  // do not update BPMN 2.0 label parent\r\n  if (element instanceof Model.Label) {\r\n    return;\r\n  }\r\n\r\n  var parentShape = element.parent;\r\n\r\n  var businessObject = element.businessObject,\r\n      parentBusinessObject = parentShape && parentShape.businessObject,\r\n      parentDi = parentBusinessObject && parentBusinessObject.di;\r\n\r\n  if (is(element, 'bpmn:FlowNode')) {\r\n    this.updateFlowNodeRefs(businessObject, parentBusinessObject, oldParent && oldParent.businessObject);\r\n  }\r\n\r\n  if (is(element, 'bpmn:DataOutputAssociation')) {\r\n    if (element.source) {\r\n      parentBusinessObject = element.source.businessObject;\r\n    } else {\r\n      parentBusinessObject = null;\r\n    }\r\n  }\r\n\r\n  if (is(element, 'bpmn:DataInputAssociation')) {\r\n    if (element.target) {\r\n      parentBusinessObject = element.target.businessObject;\r\n    } else {\r\n      parentBusinessObject = null;\r\n    }\r\n  }\r\n\r\n  this.updateSemanticParent(businessObject, parentBusinessObject);\r\n\r\n  if (is(element, 'bpmn:DataObjectReference') && businessObject.dataObjectRef) {\r\n    this.updateSemanticParent(businessObject.dataObjectRef, parentBusinessObject);\r\n  }\r\n\r\n  this.updateDiParent(businessObject.di, parentDi);\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateBounds = function(shape) {\r\n\r\n  var di = shape.businessObject.di;\r\n\r\n  var bounds = (shape instanceof Model.Label) ? this._getLabel(di).bounds : di.bounds;\r\n\r\n  assign(bounds, {\r\n    x: shape.x,\r\n    y: shape.y,\r\n    width: shape.width,\r\n    height: shape.height\r\n  });\r\n};\r\n\r\nBpmnUpdater.prototype.updateFlowNodeRefs = function(businessObject, newContainment, oldContainment) {\r\n\r\n  if (oldContainment === newContainment) {\r\n    return;\r\n  }\r\n\r\n  var oldRefs, newRefs;\r\n\r\n  if (is (oldContainment, 'bpmn:Lane')) {\r\n    oldRefs = oldContainment.get('flowNodeRef');\r\n    Collections.remove(oldRefs, businessObject);\r\n  }\r\n\r\n  if (is(newContainment, 'bpmn:Lane')) {\r\n    newRefs = newContainment.get('flowNodeRef');\r\n    Collections.add(newRefs, businessObject);\r\n  }\r\n};\r\n\r\n\r\n// update existing sourceElement and targetElement di information\r\nBpmnUpdater.prototype.updateDiConnection = function(di, newSource, newTarget) {\r\n\r\n  if (di.sourceElement && di.sourceElement.bpmnElement !== newSource) {\r\n    di.sourceElement = newSource && newSource.di;\r\n  }\r\n\r\n  if (di.targetElement && di.targetElement.bpmnElement !== newTarget) {\r\n    di.targetElement = newTarget && newTarget.di;\r\n  }\r\n\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateDiParent = function(di, parentDi) {\r\n\r\n  if (parentDi && !is(parentDi, 'bpmndi:BPMNPlane')) {\r\n    parentDi = parentDi.$parent;\r\n  }\r\n\r\n  if (di.$parent === parentDi) {\r\n    return;\r\n  }\r\n\r\n  var planeElements = (parentDi || di.$parent).get('planeElement');\r\n\r\n  if (parentDi) {\r\n    planeElements.push(di);\r\n    di.$parent = parentDi;\r\n  } else {\r\n    Collections.remove(planeElements, di);\r\n    di.$parent = null;\r\n  }\r\n};\r\n\r\nfunction getDefinitions(element) {\r\n  while (element && !is(element, 'bpmn:Definitions')) {\r\n    element = element.$parent;\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nBpmnUpdater.prototype.getLaneSet = function(container) {\r\n\r\n  var laneSet, laneSets;\r\n\r\n  // bpmn:Lane\r\n  if (is(container, 'bpmn:Lane')) {\r\n    laneSet = container.childLaneSet;\r\n\r\n    if (!laneSet) {\r\n      laneSet = this._bpmnFactory.create('bpmn:LaneSet');\r\n      container.childLaneSet = laneSet;\r\n      laneSet.$parent = container;\r\n    }\r\n\r\n    return laneSet;\r\n  }\r\n\r\n  // bpmn:Participant\r\n  if (is(container, 'bpmn:Participant')) {\r\n    container = container.processRef;\r\n  }\r\n\r\n  // bpmn:FlowElementsContainer\r\n  laneSets = container.get('laneSets');\r\n  laneSet = laneSets[0];\r\n\r\n  if (!laneSet) {\r\n    laneSet = this._bpmnFactory.create('bpmn:LaneSet');\r\n    laneSet.$parent = container;\r\n    laneSets.push(laneSet);\r\n  }\r\n\r\n  return laneSet;\r\n};\r\n\r\nBpmnUpdater.prototype.updateSemanticParent = function(businessObject, newParent, visualParent) {\r\n\r\n  var containment,\r\n      translate = this._translate;\r\n\r\n  if (businessObject.$parent === newParent) {\r\n    return;\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:Lane')) {\r\n\r\n    if (newParent) {\r\n      newParent = this.getLaneSet(newParent);\r\n    }\r\n\r\n    containment = 'lanes';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:FlowElement')) {\r\n\r\n    if (newParent) {\r\n\r\n      if (is(newParent, 'bpmn:Participant')) {\r\n        newParent = newParent.processRef;\r\n      } else\r\n\r\n      if (is(newParent, 'bpmn:Lane')) {\r\n        do {\r\n          // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\r\n          newParent = newParent.$parent.$parent;\r\n        } while (is(newParent, 'bpmn:Lane'));\r\n\r\n      }\r\n    }\r\n\r\n    containment = 'flowElements';\r\n\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:Artifact')) {\r\n\r\n    while (newParent &&\r\n           !is(newParent, 'bpmn:Process') &&\r\n           !is(newParent, 'bpmn:SubProcess') &&\r\n           !is(newParent, 'bpmn:Collaboration')) {\r\n\r\n      if (is(newParent, 'bpmn:Participant')) {\r\n        newParent = newParent.processRef;\r\n        break;\r\n      } else {\r\n        newParent = newParent.$parent;\r\n      }\r\n    }\r\n\r\n    containment = 'artifacts';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:MessageFlow')) {\r\n    containment = 'messageFlows';\r\n\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:Participant')) {\r\n    containment = 'participants';\r\n\r\n    // make sure the participants process is properly attached / detached\r\n    // from the XML document\r\n\r\n    var process = businessObject.processRef,\r\n        definitions;\r\n\r\n    if (process) {\r\n      definitions = getDefinitions(businessObject.$parent || newParent);\r\n\r\n      if (businessObject.$parent) {\r\n        Collections.remove(definitions.get('rootElements'), process);\r\n        process.$parent = null;\r\n      }\r\n\r\n      if (newParent) {\r\n        Collections.add(definitions.get('rootElements'), process);\r\n        process.$parent = definitions;\r\n      }\r\n    }\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\r\n    containment = 'dataOutputAssociations';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\r\n    containment = 'dataInputAssociations';\r\n  }\r\n\r\n  if (!containment) {\r\n    throw new Error(translate(\r\n      'no parent for {element} in {parent}',\r\n      {\r\n        element: businessObject.id,\r\n        parent: newParent.id\r\n      }\r\n    ));\r\n  }\r\n\r\n  var children;\r\n\r\n  if (businessObject.$parent) {\r\n    // remove from old parent\r\n    children = businessObject.$parent.get(containment);\r\n    Collections.remove(children, businessObject);\r\n  }\r\n\r\n  if (!newParent) {\r\n    businessObject.$parent = null;\r\n  } else {\r\n    // add to new parent\r\n    children = newParent.get(containment);\r\n    children.push(businessObject);\r\n    businessObject.$parent = newParent;\r\n  }\r\n\r\n  if (visualParent) {\r\n    var diChildren = visualParent.get(containment);\r\n\r\n    Collections.remove(children, businessObject);\r\n\r\n    if (newParent) {\r\n\r\n      if (!diChildren) {\r\n        diChildren = [];\r\n        newParent.set(containment, diChildren);\r\n      }\r\n\r\n      diChildren.push(businessObject);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateConnectionWaypoints = function(connection) {\r\n  connection.businessObject.di.set('waypoint', this._bpmnFactory.createDiWaypoints(connection.waypoints));\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateConnection = function(context) {\r\n\r\n  var connection = context.connection,\r\n      businessObject = getBusinessObject(connection),\r\n      newSource = getBusinessObject(connection.source),\r\n      newTarget = getBusinessObject(connection.target),\r\n      visualParent;\r\n\r\n  if (!is(businessObject, 'bpmn:DataAssociation')) {\r\n\r\n    var inverseSet = is(businessObject, 'bpmn:SequenceFlow');\r\n\r\n    if (businessObject.sourceRef !== newSource) {\r\n      if (inverseSet) {\r\n        Collections.remove(businessObject.sourceRef && businessObject.sourceRef.get('outgoing'), businessObject);\r\n\r\n        if (newSource && newSource.get('outgoing')) {\r\n          newSource.get('outgoing').push(businessObject);\r\n        }\r\n      }\r\n\r\n      businessObject.sourceRef = newSource;\r\n    }\r\n\r\n    if (businessObject.targetRef !== newTarget) {\r\n      if (inverseSet) {\r\n        Collections.remove(businessObject.targetRef && businessObject.targetRef.get('incoming'), businessObject);\r\n\r\n        if (newTarget && newTarget.get('incoming')) {\r\n          newTarget.get('incoming').push(businessObject);\r\n        }\r\n      }\r\n\r\n      businessObject.targetRef = newTarget;\r\n    }\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\r\n    // handle obnoxious isMany sourceRef\r\n    businessObject.get('sourceRef')[0] = newSource;\r\n\r\n    visualParent = context.parent || context.newParent || newTarget;\r\n\r\n    this.updateSemanticParent(businessObject, newTarget, parent.businessObject);\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\r\n    visualParent = context.parent || context.newParent || newSource;\r\n\r\n    this.updateSemanticParent(businessObject, newSource, visualParent);\r\n\r\n    // targetRef = new target\r\n    businessObject.targetRef = newTarget;\r\n  }\r\n\r\n  this.updateConnectionWaypoints(connection);\r\n\r\n  this.updateDiConnection(businessObject.di, newSource, newTarget);\r\n};\r\n\r\n\r\n/////// helpers /////////////////////////////////////////\r\n\r\nBpmnUpdater.prototype._getLabel = function(di) {\r\n  if (!di.label) {\r\n    di.label = this._bpmnFactory.createDiLabel();\r\n  }\r\n\r\n  return di.label;\r\n};\r\n\r\n\r\n/**\r\n * Make sure the event listener is only called\r\n * if the touched element is a BPMN element.\r\n *\r\n * @param  {Function} fn\r\n * @return {Function} guarded function\r\n */\r\nfunction ifBpmn(fn) {\r\n\r\n  return function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection;\r\n\r\n    if (is(element, 'bpmn:BaseElement')) {\r\n      fn(event);\r\n    }\r\n  };\r\n}\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    inherits = require(289);\r\n\r\nvar is = require(95).is;\r\n\r\nvar isExpanded = require(93).isExpanded;\r\n\r\nvar BaseElementFactory = require(123),\r\n    LabelUtil = require(94);\r\n\r\n/**\r\n * A bpmn-aware factory for diagram-js shapes\r\n */\r\nfunction ElementFactory(bpmnFactory, moddle, translate) {\r\n  BaseElementFactory.call(this);\r\n\r\n  this._bpmnFactory = bpmnFactory;\r\n  this._moddle = moddle;\r\n  this._translate = translate;\r\n}\r\n\r\ninherits(ElementFactory, BaseElementFactory);\r\n\r\n\r\nElementFactory.$inject = [ 'bpmnFactory', 'moddle', 'translate' ];\r\n\r\nmodule.exports = ElementFactory;\r\n\r\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\r\n\r\nElementFactory.prototype.create = function(elementType, attrs) {\r\n  // no special magic for labels,\r\n  // we assume their businessObjects have already been created\r\n  // and wired via attrs\r\n  if (elementType === 'label') {\r\n    return this.baseCreate(elementType, assign({ type: 'label' }, LabelUtil.DEFAULT_LABEL_SIZE, attrs));\r\n  }\r\n\r\n  return this.createBpmnElement(elementType, attrs);\r\n};\r\n\r\nElementFactory.prototype.createBpmnElement = function(elementType, attrs) {\r\n  var size,\r\n      translate = this._translate;\r\n\r\n  attrs = attrs || {};\r\n\r\n  var businessObject = attrs.businessObject;\r\n\r\n  if (!businessObject) {\r\n    if (!attrs.type) {\r\n      throw new Error(translate('no shape type specified'));\r\n    }\r\n\r\n    businessObject = this._bpmnFactory.create(attrs.type);\r\n  }\r\n\r\n  if (!businessObject.di) {\r\n    if (elementType === 'root') {\r\n      businessObject.di = this._bpmnFactory.createDiPlane(businessObject, [], {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    } else\r\n    if (elementType === 'connection') {\r\n      businessObject.di = this._bpmnFactory.createDiEdge(businessObject, [], {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    } else {\r\n      businessObject.di = this._bpmnFactory.createDiShape(businessObject, {}, {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    }\r\n  }\r\n\r\n  if (attrs.colors) {\r\n    assign(businessObject.di, attrs.colors);\r\n\r\n    delete attrs.colors;\r\n  }\r\n\r\n  applyAttributes(businessObject, attrs, [\r\n    'processRef',\r\n    'isInterrupting',\r\n    'associationDirection',\r\n    'isForCompensation'\r\n  ]);\r\n\r\n  if (attrs.isExpanded) {\r\n    applyAttribute(businessObject.di, attrs, 'isExpanded');\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\r\n    businessObject.di.isMarkerVisible = true;\r\n  }\r\n\r\n  var eventDefinitions,\r\n      newEventDefinition;\r\n\r\n  if (attrs.eventDefinitionType) {\r\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\r\n    newEventDefinition = this._moddle.create(attrs.eventDefinitionType);\r\n\r\n    eventDefinitions.push(newEventDefinition);\r\n\r\n    newEventDefinition.$parent = businessObject;\r\n    businessObject.eventDefinitions = eventDefinitions;\r\n\r\n    delete attrs.eventDefinitionType;\r\n  }\r\n\r\n  size = this._getDefaultSize(businessObject);\r\n\r\n  attrs = assign({\r\n    businessObject: businessObject,\r\n    id: businessObject.id\r\n  }, size, attrs);\r\n\r\n  return this.baseCreate(elementType, attrs);\r\n};\r\n\r\n\r\nElementFactory.prototype._getDefaultSize = function(semantic) {\r\n\r\n  if (is(semantic, 'bpmn:SubProcess')) {\r\n\r\n    if (isExpanded(semantic)) {\r\n      return { width: 350, height: 200 };\r\n    } else {\r\n      return { width: 100, height: 80 };\r\n    }\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Task')) {\r\n    return { width: 100, height: 80 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Gateway')) {\r\n    return { width: 50, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Event')) {\r\n    return { width: 36, height: 36 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Participant')) {\r\n    if (!isExpanded(semantic)) {\r\n      return { width: 400, height: 100 };\r\n    } else {\r\n      return { width: 600, height: 250 };\r\n    }\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Lane')) {\r\n    return { width: 400, height: 100 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:DataObjectReference')) {\r\n    return { width: 36, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:DataStoreReference')) {\r\n    return { width: 50, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:TextAnnotation')) {\r\n    return { width: 100, height: 30 };\r\n  }\r\n\r\n  return { width: 100, height: 80 };\r\n};\r\n\r\n\r\nElementFactory.prototype.createParticipantShape = function(collapsed) {\r\n\r\n  var attrs = { type: 'bpmn:Participant' };\r\n\r\n  if (!collapsed) {\r\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\r\n  }\r\n\r\n  return this.createShape(attrs);\r\n};\r\n\r\n\r\n//////////// helpers ////////////////////////////////////\r\n\r\n/**\r\n * Apply attributes from a map to the given element,\r\n * remove attribute from the map on application.\r\n *\r\n * @param {Base} element\r\n * @param {Object} attrs (in/out map of attributes)\r\n * @param {Array<String>} attributeNames name of attributes to apply\r\n */\r\nfunction applyAttributes(element, attrs, attributeNames) {\r\n\r\n  forEach(attributeNames, function(property) {\r\n    if (attrs[property] !== undefined) {\r\n      applyAttribute(element, attrs, property);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Apply named property to element and drain it from the attrs\r\n * collection.\r\n *\r\n * @param {Base} element\r\n * @param {Object} attrs (in/out map of attributes)\r\n * @param {String} attributeName to apply\r\n */\r\nfunction applyAttribute(element, attrs, attributeName) {\r\n  element[attributeName] = attrs[attributeName];\r\n\r\n  delete attrs[attributeName];\r\n}","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar BaseModeling = require(177);\r\n\r\nvar UpdatePropertiesHandler = require(65),\r\n    UpdateCanvasRootHandler = require(63),\r\n    AddLaneHandler = require(58),\r\n    SplitLaneHandler = require(62),\r\n    ResizeLaneHandler = require(60),\r\n    UpdateFlowNodeRefsHandler = require(64),\r\n    IdClaimHandler = require(59),\r\n    SetColorHandler = require(61);\r\n\r\n\r\n/**\r\n * BPMN 2.0 modeling features activator\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementFactory} elementFactory\r\n * @param {CommandStack} commandStack\r\n * @param {BpmnRules} bpmnRules\r\n */\r\nfunction Modeling(eventBus, elementFactory, commandStack, bpmnRules) {\r\n  BaseModeling.call(this, eventBus, elementFactory, commandStack);\r\n\r\n  this._bpmnRules = bpmnRules;\r\n}\r\n\r\ninherits(Modeling, BaseModeling);\r\n\r\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack', 'bpmnRules' ];\r\n\r\nmodule.exports = Modeling;\r\n\r\n\r\nModeling.prototype.getHandlers = function() {\r\n  var handlers = BaseModeling.prototype.getHandlers.call(this);\r\n\r\n  handlers['element.updateProperties'] = UpdatePropertiesHandler;\r\n  handlers['canvas.updateRoot'] = UpdateCanvasRootHandler;\r\n  handlers['lane.add'] = AddLaneHandler;\r\n  handlers['lane.resize'] = ResizeLaneHandler;\r\n  handlers['lane.split'] = SplitLaneHandler;\r\n  handlers['lane.updateRefs'] = UpdateFlowNodeRefsHandler;\r\n  handlers['id.updateClaim'] = IdClaimHandler;\r\n  handlers['element.setColor'] = SetColorHandler;\r\n\r\n  return handlers;\r\n};\r\n\r\n\r\nModeling.prototype.updateLabel = function(element, newLabel) {\r\n  this._commandStack.execute('element.updateLabel', {\r\n    element: element,\r\n    newLabel: newLabel\r\n  });\r\n};\r\n\r\n\r\nModeling.prototype.connect = function(source, target, attrs, hints) {\r\n\r\n  var bpmnRules = this._bpmnRules;\r\n\r\n  if (!attrs) {\r\n    attrs = bpmnRules.canConnect(source, target);\r\n  }\r\n\r\n  if (!attrs) {\r\n    return;\r\n  }\r\n\r\n  return this.createConnection(source, target, attrs, source.parent, hints);\r\n};\r\n\r\n\r\nModeling.prototype.updateProperties = function(element, properties) {\r\n  this._commandStack.execute('element.updateProperties', {\r\n    element: element,\r\n    properties: properties\r\n  });\r\n};\r\n\r\nModeling.prototype.resizeLane = function(laneShape, newBounds, balanced) {\r\n  this._commandStack.execute('lane.resize', {\r\n    shape: laneShape,\r\n    newBounds: newBounds,\r\n    balanced: balanced\r\n  });\r\n};\r\n\r\nModeling.prototype.addLane = function(targetLaneShape, location) {\r\n  var context = {\r\n    shape: targetLaneShape,\r\n    location: location\r\n  };\r\n\r\n  this._commandStack.execute('lane.add', context);\r\n\r\n  return context.newLane;\r\n};\r\n\r\nModeling.prototype.splitLane = function(targetLane, count) {\r\n  this._commandStack.execute('lane.split', {\r\n    shape: targetLane,\r\n    count: count\r\n  });\r\n};\r\n\r\n/**\r\n * Transform the current diagram into a collaboration.\r\n *\r\n * @return {djs.model.Root} the new root element\r\n */\r\nModeling.prototype.makeCollaboration = function() {\r\n\r\n  var collaborationElement = this._create('root', {\r\n    type: 'bpmn:Collaboration'\r\n  });\r\n\r\n  var context = {\r\n    newRoot: collaborationElement\r\n  };\r\n\r\n  this._commandStack.execute('canvas.updateRoot', context);\r\n\r\n  return collaborationElement;\r\n};\r\n\r\nModeling.prototype.updateLaneRefs = function(flowNodeShapes, laneShapes) {\r\n\r\n  this._commandStack.execute('lane.updateRefs', {\r\n    flowNodeShapes: flowNodeShapes,\r\n    laneShapes: laneShapes\r\n  });\r\n};\r\n\r\n/**\r\n * Transform the current diagram into a process.\r\n *\r\n * @return {djs.model.Root} the new root element\r\n */\r\nModeling.prototype.makeProcess = function() {\r\n\r\n  var processElement = this._create('root', {\r\n    type: 'bpmn:Process'\r\n  });\r\n\r\n  var context = {\r\n    newRoot: processElement\r\n  };\r\n\r\n  this._commandStack.execute('canvas.updateRoot', context);\r\n};\r\n\r\n\r\nModeling.prototype.claimId = function(id, moddleElement) {\r\n  this._commandStack.execute('id.updateClaim', {\r\n    id: id,\r\n    element: moddleElement,\r\n    claiming: true\r\n  });\r\n};\r\n\r\n\r\nModeling.prototype.unclaimId = function(id, moddleElement) {\r\n  this._commandStack.execute('id.updateClaim', {\r\n    id: id,\r\n    element: moddleElement\r\n  });\r\n};\r\n\r\nModeling.prototype.setColor = function(elements, colors) {\r\n  if (!elements.length) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  this._commandStack.execute('element.setColor', {\r\n    elements: elements,\r\n    colors: colors\r\n  });\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar is = require(95).is;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\nfunction AppendBehavior(eventBus, elementFactory, bpmnRules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  // assign correct shape position unless already set\r\n\r\n  this.preExecute('shape.append', function(context) {\r\n\r\n    var source = context.source,\r\n        shape = context.shape;\r\n\r\n    if (!context.position) {\r\n\r\n      if (is(shape, 'bpmn:TextAnnotation')) {\r\n        context.position = {\r\n          x: source.x + source.width / 2 + 75,\r\n          y: source.y - (50) - shape.height / 2\r\n        };\r\n      } else {\r\n        context.position = {\r\n          x: source.x + source.width + 80 + shape.width / 2,\r\n          y: source.y + source.height / 2\r\n        };\r\n      }\r\n    }\r\n  }, true);\r\n}\r\n\r\n\r\nAppendBehavior.$inject = [ 'eventBus', 'elementFactory', 'bpmnRules' ];\r\n\r\ninherits(AppendBehavior, CommandInterceptor);\r\n\r\nmodule.exports = AppendBehavior;","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar forEach = require(303);\r\n\r\nvar is = require(95).is;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\nfunction CopyPasteBehavior(eventBus, modeling, canvas) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('elements.paste', 1500, function(context) {\r\n    var topParent = context.topParent;\r\n\r\n    // always grab the latest root\r\n    if (!topParent.parent) {\r\n      context.topParent = canvas.getRootElement();\r\n    }\r\n\r\n    if (is(topParent, 'bpmn:Lane')) {\r\n      do {\r\n        // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\r\n        topParent = context.topParent = topParent.parent;\r\n\r\n      } while (is(topParent, 'bpmn:Lane') || !is(topParent, 'bpmn:Participant'));\r\n    }\r\n  }, true);\r\n\r\n  this.postExecute('elements.paste', function(context) {\r\n\r\n    var tree = context.tree,\r\n        createdElements = tree.createdElements;\r\n\r\n    forEach(createdElements, function(data) {\r\n      var element = data.element,\r\n          businessObject = element.businessObject,\r\n          descriptor = data.descriptor,\r\n          defaultFlow;\r\n\r\n      if ((is(businessObject, 'bpmn:ExclusiveGateway') || is(businessObject, 'bpmn:InclusiveGateway') ||\r\n           is(businessObject, 'bpmn:Activity')) && descriptor.default) {\r\n\r\n        defaultFlow = createdElements[descriptor.default];\r\n\r\n        // if the default flow wasn't created, means that it wasn't copied\r\n        if (defaultFlow) {\r\n          defaultFlow = defaultFlow.element;\r\n        } else {\r\n          defaultFlow = undefined;\r\n        }\r\n\r\n        delete element.default;\r\n\r\n        modeling.updateProperties(element, { default: defaultFlow });\r\n      }\r\n    });\r\n  }, true);\r\n}\r\n\r\n\r\nCopyPasteBehavior.$inject = [ 'eventBus', 'modeling', 'canvas' ];\r\n\r\ninherits(CopyPasteBehavior, CommandInterceptor);\r\n\r\nmodule.exports = CopyPasteBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\n\r\n/**\r\n * BPMN specific create boundary event behavior\r\n */\r\nfunction CreateBoundaryEventBehavior(eventBus, modeling, elementFactory, bpmnFactory) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * replace intermediate event with boundary event when\r\n   * attaching it to a shape\r\n   */\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n    var shape = context.shape,\r\n        host = context.host,\r\n        businessObject,\r\n        boundaryEvent;\r\n\r\n    var attrs = {\r\n      cancelActivity: true\r\n    };\r\n\r\n    if (host && is(shape, 'bpmn:IntermediateThrowEvent')) {\r\n      attrs.attachedToRef = host.businessObject;\r\n\r\n      businessObject = bpmnFactory.create('bpmn:BoundaryEvent', attrs);\r\n\r\n      boundaryEvent = {\r\n        type: 'bpmn:BoundaryEvent',\r\n        businessObject: businessObject\r\n      };\r\n\r\n      context.shape = elementFactory.createShape(boundaryEvent);\r\n    }\r\n  }, true);\r\n}\r\n\r\nCreateBoundaryEventBehavior.$inject = [ 'eventBus', 'modeling', 'elementFactory', 'bpmnFactory' ];\r\n\r\ninherits(CreateBoundaryEventBehavior, CommandInterceptor);\r\n\r\nmodule.exports = CreateBoundaryEventBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\n/**\r\n * BPMN specific create data object behavior\r\n */\r\nfunction CreateDataObjectBehavior(eventBus, bpmnFactory, moddle) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('shape.create', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:DataObjectReference') && shape.type !== 'label') {\r\n\r\n      // create a DataObject every time a DataObjectReference is created\r\n      var dataObject = bpmnFactory.create('bpmn:DataObject');\r\n\r\n      // set the reference to the DataObject\r\n      shape.businessObject.dataObjectRef = dataObject;\r\n    }\r\n  });\r\n\r\n}\r\n\r\nCreateDataObjectBehavior.$inject = [ 'eventBus', 'bpmnFactory', 'moddle' ];\r\n\r\ninherits(CreateDataObjectBehavior, CommandInterceptor);\r\n\r\nmodule.exports = CreateDataObjectBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\n/**\r\n * BPMN specific create participant behavior\r\n */\r\nfunction CreateParticipantBehavior(eventBus, modeling, elementFactory, bpmnFactory, canvas) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * morph process into collaboration before adding\r\n   * participant onto collaboration\r\n   */\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n\r\n    var parent = context.parent,\r\n        shape = context.shape,\r\n        position = context.position;\r\n\r\n    var rootElement = canvas.getRootElement();\r\n\r\n    if (is(parent, 'bpmn:Process') && is(shape, 'bpmn:Participant') && !is(rootElement, 'bpmn:Collaboration')) {\r\n\r\n      // this is going to detach the process root\r\n      // and set the returned collaboration element\r\n      // as the new root element\r\n      var collaborationElement = modeling.makeCollaboration();\r\n\r\n      // monkey patch the create context\r\n      // so that the participant is being dropped\r\n      // onto the new collaboration root instead\r\n      context.position = position;\r\n      context.parent = collaborationElement;\r\n\r\n      context.processRoot = parent;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.execute('shape.create', function(context) {\r\n\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      context.oldProcessRef = shape.businessObject.processRef;\r\n\r\n      // assign the participant processRef\r\n      shape.businessObject.processRef = processRoot.businessObject;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.revert('shape.create', function(context) {\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      // assign the participant processRef\r\n      shape.businessObject.processRef = context.oldProcessRef;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.postExecute('shape.create', function(context) {\r\n\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      // process root is already detached at this point\r\n      var processChildren = processRoot.children.slice();\r\n      modeling.moveElements(processChildren, { x: 0, y: 0 }, shape);\r\n    }\r\n\r\n  }, true);\r\n\r\n}\r\n\r\nCreateParticipantBehavior.$inject = [ 'eventBus', 'modeling', 'elementFactory', 'bpmnFactory', 'canvas' ];\r\n\r\ninherits(CreateParticipantBehavior, CommandInterceptor);\r\n\r\nmodule.exports = CreateParticipantBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar Collections = require(263);\r\n\r\nvar find = require(302);\r\n\r\nvar is = require(95).is;\r\n\r\nvar TARGET_REF_PLACEHOLDER_NAME = '__targetRef_placeholder';\r\n\r\n\r\n/**\r\n * This behavior makes sure we always set a fake\r\n * DataInputAssociation#targetRef as demanded by the BPMN 2.0\r\n * XSD schema.\r\n *\r\n * The reference is set to a bpmn:Property{ name: '__targetRef_placeholder' }\r\n * which is created on the fly and cleaned up afterwards if not needed\r\n * anymore.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {BpmnFactory} bpmnFactory\r\n */\r\nfunction DataInputAssociationBehavior(eventBus, bpmnFactory) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  this.executed([\r\n    'connection.create',\r\n    'connection.delete',\r\n    'connection.move',\r\n    'connection.reconnectEnd'\r\n  ], ifDataInputAssociation(fixTargetRef));\r\n\r\n  this.reverted([\r\n    'connection.create',\r\n    'connection.delete',\r\n    'connection.move',\r\n    'connection.reconnectEnd'\r\n  ], ifDataInputAssociation(fixTargetRef));\r\n\r\n\r\n  function usesTargetRef(element, targetRef, removedConnection) {\r\n\r\n    var inputAssociations = element.get('dataInputAssociations');\r\n\r\n    return find(inputAssociations, function(association) {\r\n      return association !== removedConnection &&\r\n             association.targetRef === targetRef;\r\n    });\r\n  }\r\n\r\n  function getTargetRef(element, create) {\r\n\r\n    var properties = element.get('properties');\r\n\r\n    var targetRefProp = find(properties, function(p) {\r\n      return p.name === TARGET_REF_PLACEHOLDER_NAME;\r\n    });\r\n\r\n    if (!targetRefProp && create) {\r\n      targetRefProp = bpmnFactory.create('bpmn:Property', {\r\n        name: TARGET_REF_PLACEHOLDER_NAME\r\n      });\r\n\r\n      Collections.add(properties, targetRefProp);\r\n    }\r\n\r\n    return targetRefProp;\r\n  }\r\n\r\n  function cleanupTargetRef(element, connection) {\r\n\r\n    var targetRefProp = getTargetRef(element);\r\n\r\n    if (!targetRefProp) {\r\n      return;\r\n    }\r\n\r\n    if (!usesTargetRef(element, targetRefProp, connection)) {\r\n      Collections.remove(element.get('properties'), targetRefProp);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make sure targetRef is set to a valid property or\r\n   * `null` if the connection is detached.\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  function fixTargetRef(event) {\r\n\r\n    var context = event.context,\r\n        connection = context.connection,\r\n        connectionBo = connection.businessObject,\r\n        target = connection.target,\r\n        targetBo = target && target.businessObject,\r\n        newTarget = context.newTarget,\r\n        newTargetBo = newTarget && newTarget.businessObject,\r\n        oldTarget = context.oldTarget || context.target,\r\n        oldTargetBo = oldTarget && oldTarget.businessObject;\r\n\r\n    var dataAssociation = connection.businessObject,\r\n        targetRefProp;\r\n\r\n    if (oldTargetBo && oldTargetBo !== targetBo) {\r\n      cleanupTargetRef(oldTargetBo, connectionBo);\r\n    }\r\n\r\n    if (newTargetBo && newTargetBo !== targetBo) {\r\n      cleanupTargetRef(newTargetBo, connectionBo);\r\n    }\r\n\r\n    if (targetBo) {\r\n      targetRefProp = getTargetRef(targetBo, true);\r\n      dataAssociation.targetRef = targetRefProp;\r\n    } else {\r\n      dataAssociation.targetRef = null;\r\n    }\r\n  }\r\n}\r\n\r\nDataInputAssociationBehavior.$inject = [ 'eventBus', 'bpmnFactory' ];\r\n\r\ninherits(DataInputAssociationBehavior, CommandInterceptor);\r\n\r\nmodule.exports = DataInputAssociationBehavior;\r\n\r\n\r\n/**\r\n * Only call the given function when the event\r\n * touches a bpmn:DataInputAssociation.\r\n *\r\n * @param {Function} fn\r\n * @return {Function}\r\n */\r\nfunction ifDataInputAssociation(fn) {\r\n\r\n  return function(event) {\r\n    var context = event.context,\r\n        connection = context.connection;\r\n\r\n    if (is(connection, 'bpmn:DataInputAssociation')) {\r\n      return fn(event);\r\n    }\r\n  };\r\n}","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\nvar getChildLanes = require(67).getChildLanes;\r\n\r\nvar eachElement = require(266).eachElement;\r\n\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * BPMN specific delete lane behavior\r\n */\r\nfunction DeleteLaneBehavior(eventBus, modeling, spaceTool) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  function compensateLaneDelete(shape, oldParent) {\r\n\r\n    var siblings = getChildLanes(oldParent);\r\n\r\n    var topAffected = [];\r\n    var bottomAffected = [];\r\n\r\n    eachElement(siblings, function(element) {\r\n\r\n      if (element.y > shape.y) {\r\n        bottomAffected.push(element);\r\n      } else {\r\n        topAffected.push(element);\r\n      }\r\n\r\n      return element.children;\r\n    });\r\n\r\n    if (!siblings.length) {\r\n      return;\r\n    }\r\n\r\n    var offset;\r\n\r\n    if (bottomAffected.length && topAffected.length) {\r\n      offset = shape.height / 2;\r\n    } else {\r\n      offset = shape.height;\r\n    }\r\n\r\n    var topAdjustments,\r\n        bottomAdjustments;\r\n\r\n    if (topAffected.length) {\r\n      topAdjustments = spaceTool.calculateAdjustments(\r\n        topAffected, 'y', offset, shape.y - 10);\r\n\r\n      spaceTool.makeSpace(\r\n        topAdjustments.movingShapes,\r\n        topAdjustments.resizingShapes,\r\n        { x: 0, y: offset }, 's');\r\n    }\r\n\r\n    if (bottomAffected.length) {\r\n      bottomAdjustments = spaceTool.calculateAdjustments(\r\n        bottomAffected, 'y', -offset, shape.y + shape.height + 10);\r\n\r\n      spaceTool.makeSpace(\r\n        bottomAdjustments.movingShapes,\r\n        bottomAdjustments.resizingShapes,\r\n        { x: 0, y: -offset }, 'n');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Adjust sizes of other lanes after lane deletion\r\n   */\r\n  this.postExecuted('shape.delete', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape,\r\n        oldParent = context.oldParent;\r\n\r\n    // only compensate lane deletes\r\n    if (!is(shape, 'bpmn:Lane')) {\r\n      return;\r\n    }\r\n\r\n    // compensate root deletes only\r\n    if (hints && hints.nested) {\r\n      return;\r\n    }\r\n\r\n    compensateLaneDelete(shape, oldParent);\r\n  });\r\n}\r\n\r\nDeleteLaneBehavior.$inject = [ 'eventBus', 'modeling', 'spaceTool' ];\r\n\r\ninherits(DeleteLaneBehavior, CommandInterceptor);\r\n\r\nmodule.exports = DeleteLaneBehavior;","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar assign = require(431),\r\n    find = require(302);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar getApproxIntersection = require(272).getApproxIntersection;\r\n\r\nfunction isPointInsideBBox(bbox, point) {\r\n  var x = point.x,\r\n      y = point.y;\r\n\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}\r\n\r\nfunction copy(obj) {\r\n  return assign({}, obj);\r\n}\r\n\r\nfunction getMid(bounds) {\r\n\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2),\r\n    y: Math.round(bounds.y + bounds.height / 2)\r\n  };\r\n}\r\n\r\nfunction DropOnFlow(eventBus, bpmnRules, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Reconnect start / end of a connection after\r\n   * dropping an element on a flow.\r\n   */\r\n\r\n  function insertShape(shape, targetFlow, position) {\r\n    var waypoints = targetFlow.waypoints,\r\n        waypointsBefore, waypointsAfter, dockingPoint, source, target, reconnected;\r\n\r\n    var intersection = getApproxIntersection(waypoints, position);\r\n\r\n    if (intersection) {\r\n      waypointsBefore = waypoints.slice(0, intersection.index);\r\n      waypointsAfter = waypoints.slice(intersection.index + (intersection.bendpoint ? 1 : 0));\r\n\r\n      dockingPoint = intersection.bendpoint ? waypoints[intersection.index] : position;\r\n\r\n      // if last waypointBefore is inside shape's bounds, ignore docking point\r\n      if (!isPointInsideBBox(shape, waypointsBefore[waypointsBefore.length-1])) {\r\n        waypointsBefore.push(copy(dockingPoint));\r\n      }\r\n\r\n      // if first waypointAfter is inside shape's bounds, ignore docking point\r\n      if (!isPointInsideBBox(shape, waypointsAfter[0])) {\r\n        waypointsAfter.unshift(copy(dockingPoint));\r\n      }\r\n    }\r\n\r\n    source = targetFlow.source;\r\n    target = targetFlow.target;\r\n\r\n    if (bpmnRules.canConnect(source, shape, targetFlow)) {\r\n      // reconnect source -> inserted shape\r\n      modeling.reconnectEnd(targetFlow, shape, waypointsBefore || position);\r\n\r\n      reconnected = true;\r\n    }\r\n\r\n    if (bpmnRules.canConnect(shape, target, targetFlow)) {\r\n\r\n      if (!reconnected) {\r\n        // reconnect inserted shape -> end\r\n        modeling.reconnectStart(targetFlow, shape, waypointsAfter || position);\r\n      } else {\r\n        modeling.connect(shape, target, { type: targetFlow.type, waypoints: waypointsAfter });\r\n      }\r\n    }\r\n  }\r\n\r\n  this.preExecute('elements.move', function(context) {\r\n\r\n    var newParent = context.newParent,\r\n        shapes = context.shapes,\r\n        delta = context.delta,\r\n        shape = shapes[0];\r\n\r\n    if (!shape || !newParent) {\r\n      return;\r\n    }\r\n\r\n    // if the new parent is a connection,\r\n    // change it to the new parent's parent\r\n    if (newParent && newParent.waypoints) {\r\n      context.newParent = newParent = newParent.parent;\r\n    }\r\n\r\n    var shapeMid = getMid(shape);\r\n    var newShapeMid = {\r\n      x: shapeMid.x + delta.x,\r\n      y: shapeMid.y + delta.y\r\n    };\r\n\r\n    // find a connection which intersects with the\r\n    // element's mid point\r\n    var connection = find(newParent.children, function(element) {\r\n      var canInsert = bpmnRules.canInsert(shapes, element);\r\n\r\n      return canInsert && getApproxIntersection(element.waypoints, newShapeMid);\r\n    });\r\n\r\n    if (connection) {\r\n      context.targetFlow = connection;\r\n      context.position = newShapeMid;\r\n    }\r\n\r\n  }, true);\r\n\r\n  this.postExecuted('elements.move', function(context) {\r\n\r\n    var shapes = context.shapes,\r\n        targetFlow = context.targetFlow,\r\n        position = context.position;\r\n\r\n    if (targetFlow) {\r\n      insertShape(shapes[0], targetFlow, position);\r\n    }\r\n\r\n  }, true);\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n\r\n    var parent = context.parent,\r\n        shape = context.shape;\r\n\r\n    if (bpmnRules.canInsert(shape, parent)) {\r\n      context.targetFlow = parent;\r\n      context.parent = parent.parent;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.postExecute('shape.create', function(context) {\r\n\r\n    var shape = context.shape,\r\n        targetFlow = context.targetFlow,\r\n        position = context.position;\r\n\r\n    if (targetFlow) {\r\n      insertShape(shape, targetFlow, position);\r\n    }\r\n  }, true);\r\n}\r\n\r\ninherits(DropOnFlow, CommandInterceptor);\r\n\r\nDropOnFlow.$inject = [ 'eventBus', 'bpmnRules', 'modeling' ];\r\n\r\nmodule.exports = DropOnFlow;\r\n","'use strict';\r\n\r\nvar getMid = require(252).getMid;\r\n\r\nvar lineIntersect = require(57);\r\n\r\n\r\n/**\r\n * Fix broken dockings after DI imports.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction ImportDockingFix(eventBus) {\r\n\r\n  function adjustDocking(startPoint, nextPoint, elementMid) {\r\n\r\n    var elementTop = {\r\n      x: elementMid.x,\r\n      y: elementMid.y - 50\r\n    };\r\n\r\n    var elementLeft = {\r\n      x: elementMid.x - 50,\r\n      y: elementMid.y\r\n    };\r\n\r\n    var verticalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementTop),\r\n        horizontalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementLeft);\r\n\r\n    // original is horizontal or vertical center cross intersection\r\n    var centerIntersect;\r\n\r\n    if (verticalIntersect && horizontalIntersect) {\r\n      if (getDistance(verticalIntersect, elementMid) > getDistance(horizontalIntersect, elementMid)) {\r\n        centerIntersect = horizontalIntersect;\r\n      } else {\r\n        centerIntersect = verticalIntersect;\r\n      }\r\n    } else {\r\n      centerIntersect = verticalIntersect || horizontalIntersect;\r\n    }\r\n\r\n    startPoint.original = centerIntersect;\r\n  }\r\n\r\n  function fixDockings(connection) {\r\n    var waypoints = connection.waypoints;\r\n\r\n    adjustDocking(\r\n      waypoints[0],\r\n      waypoints[1],\r\n      getMid(connection.source)\r\n    );\r\n\r\n    adjustDocking(\r\n      waypoints[waypoints.length - 1],\r\n      waypoints[waypoints.length - 2],\r\n      getMid(connection.target)\r\n    );\r\n  }\r\n\r\n  eventBus.on('bpmnElement.added', function(e) {\r\n\r\n    var element = e.element;\r\n\r\n    if (element.waypoints) {\r\n      fixDockings(element);\r\n    }\r\n  });\r\n}\r\n\r\nImportDockingFix.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = ImportDockingFix;\r\n\r\n\r\n/////// helpers //////////////////////////////////\r\n\r\nfunction getDistance(p1, p2) {\r\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n}","'use strict';\r\n\r\nvar assign = require(431),\r\n    inherits = require(289);\r\n\r\nvar LabelUtil = require(94),\r\n    LabelLayoutUtil = require(55),\r\n    ModelUtil = require(95),\r\n    is = ModelUtil.is,\r\n    getBusinessObject = ModelUtil.getBusinessObject;\r\n\r\nvar hasExternalLabel = LabelUtil.hasExternalLabel,\r\n    getExternalLabelMid = LabelUtil.getExternalLabelMid,\r\n    getLabelAdjustment = LabelLayoutUtil.getLabelAdjustment;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar TextUtil = require(280);\r\n\r\nvar DEFAULT_LABEL_DIMENSIONS = {\r\n  width: 90,\r\n  height: 20\r\n};\r\n\r\n\r\n/**\r\n * A component that makes sure that external labels are added\r\n * together with respective elements and properly updated (DI wise)\r\n * during move.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n * @param {BpmnFactory} bpmnFactory\r\n */\r\nfunction LabelSupport(eventBus, modeling, bpmnFactory) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  var textUtil = new TextUtil();\r\n\r\n\r\n  ///// create external labels on shape creation\r\n\r\n  this.postExecute([ 'shape.create', 'connection.create' ], function(e) {\r\n    var context = e.context;\r\n\r\n    var element = context.shape || context.connection,\r\n        businessObject = element.businessObject;\r\n\r\n    if (!hasExternalLabel(businessObject)) {\r\n      return;\r\n    }\r\n\r\n    var labelCenter = getExternalLabelMid(element);\r\n\r\n    // we don't care about x and y\r\n    var labelDimensions = getLayoutedBounds(\r\n      DEFAULT_LABEL_DIMENSIONS,\r\n      businessObject.name || '',\r\n      textUtil\r\n    );\r\n\r\n    modeling.createLabel(element, labelCenter, {\r\n      id: businessObject.id + '_label',\r\n      hidden: !businessObject.name,\r\n      businessObject: businessObject,\r\n      width: labelDimensions.width,\r\n      height: labelDimensions.height\r\n    });\r\n  });\r\n\r\n\r\n  ///// update di information on label creation\r\n\r\n  this.executed([ 'label.create' ], function(event) {\r\n\r\n    var element = event.context.shape,\r\n        businessObject,\r\n        di;\r\n\r\n    // we want to trigger on real labels only\r\n    if (!element.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    // we want to trigger on BPMN elements only\r\n    if (!is(element.labelTarget || element, 'bpmn:BaseElement')) {\r\n      return;\r\n    }\r\n\r\n    businessObject = element.businessObject,\r\n    di = businessObject.di;\r\n\r\n\r\n    if (!di.label) {\r\n      di.label = bpmnFactory.create('bpmndi:BPMNLabel', {\r\n        bounds: bpmnFactory.create('dc:Bounds')\r\n      });\r\n    }\r\n\r\n    assign(di.label.bounds, {\r\n      x: element.x,\r\n      y: element.y,\r\n      width: element.width,\r\n      height: element.height\r\n    });\r\n  });\r\n\r\n\r\n  ///// update label position on connection change\r\n\r\n  function getHiddenLabelAdjustment(event) {\r\n\r\n    var context = event.context,\r\n        connection = context.connection,\r\n        label = connection.label;\r\n\r\n    var labelPosition = getExternalLabelMid(connection);\r\n\r\n    return {\r\n      x: labelPosition.x - label.x - label.width / 2,\r\n      y: labelPosition.y - label.y - label.height / 2\r\n    };\r\n  }\r\n\r\n  function getVisibleLabelAdjustment(event) {\r\n\r\n    var command = event.command,\r\n        context = event.context,\r\n        connection = context.connection,\r\n        label = connection.label,\r\n        hints = assign({}, context.hints),\r\n        newWaypoints = context.newWaypoints || connection.waypoints,\r\n        oldWaypoints = context.oldWaypoints;\r\n\r\n\r\n    if (typeof hints.startChanged === 'undefined') {\r\n      hints.startChanged = (command === 'connection.reconnectStart');\r\n    }\r\n\r\n    if (typeof hints.endChanged === 'undefined') {\r\n      hints.endChanged = (command === 'connection.reconnectEnd');\r\n    }\r\n\r\n    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);\r\n  }\r\n\r\n  this.postExecute([\r\n    'connection.layout',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart',\r\n    'connection.updateWaypoints'\r\n  ], function(event) {\r\n\r\n    var label = event.context.connection.label,\r\n        labelAdjustment;\r\n\r\n    if (!label) {\r\n      return;\r\n    }\r\n\r\n    if (label.hidden) {\r\n      labelAdjustment = getHiddenLabelAdjustment(event);\r\n    } else {\r\n      labelAdjustment = getVisibleLabelAdjustment(event);\r\n    }\r\n\r\n    modeling.moveShape(label, labelAdjustment);\r\n  });\r\n\r\n\r\n  ////// keep label position on shape replace\r\n\r\n  this.postExecute([ 'shape.replace' ], function(event) {\r\n    var context = event.context,\r\n        newShape = context.newShape,\r\n        oldShape = context.oldShape;\r\n\r\n    var businessObject = getBusinessObject(newShape);\r\n\r\n    if (businessObject && hasExternalLabel(businessObject)) {\r\n      newShape.label.x = oldShape.label.x;\r\n      newShape.label.y = oldShape.label.y;\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(LabelSupport, CommandInterceptor);\r\n\r\nLabelSupport.$inject = [ 'eventBus', 'modeling', 'bpmnFactory' ];\r\n\r\nmodule.exports = LabelSupport;\r\n\r\n\r\n// TODO(nikku): repeating code (search for <getLayoutedBounds>)\r\n\r\nvar EXTERNAL_LABEL_STYLE = {\r\n  fontFamily: 'Arial, sans-serif',\r\n  fontSize: '11px'\r\n};\r\n\r\nfunction getLayoutedBounds(bounds, text, textUtil) {\r\n\r\n  var layoutedLabelDimensions = textUtil.getDimensions(text, {\r\n    box: {\r\n      width: 90,\r\n      height: 30,\r\n      x: bounds.width / 2 + bounds.x,\r\n      y: bounds.height / 2 + bounds.y\r\n    },\r\n    style: EXTERNAL_LABEL_STYLE\r\n  });\r\n\r\n  // resize label shape to fit label text\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2 - layoutedLabelDimensions.width / 2),\r\n    y: Math.round(bounds.y),\r\n    width: Math.ceil(layoutedLabelDimensions.width),\r\n    height: Math.ceil(layoutedLabelDimensions.height)\r\n  };\r\n}\r\n","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nvar COLLAB_ERR_MSG = 'flow elements must be children of pools/participants',\r\n    PROCESS_ERR_MSG = 'participants cannot be pasted onto a non-empty process diagram';\r\n\r\nfunction ModelingFeedback(eventBus, tooltips, translate) {\r\n\r\n  function showError(position, message, timeout) {\r\n    tooltips.add({\r\n      position: {\r\n        x: position.x + 5,\r\n        y: position.y + 5\r\n      },\r\n      type: 'error',\r\n      timeout: timeout || 2000,\r\n      html: '<div>' + message + '</div>'\r\n    });\r\n  }\r\n\r\n  eventBus.on([ 'shape.move.rejected', 'create.rejected' ], function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        target = context.target;\r\n\r\n    if (is(target, 'bpmn:Collaboration') && is(shape, 'bpmn:FlowNode')) {\r\n      showError(event, translate(COLLAB_ERR_MSG));\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'elements.paste.rejected' ], function(event) {\r\n    var context = event.context,\r\n        position = context.position,\r\n        target = context.target;\r\n\r\n    if (is(target, 'bpmn:Collaboration')) {\r\n      showError(position, translate(COLLAB_ERR_MSG));\r\n    }\r\n\r\n    if (is(target, 'bpmn:Process')) {\r\n      showError(position, translate(PROCESS_ERR_MSG), 3000);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nModelingFeedback.$inject = [ 'eventBus', 'tooltips', 'translate' ];\r\n\r\nmodule.exports = ModelingFeedback;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar lineIntersect = require(57);\r\n\r\n\r\nfunction RemoveElementBehavior(eventBus, bpmnRules, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Combine sequence flows when deleting an element\r\n   * if there is one incoming and one outgoing\r\n   * sequence flow\r\n   */\r\n  this.preExecute('shape.delete', function(e) {\r\n\r\n    var shape = e.context.shape;\r\n\r\n    if (shape.incoming.length == 1 && shape.outgoing.length == 1) {\r\n\r\n      var inConnection = shape.incoming[0],\r\n          outConnection = shape.outgoing[0];\r\n\r\n\r\n      if (bpmnRules.canConnect(inConnection.source, outConnection.target, inConnection)) {\r\n\r\n        // compute new, combined waypoints\r\n        var newWaypoints = getNewWaypoints(inConnection.waypoints, outConnection.waypoints);\r\n\r\n        modeling.reconnectEnd(inConnection, outConnection.target, newWaypoints);\r\n      }\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(RemoveElementBehavior, CommandInterceptor);\r\n\r\nRemoveElementBehavior.$inject = [ 'eventBus', 'bpmnRules', 'modeling' ];\r\n\r\nmodule.exports = RemoveElementBehavior;\r\n\r\n\r\n///////// helpers //////////////////////////////\r\n\r\nfunction getDocking(point) {\r\n  return point.original || point;\r\n}\r\n\r\n\r\nfunction getNewWaypoints(inWaypoints, outWaypoints) {\r\n\r\n  var intersection = lineIntersect(\r\n    getDocking(inWaypoints[inWaypoints.length - 2]),\r\n    getDocking(inWaypoints[inWaypoints.length - 1]),\r\n    getDocking(outWaypoints[1]),\r\n    getDocking(outWaypoints[0]));\r\n\r\n  if (intersection) {\r\n    return [].concat(\r\n      inWaypoints.slice(0, inWaypoints.length - 1),\r\n      [ intersection ],\r\n      outWaypoints.slice(1));\r\n  } else {\r\n    return [\r\n      getDocking(inWaypoints[0]),\r\n      getDocking(outWaypoints[outWaypoints.length - 1])\r\n    ];\r\n  }\r\n}","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\n\r\n/**\r\n * BPMN specific remove behavior\r\n */\r\nfunction RemoveParticipantBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  /**\r\n   * morph collaboration diagram into process diagram\r\n   * after the last participant has been removed\r\n   */\r\n\r\n  this.preExecute('shape.delete', function(context) {\r\n\r\n    var shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n    // activate the behavior if the shape to be removed\r\n    // is a participant\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.collaborationRoot = parent;\r\n    }\r\n  }, true);\r\n\r\n  this.postExecute('shape.delete', function(context) {\r\n\r\n    var collaborationRoot = context.collaborationRoot;\r\n\r\n    if (collaborationRoot && !collaborationRoot.businessObject.participants.length) {\r\n      // replace empty collaboration with process diagram\r\n      modeling.makeProcess();\r\n    }\r\n  }, true);\r\n\r\n}\r\n\r\nRemoveParticipantBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\ninherits(RemoveParticipantBehavior, CommandInterceptor);\r\n\r\nmodule.exports = RemoveParticipantBehavior;","'use strict';\r\n\r\nvar forEach = require(303),\r\n    find = require(302),\r\n    inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\nfunction ReplaceConnectionBehavior(eventBus, modeling, bpmnRules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  function fixConnection(connection) {\r\n\r\n    var source = connection.source,\r\n        target = connection.target,\r\n        parent = connection.parent;\r\n\r\n    // do not do anything if connection\r\n    // is already deleted (may happen due to other\r\n    // behaviors plugged-in before)\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    var replacementType,\r\n        remove;\r\n\r\n    /**\r\n     * Check if incoming or outgoing connections\r\n     * can stay or could be substituted with an\r\n     * appropriate replacement.\r\n     *\r\n     * This holds true for SequenceFlow <> MessageFlow.\r\n     */\r\n\r\n    if (is(connection, 'bpmn:SequenceFlow')) {\r\n      if (!bpmnRules.canConnectSequenceFlow(source, target)) {\r\n        remove = true;\r\n      }\r\n\r\n      if (bpmnRules.canConnectMessageFlow(source, target)) {\r\n        replacementType = 'bpmn:MessageFlow';\r\n      }\r\n    }\r\n\r\n    // transform message flows into sequence flows, if possible\r\n\r\n    if (is(connection, 'bpmn:MessageFlow')) {\r\n\r\n      if (!bpmnRules.canConnectMessageFlow(source, target)) {\r\n        remove = true;\r\n      }\r\n\r\n      if (bpmnRules.canConnectSequenceFlow(source, target)) {\r\n        replacementType = 'bpmn:SequenceFlow';\r\n      }\r\n    }\r\n\r\n    if (is(connection, 'bpmn:Association') && !bpmnRules.canConnectAssociation(source, target)) {\r\n      remove = true;\r\n    }\r\n\r\n\r\n    // remove invalid connection,\r\n    // unless it has been removed already\r\n    if (remove) {\r\n      modeling.removeConnection(connection);\r\n    }\r\n\r\n    // replace SequenceFlow <> MessageFlow\r\n\r\n    if (replacementType) {\r\n      modeling.connect(source, target, {\r\n        type: replacementType,\r\n        waypoints: connection.waypoints.slice()\r\n      });\r\n    }\r\n  }\r\n\r\n  this.postExecuted('elements.move', function(context) {\r\n\r\n    var closure = context.closure,\r\n        allConnections = closure.allConnections;\r\n\r\n    forEach(allConnections, fixConnection);\r\n  }, true);\r\n\r\n  this.postExecuted([\r\n    'connection.reconnectStart',\r\n    'connection.reconnectEnd'\r\n  ], function(event) {\r\n\r\n    var connection = event.context.connection;\r\n\r\n    fixConnection(connection);\r\n  });\r\n\r\n  this.postExecuted('element.updateProperties', function(event) {\r\n    var context = event.context,\r\n        properties = context.properties,\r\n        element = context.element,\r\n        businessObject = element.businessObject,\r\n        connection;\r\n\r\n    // remove condition expression when morphing to default flow\r\n    if (properties.default) {\r\n      connection = find(element.outgoing, { id: element.businessObject.default.id });\r\n\r\n      if (connection) {\r\n        modeling.updateProperties(connection, { conditionExpression: undefined });\r\n      }\r\n    }\r\n\r\n    // remove default property from source when morphing to conditional flow\r\n    if (properties.conditionExpression && businessObject.sourceRef.default === businessObject) {\r\n      modeling.updateProperties(element.source, { default: undefined });\r\n    }\r\n  });\r\n}\r\n\r\ninherits(ReplaceConnectionBehavior, CommandInterceptor);\r\n\r\nReplaceConnectionBehavior.$inject = [ 'eventBus', 'modeling', 'bpmnRules' ];\r\n\r\nmodule.exports = ReplaceConnectionBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar forEach = require(303);\r\n\r\nvar isEventSubProcess = require(93).isEventSubProcess;\r\nvar is = require(95).is;\r\n\r\n/**\r\n * Defines the behaviour of what happens to the elements inside a container\r\n * that morphs into another BPMN element\r\n */\r\nfunction ReplaceElementBehaviour(eventBus, bpmnReplace, bpmnRules, elementRegistry, selection, modeling) {\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._bpmnReplace = bpmnReplace;\r\n  this._elementRegistry = elementRegistry;\r\n  this._selection = selection;\r\n  this._modeling = modeling;\r\n\r\n  this.postExecuted([ 'elements.move' ], 500, function(event) {\r\n\r\n    var context = event.context,\r\n        target = context.newParent,\r\n        newHost = context.newHost,\r\n        elements = [];\r\n\r\n    forEach(context.closure.topLevel, function(topLevelElements) {\r\n      if (isEventSubProcess(topLevelElements)) {\r\n        elements = elements.concat(topLevelElements.children);\r\n      } else {\r\n        elements = elements.concat(topLevelElements);\r\n      }\r\n    });\r\n\r\n    // Change target to host when the moving element is a `bpmn:BoundaryEvent`\r\n    if (elements.length === 1 && newHost) {\r\n      target = newHost;\r\n    }\r\n\r\n    var canReplace = bpmnRules.canReplace(elements, target);\r\n\r\n    if (canReplace) {\r\n      this.replaceElements(elements, canReplace.replacements, newHost);\r\n    }\r\n  }, this);\r\n\r\n  // update attachments if the host is replaced\r\n  this.postExecute([ 'shape.replace' ], 1500, function(e) {\r\n\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape,\r\n        attachers = oldShape.attachers,\r\n        canReplace;\r\n\r\n    if (attachers && attachers.length) {\r\n      canReplace = bpmnRules.canReplace(attachers, newShape);\r\n\r\n      this.replaceElements(attachers, canReplace.replacements);\r\n    }\r\n\r\n  }, this);\r\n\r\n  this.postExecuted( [ 'shape.replace' ], 1500, function(e) {\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape;\r\n\r\n    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);\r\n    modeling.updateProperties(newShape, { id: oldShape.id });\r\n  });\r\n}\r\n\r\ninherits(ReplaceElementBehaviour, CommandInterceptor);\r\n\r\n\r\nReplaceElementBehaviour.prototype.replaceElements = function(elements, newElements, newHost) {\r\n  var elementRegistry = this._elementRegistry,\r\n      bpmnReplace = this._bpmnReplace,\r\n      selection = this._selection,\r\n      modeling = this._modeling;\r\n\r\n  forEach(newElements, function(replacement) {\r\n\r\n    var newElement = {\r\n      type: replacement.newElementType\r\n    };\r\n\r\n    var oldElement = elementRegistry.get(replacement.oldElementId);\r\n\r\n    if (newHost && is(oldElement, 'bpmn:BoundaryEvent')) {\r\n      modeling.updateAttachment(oldElement, null);\r\n    }\r\n\r\n    var idx = elements.indexOf(oldElement);\r\n\r\n    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });\r\n\r\n    if (newHost && is(elements[idx], 'bpmn:BoundaryEvent')) {\r\n      modeling.updateAttachment(elements[idx], newHost);\r\n    }\r\n  });\r\n\r\n  if (newElements) {\r\n    selection.select(elements);\r\n  }\r\n};\r\n\r\nReplaceElementBehaviour.$inject = [\r\n  'eventBus', 'bpmnReplace', 'bpmnRules',\r\n  'elementRegistry', 'selection', 'modeling'\r\n];\r\n\r\nmodule.exports = ReplaceElementBehaviour;\r\n","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nvar roundBounds = require(252).roundBounds;\r\n\r\nvar hasPrimaryModifier = require(274).hasPrimaryModifier;\r\n\r\nvar SLIGHTLY_HIGHER_PRIORITY = 1001;\r\n\r\n\r\n/**\r\n * Invoke {@link Modeling#resizeLane} instead of\r\n * {@link Modeling#resizeShape} when resizing a Lane\r\n * or Participant shape.\r\n */\r\nfunction ResizeLaneBehavior(eventBus, modeling) {\r\n\r\n  eventBus.on('resize.start', SLIGHTLY_HIGHER_PRIORITY + 500, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n\r\n      // should we resize the opposite lane(s) in\r\n      // order to compensate for the resize operation?\r\n      context.balanced = !hasPrimaryModifier(event);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Intercept resize end and call resize lane function instead.\r\n   */\r\n  eventBus.on('resize.end', SLIGHTLY_HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        canExecute = context.canExecute,\r\n        newBounds = context.newBounds;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n\r\n      if (canExecute) {\r\n        // ensure we have actual pixel values for new bounds\r\n        // (important when zoom level was > 1 during move)\r\n        newBounds = roundBounds(newBounds);\r\n\r\n        // perform the actual resize\r\n        modeling.resizeLane(shape, newBounds, context.balanced);\r\n      }\r\n\r\n      // stop propagation\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nResizeLaneBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\nmodule.exports = ResizeLaneBehavior;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119),\r\n    getBusinessObject = require(95).getBusinessObject,\r\n    is = require(95).is,\r\n    computeChildrenBBox = require(223).computeChildrenBBox;\r\n\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\nfunction ToggleElementCollapseBehaviour(eventBus, elementFactory, modeling, resize) {\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  function hideEmptyLables(children) {\r\n    if (children.length) {\r\n      children.forEach(function(child) {\r\n        if (child.type === 'label' && !child.businessObject.name) {\r\n          child.hidden = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function expandedBounds(shape, defaultSize) {\r\n    var children = shape.children,\r\n        newBounds = defaultSize,\r\n        visibleElements,\r\n        visibleBBox;\r\n\r\n    visibleElements = filterVisible(children).concat([ shape ]);\r\n\r\n    visibleBBox = computeChildrenBBox(visibleElements);\r\n\r\n    if (visibleBBox) {\r\n      // center to visibleBBox with max(defaultSize, childrenBounds)\r\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\r\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\r\n\r\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\r\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\r\n    } else {\r\n      // center to collapsed shape with defaultSize\r\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\r\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\r\n    }\r\n\r\n    return newBounds;\r\n  }\r\n\r\n  function collapsedBounds(shape, defaultSize) {\r\n\r\n    return {\r\n      x: shape.x + (shape.width - defaultSize.width) / 2,\r\n      y: shape.y + (shape.height - defaultSize.height) / 2,\r\n      width: defaultSize.width,\r\n      height: defaultSize.height\r\n    };\r\n  }\r\n\r\n  this.executed([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shape = context.shape;\r\n\r\n    if (!is(shape, 'bpmn:SubProcess')) {\r\n      return;\r\n    }\r\n\r\n    if (!shape.collapsed) {\r\n      // all children got made visible through djs, hide empty labels\r\n      hideEmptyLables(shape.children);\r\n\r\n      // remove collapsed marker\r\n      getBusinessObject(shape).di.isExpanded = true;\r\n    } else {\r\n      // place collapsed marker\r\n      getBusinessObject(shape).di.isExpanded = false;\r\n    }\r\n  });\r\n\r\n  this.reverted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context;\r\n    var shape = context.shape;\r\n\r\n\r\n    // revert removing/placing collapsed marker\r\n    if (!shape.collapsed) {\r\n      getBusinessObject(shape).di.isExpanded = true;\r\n\r\n    } else {\r\n      getBusinessObject(shape).di.isExpanded = false;\r\n    }\r\n  });\r\n\r\n  this.postExecuted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n    var shape = e.context.shape,\r\n        defaultSize = elementFactory._getDefaultSize(shape),\r\n        newBounds;\r\n\r\n    if (shape.collapsed) {\r\n\r\n      // resize to default size of collapsed shapes\r\n      newBounds = collapsedBounds(shape, defaultSize);\r\n    } else {\r\n\r\n      // resize to bounds of max(visible children, defaultSize)\r\n      newBounds = expandedBounds(shape, defaultSize);\r\n    }\r\n\r\n    modeling.resizeShape(shape, newBounds);\r\n  });\r\n\r\n}\r\n\r\n\r\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\r\n\r\nToggleElementCollapseBehaviour.$inject = [\r\n  'eventBus',\r\n  'elementFactory',\r\n  'modeling'\r\n];\r\n\r\nmodule.exports = ToggleElementCollapseBehaviour;\r\n\r\n\r\n\r\n/////// helpers ///////////////////////////\r\n\r\nfunction filterVisible(elements) {\r\n  return elements.filter(function(e) {\r\n    return !e.hidden;\r\n  });\r\n}","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nfunction UnclaimIdBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('elements.delete', function(event) {\r\n    var context = event.context,\r\n        elements = context.elements;\r\n\r\n    forEach(elements, function(element) {\r\n      modeling.unclaimId(element.businessObject.id, element.businessObject);\r\n    });\r\n\r\n  });\r\n}\r\n\r\ninherits(UnclaimIdBehavior, CommandInterceptor);\r\n\r\nUnclaimIdBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\nmodule.exports = UnclaimIdBehavior;","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is,\r\n    getBusinessObject = require(95).getBusinessObject;\r\n\r\n/**\r\n * A behavior that unsets the Default property of\r\n * sequence flow source on element delete, if the\r\n * removed element is the Gateway or Task's default flow.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nfunction DeleteSequenceFlowBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  this.preExecute('connection.delete', function(event) {\r\n    var context = event.context,\r\n        connection = context.connection,\r\n        source = connection.source;\r\n\r\n    if (isDefaultFlow(connection, source)) {\r\n      modeling.updateProperties(source, {\r\n        'default': null\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\ninherits(DeleteSequenceFlowBehavior, CommandInterceptor);\r\n\r\nDeleteSequenceFlowBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\nmodule.exports = DeleteSequenceFlowBehavior;\r\n\r\n\r\n/////// helpers ///////////////////////////\r\n\r\nfunction isDefaultFlow(connection, source) {\r\n\r\n  if (!is(connection, 'bpmn:SequenceFlow')) {\r\n    return false;\r\n  }\r\n\r\n  var sourceBo = getBusinessObject(source),\r\n      sequenceFlow = getBusinessObject(connection);\r\n\r\n  return sourceBo.get('default') === sequenceFlow;\r\n}","'use strict';\r\n\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar is = require(95).is;\r\n\r\nvar LOW_PRIORITY = 500,\r\n    HIGH_PRIORITY = 5000;\r\n\r\n\r\n/**\r\n * BPMN specific delete lane behavior\r\n */\r\nfunction UpdateFlowNodeRefsBehavior(eventBus, modeling, translate) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Ok, this is it:\r\n   *\r\n   * We have to update the Lane#flowNodeRefs _and_\r\n   * FlowNode#lanes with every FlowNode move/resize and\r\n   * Lane move/resize.\r\n   *\r\n   * We want to group that stuff to recompute containments\r\n   * as efficient as possible.\r\n   *\r\n   * Yea!\r\n   */\r\n\r\n  // the update context\r\n  var context;\r\n\r\n\r\n  function initContext() {\r\n    context = context || new UpdateContext();\r\n    context.enter();\r\n\r\n    return context;\r\n  }\r\n\r\n  function getContext() {\r\n    if (!context) {\r\n      throw new Error(translate('out of bounds release'));\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  function releaseContext() {\r\n\r\n    if (!context) {\r\n      throw new Error(translate('out of bounds release'));\r\n    }\r\n\r\n    var triggerUpdate = context.leave();\r\n\r\n    if (triggerUpdate) {\r\n      modeling.updateLaneRefs(context.flowNodes, context.lanes);\r\n\r\n      context = null;\r\n    }\r\n\r\n    return triggerUpdate;\r\n  }\r\n\r\n\r\n  var laneRefUpdateEvents = [\r\n    'spaceTool',\r\n    'lane.add',\r\n    'lane.resize',\r\n    'lane.split',\r\n    'elements.move',\r\n    'elements.delete',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'shape.move',\r\n    'shape.resize'\r\n  ];\r\n\r\n\r\n  // listen to a lot of stuff to group lane updates\r\n\r\n  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY, function(event) {\r\n    initContext();\r\n  });\r\n\r\n  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY, function(event) {\r\n    releaseContext();\r\n  });\r\n\r\n\r\n  // Mark flow nodes + lanes that need an update\r\n\r\n  this.preExecute([\r\n    'shape.create',\r\n    'shape.move',\r\n    'shape.delete',\r\n    'shape.resize'\r\n  ], function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    var updateContext = getContext();\r\n\r\n    // no need to update labels\r\n    if (shape.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Lane')) {\r\n      updateContext.addLane(shape);\r\n    }\r\n\r\n    if (is(shape, 'bpmn:FlowNode')) {\r\n      updateContext.addFlowNode(shape);\r\n    }\r\n  });\r\n}\r\n\r\nUpdateFlowNodeRefsBehavior.$inject = [ 'eventBus', 'modeling' , 'translate'];\r\n\r\ninherits(UpdateFlowNodeRefsBehavior, CommandInterceptor);\r\n\r\nmodule.exports = UpdateFlowNodeRefsBehavior;\r\n\r\n\r\n\r\nfunction UpdateContext() {\r\n\r\n  this.flowNodes = [];\r\n  this.lanes = [];\r\n\r\n  this.counter = 0;\r\n\r\n  this.addLane = function(lane) {\r\n    this.lanes.push(lane);\r\n  };\r\n\r\n  this.addFlowNode = function(flowNode) {\r\n    this.flowNodes.push(flowNode);\r\n  };\r\n\r\n  this.enter = function() {\r\n    this.counter++;\r\n  };\r\n\r\n  this.leave = function() {\r\n    this.counter--;\r\n\r\n    return !this.counter;\r\n  };\r\n}","module.exports = {\r\n  __init__: [\r\n    'appendBehavior',\r\n    'copyPasteBehavior',\r\n    'createBoundaryEventBehavior',\r\n    'createDataObjectBehavior',\r\n    'dropOnFlowBehavior',\r\n    'createParticipantBehavior',\r\n    'dataInputAssociationBehavior',\r\n    'deleteLaneBehavior',\r\n    'importDockingFix',\r\n    'labelBehavior',\r\n    'modelingFeedback',\r\n    'removeParticipantBehavior',\r\n    'replaceConnectionBehavior',\r\n    'replaceElementBehaviour',\r\n    'resizeLaneBehavior',\r\n    'unsetDefaultFlowBehavior',\r\n    'updateFlowNodeRefsBehavior',\r\n    'removeElementBehavior',\r\n    'unclaimIdBehavior',\r\n    'toggleElementCollapseBehaviour'\r\n  ],\r\n  appendBehavior: [ 'type', require(33) ],\r\n  copyPasteBehavior: [ 'type', require(34) ],\r\n  createBoundaryEventBehavior: [ 'type', require(35) ],\r\n  createDataObjectBehavior: [ 'type', require(36) ],\r\n  dropOnFlowBehavior: [ 'type', require(40) ],\r\n  createParticipantBehavior: [ 'type', require(37) ],\r\n  dataInputAssociationBehavior: [ 'type', require(38) ],\r\n  deleteLaneBehavior: [ 'type', require(39) ],\r\n  importDockingFix: [ 'type', require(41) ],\r\n  labelBehavior: [ 'type', require(42) ],\r\n  modelingFeedback: [ 'type', require(43) ],\r\n  removeParticipantBehavior: [ 'type', require(45) ],\r\n  replaceConnectionBehavior: [ 'type', require(46) ],\r\n  replaceElementBehaviour: [ 'type', require(47) ],\r\n  resizeLaneBehavior: [ 'type', require(48) ],\r\n  unsetDefaultFlowBehavior: [ 'type', require(51) ],\r\n  updateFlowNodeRefsBehavior: [ 'type', require(52) ],\r\n  removeElementBehavior: [ 'type', require(44) ],\r\n  unclaimIdBehavior: [ 'type', require(50) ],\r\n  toggleElementCollapseBehaviour : [ 'type', require(49) ]\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Returns the length of a vector\r\n *\r\n * @param {Vector}\r\n * @return {Float}\r\n */\r\nfunction vectorLength(v) {\r\n  return Math.sqrt( Math.pow(v.x, 2) + Math.pow(v.y, 2) );\r\n}\r\n\r\nmodule.exports.vectorLength = vectorLength;\r\n\r\n/**\r\n * Calculates the angle between a line a the yAxis\r\n *\r\n * @param {Array}\r\n * @return {Float}\r\n */\r\nfunction getAngle(line) {\r\n  // return value is between 0, 180 and -180, -0\r\n  // @janstuemmel: maybe replace return a/b with b/a\r\n  return Math.atan( (line[1].y - line[0].y) / (line[1].x - line[0].x) );\r\n}\r\n\r\nmodule.exports.getAngle = getAngle;\r\n\r\n/**\r\n * Rotates a vector by a given angle\r\n *\r\n * @param {Vector}\r\n * @param {Float} Angle in radians\r\n * @return {Vector}\r\n */\r\nfunction rotateVector(vector, angle) {\r\n  return (!angle) ? vector : {\r\n    x: Math.cos(angle) * vector.x - Math.sin(angle) * vector.y,\r\n    y: Math.sin(angle) * vector.x + Math.cos(angle) * vector.y\r\n  };\r\n}\r\n\r\nmodule.exports.rotateVector = rotateVector;\r\n\r\n/**\r\n * Solves a 2D equation system\r\n * a + r*b = c, where a,b,c are 2D vectors\r\n *\r\n * @param {Vector}\r\n * @param {Vector}\r\n * @param {Vector}\r\n * @return {Float}\r\n */\r\nfunction solveLambaSystem(a, b, c) {\r\n\r\n  // the 2d system\r\n  var system = [\r\n    { n: a[0] - c[0], lambda: b[0] },\r\n    { n: a[1] - c[1], lambda: b[1] }\r\n  ];\r\n\r\n  // solve\r\n  var n = system[0].n * b[0] + system[1].n * b[1],\r\n      l = system[0].lambda * b[0] + system[1].lambda * b[1];\r\n\r\n  return -n/l;\r\n}\r\n\r\n/**\r\n * Position of perpendicular foot\r\n *\r\n * @param {Point}\r\n * @param [ {Point}, {Point} ] line defined throug two points\r\n * @return {Point} the perpendicular foot position\r\n */\r\nfunction perpendicularFoot(point, line) {\r\n\r\n  var a = line[0], b = line[1];\r\n\r\n  // relative position of b from a\r\n  var bd = { x: b.x - a.x, y: b.y - a.y };\r\n\r\n  // solve equation system to the parametrized vectors param real value\r\n  var r = solveLambaSystem( [ a.x, a.y ], [ bd.x, bd.y ], [ point.x, point.y ] );\r\n\r\n  return { x: a.x + r*bd.x, y: a.y + r*bd.y };\r\n\r\n}\r\n\r\nmodule.exports.perpendicularFoot = perpendicularFoot;\r\n\r\n/**\r\n * Calculates the distance between a point and a line\r\n *\r\n * @param {Point}\r\n * @param [ {Point}, {Point} ] line defined throug two points\r\n * @return {Float} distance\r\n */\r\nfunction getDistancePointLine(point, line) {\r\n\r\n  var pfPoint = perpendicularFoot(point, line);\r\n\r\n  // distance vector\r\n  var connectionVector = {\r\n    x: pfPoint.x - point.x,\r\n    y: pfPoint.y - point.y\r\n  };\r\n\r\n  return vectorLength(connectionVector);\r\n}\r\n\r\nmodule.exports.getDistancePointLine = getDistancePointLine;\r\n\r\n/**\r\n * Calculates the distance between two points\r\n *\r\n * @param {Point}\r\n * @param {Point}\r\n * @return {Float} distance\r\n */\r\nfunction getDistancePointPoint(point1, point2) {\r\n\r\n  return vectorLength({\r\n    x: point1.x - point2.x,\r\n    y: point1.y - point2.y\r\n  });\r\n}\r\n\r\nmodule.exports.getDistancePointPoint = getDistancePointPoint;\r\n","'use strict';\r\n\r\nvar GeometricUtil = require(54);\r\n\r\nvar getDistancePointPoint = require(54).getDistancePointPoint;\r\n\r\nvar getAttachment = require(56).getAttachment;\r\n\r\n\r\nfunction findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {\r\n\r\n  var index = attachment.segmentIndex;\r\n\r\n  var offset = newWaypoints.length - oldWaypoints.length;\r\n\r\n  // segmentMove happend\r\n  if (hints.segmentMove) {\r\n\r\n    var oldSegmentStartIndex = hints.segmentMove.segmentStartIndex,\r\n        newSegmentStartIndex = hints.segmentMove.newSegmentStartIndex;\r\n\r\n    // if label was on moved segment return new segment index\r\n    if (index === oldSegmentStartIndex) {\r\n      return newSegmentStartIndex;\r\n    }\r\n\r\n    // label is after new segment index\r\n    if (index >= newSegmentStartIndex) {\r\n      return (index+offset < newSegmentStartIndex) ? newSegmentStartIndex : index+offset;\r\n    }\r\n\r\n    // if label is before new segment index\r\n    return index;\r\n  }\r\n\r\n  // bendpointMove happend\r\n  if (hints.bendpointMove) {\r\n\r\n    var insert = hints.bendpointMove.insert,\r\n        bendpointIndex = hints.bendpointMove.bendpointIndex,\r\n        newIndex;\r\n\r\n    // waypoints length didnt change\r\n    if (offset === 0) {\r\n      return index;\r\n    }\r\n\r\n    // label behind new/removed bendpoint\r\n    if (index >= bendpointIndex) {\r\n      newIndex = insert ? index + 1 : index - 1;\r\n    }\r\n\r\n    // label before new/removed bendpoint\r\n    if (index < bendpointIndex) {\r\n\r\n      newIndex = index;\r\n\r\n      // decide label should take right or left segment\r\n      if (insert && attachment.type !== 'bendpoint' && bendpointIndex-1 === index) {\r\n\r\n        var rel = relativePositionMidWaypoint(newWaypoints, bendpointIndex);\r\n\r\n        if (rel < attachment.relativeLocation) {\r\n          newIndex++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return newIndex;\r\n  }\r\n\r\n  // start/end changed\r\n  if (offset === 0) {\r\n    return index;\r\n  }\r\n\r\n  if (hints.connectionStart) {\r\n    return (index === 0) ? 0 : null;\r\n  }\r\n\r\n  if (hints.connectionEnd) {\r\n    return (index === oldWaypoints.length - 2) ? newWaypoints.length - 2 : null;\r\n  }\r\n\r\n  // if nothing fits, return null\r\n  return null;\r\n}\r\n\r\nmodule.exports.findNewLabelLineStartIndex = findNewLabelLineStartIndex;\r\n\r\n\r\n/**\r\n * Calculate the required adjustment (move delta) for the given label\r\n * after the connection waypoints got updated.\r\n *\r\n * @param {djs.model.Label} label\r\n * @param {Array<Point>} newWaypoints\r\n * @param {Array<Point>} oldWaypoints\r\n * @param {Object} hints\r\n *\r\n * @return {Point} delta\r\n */\r\nfunction getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {\r\n\r\n  var x = 0,\r\n      y = 0;\r\n\r\n  var labelPosition = getLabelMid(label);\r\n\r\n  // get closest attachment\r\n  var attachment = getAttachment(labelPosition, oldWaypoints),\r\n      oldLabelLineIndex = attachment.segmentIndex,\r\n      newLabelLineIndex = findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);\r\n\r\n  if (newLabelLineIndex === null) {\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  // should never happen\r\n  // TODO(@janstuemmel): throw an error here when connectionSegmentMove is refactored\r\n  if (newLabelLineIndex < 0 ||\r\n      newLabelLineIndex > newWaypoints.length - 2) {\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  var oldLabelLine = getLine(oldWaypoints, oldLabelLineIndex),\r\n      newLabelLine = getLine(newWaypoints, newLabelLineIndex),\r\n      oldFoot = attachment.position;\r\n\r\n  var relativeFootPosition = getRelativeFootPosition(oldLabelLine, oldFoot),\r\n      angleDelta = getAngleDelta(oldLabelLine, newLabelLine);\r\n\r\n  // special rule if label on bendpoint\r\n  if (attachment.type === 'bendpoint') {\r\n\r\n    var offset = newWaypoints.length - oldWaypoints.length,\r\n        oldBendpointIndex = attachment.bendpointIndex,\r\n        oldBendpoint = oldWaypoints[oldBendpointIndex];\r\n\r\n    // bendpoint position hasnt changed, return same position\r\n    if (newWaypoints.indexOf(oldBendpoint) !== -1) {\r\n      return { x: x, y: y };\r\n    }\r\n\r\n    // new bendpoint and old bendpoint have same index, then just return the offset\r\n    if (offset === 0) {\r\n      var newBendpoint = newWaypoints[oldBendpointIndex];\r\n\r\n      return {\r\n        x: newBendpoint.x - attachment.position.x,\r\n        y: newBendpoint.y - attachment.position.y\r\n      };\r\n    }\r\n\r\n    // if bendpoints get removed\r\n    if (offset < 0 && oldBendpointIndex !== 0 && oldBendpointIndex < oldWaypoints.length - 1) {\r\n      relativeFootPosition = relativePositionMidWaypoint(oldWaypoints, oldBendpointIndex);\r\n    }\r\n  }\r\n\r\n  var newFoot = {\r\n    x: (newLabelLine[1].x - newLabelLine[0].x) * relativeFootPosition + newLabelLine[0].x,\r\n    y: (newLabelLine[1].y - newLabelLine[0].y) * relativeFootPosition + newLabelLine[0].y\r\n  };\r\n\r\n  // the rotated vector to label\r\n  var newLabelVector = GeometricUtil.rotateVector({\r\n    x: labelPosition.x - oldFoot.x,\r\n    y: labelPosition.y - oldFoot.y\r\n  }, angleDelta);\r\n\r\n  // the new relative position\r\n  x = newFoot.x + newLabelVector.x - labelPosition.x;\r\n  y = newFoot.y + newLabelVector.y - labelPosition.y;\r\n\r\n  return { x: x, y: y };\r\n}\r\n\r\nmodule.exports.getLabelAdjustment = getLabelAdjustment;\r\n\r\n\r\n//// HELPERS ///////\r\n\r\nfunction relativePositionMidWaypoint(waypoints, idx) {\r\n\r\n  var distanceSegment1 = getDistancePointPoint(waypoints[idx-1], waypoints[idx]),\r\n      distanceSegment2 = getDistancePointPoint(waypoints[idx], waypoints[idx+1]);\r\n\r\n  var relativePosition = distanceSegment1 / ( distanceSegment1 + distanceSegment2 );\r\n\r\n  return relativePosition;\r\n\r\n}\r\n\r\nfunction getLabelMid(label) {\r\n  return {\r\n    x: label.x + label.width / 2,\r\n    y: label.y + label.height / 2\r\n  };\r\n}\r\n\r\nfunction getAngleDelta(l1, l2) {\r\n  var a1 = GeometricUtil.getAngle(l1),\r\n      a2 = GeometricUtil.getAngle(l2);\r\n  return a2 - a1;\r\n}\r\n\r\nfunction getLine(waypoints, idx) {\r\n  return [ waypoints[idx], waypoints[idx+1] ];\r\n}\r\n\r\nfunction getRelativeFootPosition(line, foot) {\r\n\r\n  var length = getDistancePointPoint(line[0], line[1]),\r\n      lengthToFoot = getDistancePointPoint(line[0], foot);\r\n\r\n  return length === 0 ? 0 : lengthToFoot / length;\r\n}\r\n","'use strict';\r\n\r\nvar sqrt = Math.sqrt,\r\n    min = Math.min,\r\n    max = Math.max,\r\n    abs = Math.abs;\r\n\r\n/**\r\n * Calculate the square (power to two) of a number.\r\n *\r\n * @param {Number} n\r\n *\r\n * @return {Number}\r\n */\r\nfunction sq(n) {\r\n  return Math.pow(n, 2);\r\n}\r\n\r\n/**\r\n * Get distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n *\r\n * @return {Number}\r\n */\r\nfunction getDistance(p1, p2) {\r\n  return sqrt(sq(p1.x - p2.x) + sq(p1.y - p2.y));\r\n}\r\n\r\n/**\r\n * Return the attachment of the given point on the specified line.\r\n *\r\n * The attachment is either a bendpoint (attached to the given point)\r\n * or segment (attached to a location on a line segment) attachment:\r\n *\r\n * ```javascript\r\n * var pointAttachment = {\r\n *   type: 'bendpoint',\r\n *   bendpointIndex: 3,\r\n *   position: { x: 10, y: 10 } // the attach point on the line\r\n * };\r\n *\r\n * var segmentAttachment = {\r\n *   type: 'segment',\r\n *   segmentIndex: 2,\r\n *   relativeLocation: 0.31, // attach point location between 0 (at start) and 1 (at end)\r\n *   position: { x: 10, y: 10 } // the attach point on the line\r\n * };\r\n * ```\r\n *\r\n * @param {Point} point\r\n * @param {Array<Point>} line\r\n *\r\n * @return {Object} attachment\r\n */\r\nfunction getAttachment(point, line) {\r\n\r\n  var idx = 0,\r\n      segmentStart,\r\n      segmentEnd,\r\n      segmentStartDistance,\r\n      segmentEndDistance,\r\n      attachmentPosition,\r\n      minDistance,\r\n      intersections,\r\n      attachment,\r\n      attachmentDistance,\r\n      closestAttachmentDistance,\r\n      closestAttachment;\r\n\r\n  for (idx = 0; idx < line.length - 1; idx++) {\r\n\r\n    segmentStart = line[idx];\r\n    segmentEnd = line[idx + 1];\r\n\r\n    if (pointsEqual(segmentStart, segmentEnd)) {\r\n      intersections = [ segmentStart ];\r\n    } else {\r\n      segmentStartDistance = getDistance(point, segmentStart);\r\n      segmentEndDistance = getDistance(point, segmentEnd);\r\n\r\n      minDistance = min(segmentStartDistance, segmentEndDistance);\r\n\r\n      intersections = getCircleSegmentIntersections(segmentStart, segmentEnd, point, minDistance);\r\n    }\r\n\r\n    if (intersections.length < 1) {\r\n      throw new Error('expected between [1, 2] circle -> line intersections');\r\n    }\r\n\r\n    // one intersection -> bendpoint attachment\r\n    if (intersections.length === 1) {\r\n      attachment = {\r\n        type: 'bendpoint',\r\n        position: intersections[0],\r\n        segmentIndex: idx,\r\n        bendpointIndex: pointsEqual(segmentStart, intersections[0]) ? idx : idx + 1\r\n      };\r\n    }\r\n\r\n    // two intersections -> segment attachment\r\n    if (intersections.length === 2) {\r\n\r\n      attachmentPosition = mid(intersections[0], intersections[1]);\r\n\r\n      attachment = {\r\n        type: 'segment',\r\n        position: attachmentPosition,\r\n        segmentIndex: idx,\r\n        relativeLocation: getDistance(segmentStart, attachmentPosition) / getDistance(segmentStart, segmentEnd)\r\n      };\r\n    }\r\n\r\n    attachmentDistance = getDistance(attachment.position, point);\r\n\r\n    if (!closestAttachment || closestAttachmentDistance > attachmentDistance) {\r\n      closestAttachment = attachment;\r\n      closestAttachmentDistance = attachmentDistance;\r\n    }\r\n  }\r\n\r\n  return closestAttachment;\r\n}\r\n\r\nmodule.exports.getAttachment = getAttachment;\r\n\r\n/**\r\n * Gets the intersection between a circle and a line segment.\r\n *\r\n * @param {Point} s1 segment start\r\n * @param {Point} s2 segment end\r\n * @param {Point} cc circle center\r\n * @param {Number} cr circle radius\r\n *\r\n * @return {Array<Point>} intersections\r\n */\r\nfunction getCircleSegmentIntersections(s1, s2, cc, cr) {\r\n\r\n  var baX = s2.x - s1.x;\r\n  var baY = s2.y - s1.y;\r\n  var caX = cc.x - s1.x;\r\n  var caY = cc.y - s1.y;\r\n\r\n  var a = baX * baX + baY * baY;\r\n  var bBy2 = baX * caX + baY * caY;\r\n  var c = caX * caX + caY * caY - cr * cr;\r\n\r\n  var pBy2 = bBy2 / a;\r\n  var q = c / a;\r\n\r\n  var disc = pBy2 * pBy2 - q;\r\n\r\n  // check against negative value to work around\r\n  // negative, very close to zero results (-4e-15)\r\n  // being produced in some environments\r\n  if (disc < 0 && disc > -0.000001) {\r\n    disc = 0;\r\n  }\r\n\r\n  if (disc < 0) {\r\n    return [];\r\n  }\r\n\r\n  // if disc == 0 ... dealt with later\r\n  var tmpSqrt = sqrt(disc);\r\n  var abScalingFactor1 = -pBy2 + tmpSqrt;\r\n  var abScalingFactor2 = -pBy2 - tmpSqrt;\r\n\r\n  var i1 = {\r\n    x: s1.x - baX * abScalingFactor1,\r\n    y: s1.y - baY * abScalingFactor1\r\n  };\r\n\r\n  if (disc === 0) { // abScalingFactor1 == abScalingFactor2\r\n    return [ i1 ];\r\n  }\r\n\r\n  var i2 = {\r\n    x: s1.x - baX * abScalingFactor2,\r\n    y: s1.y - baY * abScalingFactor2\r\n  };\r\n\r\n  // return only points on line segment\r\n  return [ i1, i2 ].filter(function(p) {\r\n    return isPointInSegment(p, s1, s2);\r\n  });\r\n}\r\n\r\n\r\nfunction isPointInSegment(p, segmentStart, segmentEnd) {\r\n  return (\r\n    fenced(p.x, segmentStart.x, segmentEnd.x) &&\r\n    fenced(p.y, segmentStart.y, segmentEnd.y)\r\n  );\r\n}\r\n\r\nfunction fenced(n, rangeStart, rangeEnd) {\r\n\r\n  // use matching threshold to work around\r\n  // precisison errors in intersection computation\r\n\r\n  return (\r\n    n >= min(rangeStart, rangeEnd) - EQUAL_THRESHOLD &&\r\n    n <= max(rangeStart, rangeEnd) + EQUAL_THRESHOLD\r\n  );\r\n}\r\n\r\n/**\r\n * Calculate mid of two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n *\r\n * @return {Point}\r\n */\r\nfunction mid(p1, p2) {\r\n\r\n  return {\r\n    x: (p1.x + p2.x) / 2,\r\n    y: (p1.y + p2.y) / 2\r\n  };\r\n}\r\n\r\nvar EQUAL_THRESHOLD = 0.1;\r\n\r\nfunction pointsEqual(p1, p2) {\r\n\r\n  return (\r\n    abs(p1.x - p2.x) <= EQUAL_THRESHOLD &&\r\n    abs(p1.y - p2.y) <= EQUAL_THRESHOLD\r\n  );\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Returns the intersection between two line segments a and b.\r\n *\r\n * @param {Point} l1s\r\n * @param {Point} l1e\r\n * @param {Point} l2s\r\n * @param {Point} l2e\r\n *\r\n * @return {Point}\r\n */\r\nmodule.exports = function lineIntersect(l1s, l1e, l2s, l2e) {\r\n  // if the lines intersect, the result contains the x and y of the\r\n  // intersection (treating the lines as infinite) and booleans for\r\n  // whether line segment 1 or line segment 2 contain the point\r\n  var denominator, a, b, c, numerator;\r\n\r\n  denominator = ((l2e.y - l2s.y) * (l1e.x - l1s.x)) - ((l2e.x - l2s.x) * (l1e.y - l1s.y));\r\n\r\n  if (denominator == 0) {\r\n    return null;\r\n  }\r\n\r\n  a = l1s.y - l2s.y;\r\n  b = l1s.x - l2s.x;\r\n  numerator = ((l2e.x - l2s.x) * a) - ((l2e.y - l2s.y) * b);\r\n\r\n  c = numerator / denominator;\r\n\r\n  // if we cast these lines infinitely in\r\n  // both directions, they intersect here\r\n  return {\r\n    x: Math.round(l1s.x + (c * (l1e.x - l1s.x))),\r\n    y: Math.round(l1s.y + (c * (l1e.y - l1s.y)))\r\n  };\r\n};","'use strict';\r\n\r\nvar filter = require(301);\r\n\r\nvar Elements = require(266);\r\n\r\nvar getLanesRoot = require(67).getLanesRoot,\r\n    getChildLanes = require(67).getChildLanes,\r\n    LANE_INDENTATION = require(67).LANE_INDENTATION;\r\n\r\n/**\r\n * A handler that allows us to add a new lane\r\n * above or below an existing one.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction AddLaneHandler(modeling, spaceTool) {\r\n  this._modeling = modeling;\r\n  this._spaceTool = spaceTool;\r\n}\r\n\r\nAddLaneHandler.$inject = [ 'modeling', 'spaceTool' ];\r\n\r\nmodule.exports = AddLaneHandler;\r\n\r\n\r\nAddLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var spaceTool = this._spaceTool,\r\n      modeling = this._modeling;\r\n\r\n  var shape = context.shape,\r\n      location = context.location;\r\n\r\n  var lanesRoot = getLanesRoot(shape);\r\n\r\n  var isRoot = lanesRoot === shape,\r\n      laneParent = isRoot ? shape : shape.parent;\r\n\r\n  var existingChildLanes = getChildLanes(laneParent);\r\n\r\n  // (0) add a lane if we currently got none and are adding to root\r\n  if (!existingChildLanes.length) {\r\n    modeling.createShape({ type: 'bpmn:Lane' }, {\r\n      x: shape.x + LANE_INDENTATION,\r\n      y: shape.y,\r\n      width: shape.width - LANE_INDENTATION,\r\n      height: shape.height\r\n    }, laneParent);\r\n  }\r\n\r\n  // (1) collect affected elements to create necessary space\r\n  var allAffected = [];\r\n\r\n  Elements.eachElement(lanesRoot, function(element) {\r\n    allAffected.push(element);\r\n\r\n    if (element === shape) {\r\n      return [];\r\n    }\r\n\r\n    return filter(element.children, function(c) {\r\n      return c !== shape;\r\n    });\r\n  });\r\n\r\n  var offset = location === 'top' ? -120 : 120,\r\n      lanePosition = location === 'top' ? shape.y : shape.y + shape.height,\r\n      spacePos = lanePosition + (location === 'top' ? 10 : -10),\r\n      direction = location === 'top' ? 'n' : 's';\r\n\r\n  var adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\r\n\r\n  spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: offset }, direction);\r\n\r\n  // (2) create new lane at open space\r\n  context.newLane = modeling.createShape({ type: 'bpmn:Lane' }, {\r\n    x: shape.x + (isRoot ? LANE_INDENTATION : 0),\r\n    y: lanePosition - (location === 'top' ? 120 : 0),\r\n    width: shape.width - (isRoot ? LANE_INDENTATION : 0),\r\n    height: 120\r\n  }, laneParent);\r\n};\r\n","'use strict';\r\n\r\n\r\nfunction IdClaimHandler(moddle) {\r\n  this._moddle = moddle;\r\n}\r\n\r\nIdClaimHandler.$inject = [ 'moddle' ];\r\n\r\nmodule.exports = IdClaimHandler;\r\n\r\n\r\nIdClaimHandler.prototype.execute = function(context) {\r\n  var ids = this._moddle.ids,\r\n      id = context.id,\r\n      element = context.element,\r\n      claiming = context.claiming;\r\n\r\n  if (claiming) {\r\n    ids.claim(id, element);\r\n  } else {\r\n    ids.unclaim(id);\r\n  }\r\n};\r\n\r\n/**\r\n * Command revert implementation.\r\n */\r\nIdClaimHandler.prototype.revert = function(context) {\r\n  var ids = this._moddle.ids,\r\n      id = context.id,\r\n      element = context.element,\r\n      claiming = context.claiming;\r\n\r\n  if (claiming) {\r\n    ids.unclaim(id);\r\n  } else {\r\n    ids.claim(id, element);\r\n  }\r\n};\r\n\r\n","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nvar getLanesRoot = require(67).getLanesRoot,\r\n    computeLanesResize = require(67).computeLanesResize;\r\n\r\nvar eachElement = require(266).eachElement;\r\n\r\nvar asTRBL = require(252).asTRBL,\r\n    substractTRBL = require(223).substractTRBL;\r\n\r\n\r\n/**\r\n * A handler that resizes a lane.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction ResizeLaneHandler(modeling, spaceTool) {\r\n  this._modeling = modeling;\r\n  this._spaceTool = spaceTool;\r\n}\r\n\r\nResizeLaneHandler.$inject = [ 'modeling', 'spaceTool' ];\r\n\r\nmodule.exports = ResizeLaneHandler;\r\n\r\n\r\nResizeLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      newBounds = context.newBounds,\r\n      balanced = context.balanced;\r\n\r\n  if (balanced !== false) {\r\n    this.resizeBalanced(shape, newBounds);\r\n  } else {\r\n    this.resizeSpace(shape, newBounds);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Resize balanced, adjusting next / previous lane sizes.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n */\r\nResizeLaneHandler.prototype.resizeBalanced = function(shape, newBounds) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var resizeNeeded = computeLanesResize(shape, newBounds);\r\n\r\n  // resize the lane\r\n  modeling.resizeShape(shape, newBounds);\r\n\r\n  // resize other lanes as needed\r\n  resizeNeeded.forEach(function(r) {\r\n    modeling.resizeShape(r.shape, r.newBounds);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Resize, making actual space and moving below / above elements.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n */\r\nResizeLaneHandler.prototype.resizeSpace = function(shape, newBounds) {\r\n  var spaceTool = this._spaceTool;\r\n\r\n  var shapeTrbl = asTRBL(shape),\r\n      newTrbl = asTRBL(newBounds);\r\n\r\n  var trblDiff = substractTRBL(newTrbl, shapeTrbl);\r\n\r\n  var lanesRoot = getLanesRoot(shape);\r\n\r\n  var allAffected = [],\r\n      allLanes = [];\r\n\r\n  eachElement(lanesRoot, function(element) {\r\n    allAffected.push(element);\r\n\r\n    if (is(element, 'bpmn:Lane') || is(element, 'bpmn:Participant')) {\r\n      allLanes.push(element);\r\n    }\r\n\r\n    return element.children;\r\n  });\r\n\r\n  var change,\r\n      spacePos,\r\n      direction,\r\n      offset,\r\n      adjustments;\r\n\r\n  if (trblDiff.bottom || trblDiff.top) {\r\n\r\n    change = trblDiff.bottom || trblDiff.top;\r\n    spacePos = shape.y + (trblDiff.bottom ? shape.height : 0) + (trblDiff.bottom ? -10 : 10);\r\n    direction = trblDiff.bottom ? 's' : 'n';\r\n\r\n    offset = trblDiff.top > 0 || trblDiff.bottom < 0 ? -change : change;\r\n\r\n    adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\r\n\r\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: change }, direction);\r\n  }\r\n\r\n\r\n  if (trblDiff.left || trblDiff.right) {\r\n\r\n    change = trblDiff.right || trblDiff.left;\r\n    spacePos = shape.x + (trblDiff.right ? shape.width : 0) + (trblDiff.right ? -10 : 100);\r\n    direction = trblDiff.right ? 'e' : 'w';\r\n\r\n    offset = trblDiff.left > 0 || trblDiff.right < 0 ? -change : change;\r\n\r\n    adjustments = spaceTool.calculateAdjustments(allLanes, 'x', offset, spacePos);\r\n\r\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: change, y: 0 }, direction);\r\n  }\r\n};","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303);\r\n\r\nfunction SetColorHandler(commandStack) {\r\n  this._commandStack = commandStack;\r\n}\r\n\r\nSetColorHandler.$inject = [ 'commandStack' ];\r\n\r\nmodule.exports = SetColorHandler;\r\n\r\nSetColorHandler.prototype.postExecute = function(context) {\r\n  var elements = context.elements,\r\n      colors = context.colors || { fill: undefined, stroke: undefined };\r\n\r\n  var that = this;\r\n\r\n  var di = {};\r\n\r\n  if ('fill' in colors) {\r\n    assign(di, { fill: colors.fill });\r\n  }\r\n\r\n  if ('stroke' in colors) {\r\n    assign(di, { stroke: colors.stroke });\r\n  }\r\n\r\n  forEach(elements, function(element) {\r\n    that._commandStack.execute('element.updateProperties', {\r\n      element: element,\r\n      properties: {\r\n        di: di\r\n      }\r\n    });\r\n  });\r\n\r\n};\r\n\r\nSetColorHandler.prototype.execute = function(context) {};\r\n\r\nSetColorHandler.prototype.revert = function(context) {};\r\n","'use strict';\r\n\r\nvar getChildLanes = require(67).getChildLanes;\r\n\r\nvar LANE_INDENTATION = require(67).LANE_INDENTATION;\r\n\r\n/**\r\n * A handler that splits a lane into a number of sub-lanes,\r\n * creating new sub lanes, if neccessary.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction SplitLaneHandler(modeling, translate) {\r\n  this._modeling = modeling;\r\n  this._translate = translate;\r\n}\r\n\r\nSplitLaneHandler.$inject = [ 'modeling', 'translate'];\r\n\r\nmodule.exports = SplitLaneHandler;\r\n\r\n\r\nSplitLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var modeling = this._modeling,\r\n      translate = this._translate;\r\n\r\n  var shape = context.shape,\r\n      newLanesCount = context.count;\r\n\r\n  var childLanes = getChildLanes(shape),\r\n      existingLanesCount = childLanes.length;\r\n\r\n  if (existingLanesCount > newLanesCount) {\r\n    throw new Error(translate('more than {count} child lanes', { count: newLanesCount }));\r\n  }\r\n\r\n  var newLanesHeight = Math.round(shape.height / newLanesCount);\r\n\r\n  // Iterate from top to bottom in child lane order,\r\n  // resizing existing lanes and creating new ones\r\n  // so that they split the parent proportionally.\r\n  //\r\n  // Due to rounding related errors, the bottom lane\r\n  // needs to take up all the remaining space.\r\n  var laneY,\r\n      laneHeight,\r\n      laneBounds,\r\n      newLaneAttrs,\r\n      idx;\r\n\r\n  for (idx = 0; idx < newLanesCount; idx++) {\r\n\r\n    laneY = shape.y + idx * newLanesHeight;\r\n\r\n    // if bottom lane\r\n    if (idx === newLanesCount - 1) {\r\n      laneHeight = shape.height - (newLanesHeight * idx);\r\n    } else {\r\n      laneHeight = newLanesHeight;\r\n    }\r\n\r\n    laneBounds = {\r\n      x: shape.x + LANE_INDENTATION,\r\n      y: laneY,\r\n      width: shape.width - LANE_INDENTATION,\r\n      height: laneHeight\r\n    };\r\n\r\n    if (idx < existingLanesCount) {\r\n      // resize existing lane\r\n      modeling.resizeShape(childLanes[idx], laneBounds);\r\n    } else {\r\n      // create a new lane at position\r\n      newLaneAttrs = {\r\n        type: 'bpmn:Lane'\r\n      };\r\n\r\n      modeling.createShape(newLaneAttrs, laneBounds, shape);\r\n    }\r\n  }\r\n};\r\n","'use strict';\r\n\r\nvar Collections = require(263);\r\n\r\n\r\nfunction UpdateCanvasRootHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nUpdateCanvasRootHandler.$inject = [ 'canvas', 'modeling' ];\r\n\r\nmodule.exports = UpdateCanvasRootHandler;\r\n\r\n\r\nUpdateCanvasRootHandler.prototype.execute = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var newRoot = context.newRoot,\r\n      newRootBusinessObject = newRoot.businessObject,\r\n      oldRoot = canvas.getRootElement(),\r\n      oldRootBusinessObject = oldRoot.businessObject,\r\n      bpmnDefinitions = oldRootBusinessObject.$parent,\r\n      diPlane = oldRootBusinessObject.di;\r\n\r\n  // (1) replace process old <> new root\r\n  canvas.setRootElement(newRoot, true);\r\n\r\n  // (2) update root elements\r\n  Collections.add(bpmnDefinitions.rootElements, newRootBusinessObject);\r\n  newRootBusinessObject.$parent = bpmnDefinitions;\r\n\r\n  Collections.remove(bpmnDefinitions.rootElements, oldRootBusinessObject);\r\n  oldRootBusinessObject.$parent = null;\r\n\r\n  // (3) wire di\r\n  oldRootBusinessObject.di = null;\r\n\r\n  diPlane.bpmnElement = newRootBusinessObject;\r\n  newRootBusinessObject.di = diPlane;\r\n\r\n  context.oldRoot = oldRoot;\r\n\r\n  // TODO(nikku): return changed elements?\r\n  // return [ newRoot, oldRoot ];\r\n};\r\n\r\n\r\nUpdateCanvasRootHandler.prototype.revert = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var newRoot = context.newRoot,\r\n      newRootBusinessObject = newRoot.businessObject,\r\n      oldRoot = context.oldRoot,\r\n      oldRootBusinessObject = oldRoot.businessObject,\r\n      bpmnDefinitions = newRootBusinessObject.$parent,\r\n      diPlane = newRootBusinessObject.di;\r\n\r\n  // (1) replace process old <> new root\r\n  canvas.setRootElement(oldRoot, true);\r\n\r\n  // (2) update root elements\r\n  Collections.remove(bpmnDefinitions.rootElements, newRootBusinessObject);\r\n  newRootBusinessObject.$parent = null;\r\n\r\n  Collections.add(bpmnDefinitions.rootElements, oldRootBusinessObject);\r\n  oldRootBusinessObject.$parent = bpmnDefinitions;\r\n\r\n  // (3) wire di\r\n  newRootBusinessObject.di = null;\r\n\r\n  diPlane.bpmnElement = oldRootBusinessObject;\r\n  oldRootBusinessObject.di = diPlane;\r\n\r\n  // TODO(nikku): return changed elements?\r\n  // return [ newRoot, oldRoot ];\r\n};","'use strict';\r\n\r\nvar collectLanes = require(67).collectLanes;\r\n\r\nvar getLanesRoot = require(67).getLanesRoot;\r\n\r\nvar is = require(95).is;\r\n\r\nvar Collections = require(263);\r\n\r\nvar asTRBL = require(252).asTRBL;\r\n\r\nvar FLOW_NODE_REFS_ATTR = 'flowNodeRef',\r\n    LANES_ATTR = 'lanes';\r\n\r\n/**\r\n * A handler that updates lane refs on changed elements\r\n */\r\nfunction UpdateFlowNodeRefsHandler(elementRegistry) {\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nUpdateFlowNodeRefsHandler.$inject = [ 'elementRegistry' ];\r\n\r\nmodule.exports = UpdateFlowNodeRefsHandler;\r\n\r\n\r\nUpdateFlowNodeRefsHandler.prototype.computeUpdates = function(flowNodeShapes, laneShapes) {\r\n\r\n  var handledNodes = {};\r\n\r\n  var updates = [];\r\n\r\n  var participantCache = {};\r\n\r\n  var allFlowNodeShapes = [];\r\n\r\n  function isInLaneShape(element, laneShape) {\r\n\r\n    var laneTrbl = asTRBL(laneShape);\r\n\r\n    var elementMid = {\r\n      x: element.x + element.width / 2,\r\n      y: element.y + element.height / 2\r\n    };\r\n\r\n    return elementMid.x > laneTrbl.left &&\r\n           elementMid.x < laneTrbl.right &&\r\n           elementMid.y > laneTrbl.top &&\r\n           elementMid.y < laneTrbl.bottom;\r\n  }\r\n\r\n  function addFlowNodeShape(flowNodeShape) {\r\n    if (!handledNodes[flowNodeShape.id]) {\r\n      allFlowNodeShapes.push(flowNodeShape);\r\n      handledNodes[flowNodeShape.id] = flowNodeShape;\r\n    }\r\n  }\r\n\r\n  function getAllLaneShapes(flowNodeShape) {\r\n\r\n    var root = getLanesRoot(flowNodeShape);\r\n\r\n    if (!participantCache[root.id]) {\r\n      participantCache[root.id] = collectLanes(root);\r\n    }\r\n\r\n    return participantCache[root.id];\r\n  }\r\n\r\n  function getNewLanes(flowNodeShape) {\r\n    if (!flowNodeShape.parent) {\r\n      return [];\r\n    }\r\n\r\n    var allLaneShapes = getAllLaneShapes(flowNodeShape);\r\n\r\n    return allLaneShapes.filter(function(l) {\r\n      return isInLaneShape(flowNodeShape, l);\r\n    }).map(function(shape) {\r\n      return shape.businessObject;\r\n    });\r\n  }\r\n\r\n  laneShapes.forEach(function(laneShape) {\r\n    var root = getLanesRoot(laneShape);\r\n\r\n    if (!root || handledNodes[root.id]) {\r\n      return;\r\n    }\r\n\r\n    var children = root.children.filter(function(c) {\r\n      return is(c, 'bpmn:FlowNode');\r\n    });\r\n\r\n    children.forEach(addFlowNodeShape);\r\n\r\n    handledNodes[root.id] = root;\r\n  });\r\n\r\n  flowNodeShapes.forEach(addFlowNodeShape);\r\n\r\n\r\n  allFlowNodeShapes.forEach(function(flowNodeShape) {\r\n\r\n    var flowNode = flowNodeShape.businessObject;\r\n\r\n    var lanes = flowNode.get(LANES_ATTR),\r\n        remove = lanes.slice(),\r\n        add = getNewLanes(flowNodeShape);\r\n\r\n    updates.push({ flowNode: flowNode, remove: remove, add: add });\r\n  });\r\n\r\n  laneShapes.forEach(function(laneShape) {\r\n\r\n    var lane = laneShape.businessObject;\r\n\r\n    // lane got removed XX-)\r\n    if (!laneShape.parent) {\r\n      lane.get(FLOW_NODE_REFS_ATTR).forEach(function(flowNode) {\r\n        updates.push({ flowNode: flowNode, remove: [ lane ], add: [] });\r\n      });\r\n    }\r\n  });\r\n\r\n  return updates;\r\n};\r\n\r\nUpdateFlowNodeRefsHandler.prototype.execute = function(context) {\r\n\r\n  var updates = context.updates;\r\n\r\n  if (!updates) {\r\n    updates = context.updates = this.computeUpdates(context.flowNodeShapes, context.laneShapes);\r\n  }\r\n\r\n\r\n  updates.forEach(function(update) {\r\n\r\n    var flowNode = update.flowNode,\r\n        lanes = flowNode.get(LANES_ATTR);\r\n\r\n    // unwire old\r\n    update.remove.forEach(function(oldLane) {\r\n      Collections.remove(lanes, oldLane);\r\n      Collections.remove(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n\r\n    // wire new\r\n    update.add.forEach(function(newLane) {\r\n      Collections.add(lanes, newLane);\r\n      Collections.add(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n  });\r\n\r\n  // TODO(nikku): return changed elements\r\n  // return [ ... ];\r\n};\r\n\r\n\r\nUpdateFlowNodeRefsHandler.prototype.revert = function(context) {\r\n\r\n  var updates = context.updates;\r\n\r\n  updates.forEach(function(update) {\r\n\r\n    var flowNode = update.flowNode,\r\n        lanes = flowNode.get(LANES_ATTR);\r\n\r\n    // unwire new\r\n    update.add.forEach(function(newLane) {\r\n      Collections.remove(lanes, newLane);\r\n      Collections.remove(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n\r\n    // wire old\r\n    update.remove.forEach(function(oldLane) {\r\n      Collections.add(lanes, oldLane);\r\n      Collections.add(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n  });\r\n\r\n  // TODO(nikku): return changed elements\r\n  // return [ ... ];\r\n};","'use strict';\r\n\r\nvar reduce = require(439),\r\n    keys = require(433),\r\n    forEach = require(303),\r\n    assign = require(431);\r\n\r\nvar getBusinessObject = require(95).getBusinessObject;\r\n\r\nvar TextUtil = require(280);\r\n\r\nvar DEFAULT_FLOW = 'default',\r\n    NAME = 'name',\r\n    ID = 'id',\r\n    DI = 'di';\r\n\r\nvar NULL_DIMENSIONS = {\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\n/**\r\n * A handler that implements a BPMN 2.0 property update.\r\n *\r\n * This should be used to set simple properties on elements with\r\n * an underlying BPMN business object.\r\n *\r\n * Use respective diagram-js provided handlers if you would\r\n * like to perform automated modeling.\r\n */\r\nfunction UpdatePropertiesHandler(elementRegistry, moddle, translate, modeling) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._moddle = moddle;\r\n  this._translate = translate;\r\n  this._modeling = modeling;\r\n\r\n  this._textUtil = new TextUtil();\r\n}\r\n\r\nUpdatePropertiesHandler.$inject = [ 'elementRegistry', 'moddle', 'translate', 'modeling' ];\r\n\r\nmodule.exports = UpdatePropertiesHandler;\r\n\r\n\r\n////// api /////////////////////////////////////////////\r\n\r\n/**\r\n * Updates a BPMN element with a list of new properties\r\n *\r\n * @param {Object} context\r\n * @param {djs.model.Base} context.element the element to update\r\n * @param {Object} context.properties a list of properties to set on the element's\r\n *                                    businessObject (the BPMN model element)\r\n *\r\n * @return {Array<djs.model.Base>} the updated element\r\n */\r\nUpdatePropertiesHandler.prototype.execute = function(context) {\r\n\r\n  var element = context.element,\r\n      changed = [ element ],\r\n      translate = this._translate;\r\n\r\n  if (!element) {\r\n    throw new Error(translate('element required'));\r\n  }\r\n\r\n  var elementRegistry = this._elementRegistry,\r\n      ids = this._moddle.ids;\r\n\r\n  var businessObject = element.businessObject,\r\n      properties = unwrapBusinessObjects(context.properties),\r\n      oldProperties = context.oldProperties || getProperties(businessObject, properties);\r\n\r\n  if (isIdChange(properties, businessObject)) {\r\n    ids.unclaim(businessObject[ID]);\r\n\r\n    elementRegistry.updateId(element, properties[ID]);\r\n\r\n    ids.claim(properties[ID], businessObject);\r\n  }\r\n\r\n  // correctly indicate visual changes on default flow updates\r\n  if (DEFAULT_FLOW in properties) {\r\n\r\n    if (properties[DEFAULT_FLOW]) {\r\n      changed.push(elementRegistry.get(properties[DEFAULT_FLOW].id));\r\n    }\r\n\r\n    if (businessObject[DEFAULT_FLOW]) {\r\n      changed.push(elementRegistry.get(businessObject[DEFAULT_FLOW].id));\r\n    }\r\n  }\r\n\r\n  if (NAME in properties && element.label) {\r\n    changed.push(element.label);\r\n\r\n    // show the label\r\n    element.label.hidden = !properties[NAME];\r\n  }\r\n\r\n  if (DI in properties && businessObject.di) {\r\n    setDiProperties(businessObject.di, properties.di);\r\n  }\r\n\r\n  // update properties\r\n  setProperties(businessObject, properties);\r\n\r\n  // store old values\r\n  context.oldProperties = oldProperties;\r\n  context.changed = changed;\r\n\r\n  // indicate changed on objects affected by the update\r\n  return changed;\r\n};\r\n\r\n\r\nUpdatePropertiesHandler.prototype.postExecute = function(context) {\r\n  var element = context.element,\r\n      label = element.label;\r\n\r\n  var text = label && getBusinessObject(label).name;\r\n\r\n  if (!text) {\r\n    return;\r\n  }\r\n\r\n  // get layouted text bounds and resize external\r\n  // external label accordingly\r\n  var newLabelBounds = getLayoutedBounds(label, text, this._textUtil);\r\n\r\n  this._modeling.resizeShape(label, newLabelBounds, NULL_DIMENSIONS);\r\n};\r\n\r\n/**\r\n * Reverts the update on a BPMN elements properties.\r\n *\r\n * @param  {Object} context\r\n *\r\n * @return {djs.model.Base} the updated element\r\n */\r\nUpdatePropertiesHandler.prototype.revert = function(context) {\r\n\r\n  var element = context.element,\r\n      properties = context.properties,\r\n      oldProperties = context.oldProperties,\r\n      businessObject = element.businessObject,\r\n      elementRegistry = this._elementRegistry,\r\n      ids = this._moddle.ids;\r\n\r\n  if (DI in oldProperties && businessObject.di) {\r\n    setDiProperties(businessObject.di, oldProperties.di);\r\n  }\r\n\r\n  // update properties\r\n  setProperties(businessObject, oldProperties);\r\n\r\n  if (isIdChange(properties, businessObject)) {\r\n    ids.unclaim(properties[ID]);\r\n\r\n    elementRegistry.updateId(element, oldProperties[ID]);\r\n\r\n    ids.claim(oldProperties[ID], businessObject);\r\n  }\r\n\r\n  return context.changed;\r\n};\r\n\r\n\r\nfunction isIdChange(properties, businessObject) {\r\n  return ID in properties && properties[ID] !== businessObject[ID];\r\n}\r\n\r\n\r\nfunction getProperties(businessObject, properties) {\r\n  var propertyNames = keys(properties);\r\n\r\n  return reduce(propertyNames, function(result, key) {\r\n\r\n    // handle DI seperately\r\n    if (key !== DI) {\r\n      result[key] = businessObject.get(key);\r\n    } else {\r\n      result[key] = getDiProperties(businessObject.di, keys(properties.di));\r\n    }\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n\r\nfunction getDiProperties(di, propertyNames) {\r\n  return reduce(propertyNames, function(result, key) {\r\n    result[key] = di.get(key);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n\r\nfunction setProperties(businessObject, properties) {\r\n  forEach(properties, function(value, key) {\r\n    businessObject.set(key, value);\r\n  });\r\n}\r\n\r\n\r\nfunction setDiProperties(di, properties) {\r\n  forEach(properties, function(value, key) {\r\n    di.set(key, value);\r\n  });\r\n}\r\n\r\n\r\nvar referencePropertyNames = [ 'default' ];\r\n\r\n/**\r\n * Make sure we unwrap the actual business object\r\n * behind diagram element that may have been\r\n * passed as arguments.\r\n *\r\n * @param  {Object} properties\r\n *\r\n * @return {Object} unwrappedProps\r\n */\r\nfunction unwrapBusinessObjects(properties) {\r\n\r\n  var unwrappedProps = assign({}, properties);\r\n\r\n  referencePropertyNames.forEach(function(name) {\r\n    if (name in properties) {\r\n      unwrappedProps[name] = getBusinessObject(unwrappedProps[name]);\r\n    }\r\n  });\r\n\r\n  return unwrappedProps;\r\n}\r\n\r\n\r\n// TODO(nikku): repeating code (search for <getLayoutedBounds>)\r\n\r\nvar EXTERNAL_LABEL_STYLE = {\r\n  fontFamily: 'Arial, sans-serif',\r\n  fontSize: '11px'\r\n};\r\n\r\nfunction getLayoutedBounds(bounds, text, textUtil) {\r\n\r\n  var layoutedLabelDimensions = textUtil.getDimensions(text, {\r\n    box: {\r\n      width: 90,\r\n      height: 30,\r\n      x: bounds.width / 2 + bounds.x,\r\n      y: bounds.height / 2 + bounds.y\r\n    },\r\n    style: EXTERNAL_LABEL_STYLE\r\n  });\r\n\r\n  // resize label shape to fit label text\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2 - layoutedLabelDimensions.width / 2),\r\n    y: Math.round(bounds.y),\r\n    width: Math.ceil(layoutedLabelDimensions.width),\r\n    height: Math.ceil(layoutedLabelDimensions.height)\r\n  };\r\n}","module.exports = {\r\n  __init__: [ 'modeling', 'bpmnUpdater' ],\r\n  __depends__: [\r\n    require(53),\r\n    require(27),\r\n    require(82),\r\n    require(70),\r\n    require(80),\r\n    require(121),\r\n    require(244),\r\n    require(174),\r\n    require(135),\r\n    require(233),\r\n    require(147),\r\n    require(240)\r\n  ],\r\n  bpmnFactory: [ 'type', require(28) ],\r\n  bpmnUpdater: [ 'type', require(30) ],\r\n  elementFactory: [ 'type', require(31) ],\r\n  modeling: [ 'type', require(32) ],\r\n  layouter: [ 'type', require(29) ],\r\n  connectionDocking: [ 'type', require(251) ]\r\n};\r\n","'use strict';\r\n\r\nvar is = require(95).is;\r\n\r\nvar getParent = require(68).getParent;\r\n\r\nvar asTRBL = require(252).asTRBL,\r\n    substractTRBL = require(223).substractTRBL,\r\n    resizeTRBL = require(223).resizeTRBL;\r\n\r\nvar abs = Math.abs;\r\n\r\n\r\nfunction getTRBLResize(oldBounds, newBounds) {\r\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\r\n}\r\n\r\n\r\nvar LANE_PARENTS = [\r\n  'bpmn:Participant',\r\n  'bpmn:Process',\r\n  'bpmn:SubProcess'\r\n];\r\n\r\nvar LANE_INDENTATION = 30;\r\n\r\nmodule.exports.LANE_INDENTATION = LANE_INDENTATION;\r\n\r\n\r\n/**\r\n * Collect all lane shapes in the given paren\r\n *\r\n * @param  {djs.model.Shape} shape\r\n * @param  {Array<djs.model.Base>} [collectedShapes]\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nfunction collectLanes(shape, collectedShapes) {\r\n\r\n  collectedShapes = collectedShapes || [];\r\n\r\n  shape.children.filter(function(s) {\r\n    if (is(s, 'bpmn:Lane')) {\r\n      collectLanes(s, collectedShapes);\r\n\r\n      collectedShapes.push(s);\r\n    }\r\n  });\r\n\r\n  return collectedShapes;\r\n}\r\n\r\nmodule.exports.collectLanes = collectLanes;\r\n\r\n/**\r\n * Return the lane children of the given element.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Array<djs.model.Shape>}\r\n */\r\nfunction getChildLanes(shape) {\r\n  return shape.children.filter(function(c) {\r\n    return is(c, 'bpmn:Lane');\r\n  });\r\n}\r\n\r\nmodule.exports.getChildLanes = getChildLanes;\r\n\r\n/**\r\n * Return the root element containing the given lane shape\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {djs.model.Shape}\r\n */\r\nfunction getLanesRoot(shape) {\r\n  return getParent(shape, LANE_PARENTS) || shape;\r\n}\r\n\r\nmodule.exports.getLanesRoot = getLanesRoot;\r\n\r\n\r\n/**\r\n * Compute the required resize operations for lanes\r\n * adjacent to the given shape, assuming it will be\r\n * resized to the given new bounds.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n *\r\n * @return {Array<Object>}\r\n */\r\nfunction computeLanesResize(shape, newBounds) {\r\n\r\n  var rootElement = getLanesRoot(shape);\r\n\r\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [ rootElement ];\r\n\r\n  var allLanes = collectLanes(rootElement, initialShapes),\r\n      shapeTrbl = asTRBL(shape),\r\n      shapeNewTrbl = asTRBL(newBounds),\r\n      trblResize = getTRBLResize(shape, newBounds),\r\n      resizeNeeded = [];\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    if (other === shape) {\r\n      return;\r\n    }\r\n\r\n    var topResize = 0,\r\n        rightResize = trblResize.right,\r\n        bottomResize = 0,\r\n        leftResize = trblResize.left;\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (trblResize.top) {\r\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\r\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\r\n      }\r\n\r\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\r\n        topResize = shapeNewTrbl.top - otherTrbl.top;\r\n      }\r\n    }\r\n\r\n    if (trblResize.bottom) {\r\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\r\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\r\n      }\r\n\r\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\r\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\r\n      }\r\n    }\r\n\r\n    if (topResize || rightResize || bottomResize || leftResize) {\r\n\r\n      resizeNeeded.push({\r\n        shape: other,\r\n        newBounds: resizeTRBL(other, {\r\n          top: topResize,\r\n          right: rightResize,\r\n          bottom: bottomResize,\r\n          left: leftResize\r\n        })\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return resizeNeeded;\r\n}\r\n\r\nmodule.exports.computeLanesResize = computeLanesResize;\r\n","'use strict';\r\n\r\nvar any = require(299);\r\n\r\nvar is = require(95).is;\r\n\r\n\r\n/**\r\n * Return true if element has any of the given types.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Array<String>} types\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isAny(element, types) {\r\n  return any(types, function(t) {\r\n    return is(element, t);\r\n  });\r\n}\r\n\r\nmodule.exports.isAny = isAny;\r\n\r\n\r\n/**\r\n * Return the parent of the element with any of the given types.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {String|Array<String>} anyType\r\n *\r\n * @return {djs.model.Base}\r\n */\r\nfunction getParent(element, anyType) {\r\n\r\n  if (typeof anyType === 'string') {\r\n    anyType = [ anyType ];\r\n  }\r\n\r\n  while ((element = element.parent)) {\r\n    if (isAny(element, anyType)) {\r\n      return element;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nmodule.exports.getParent = getParent;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar OrderingProvider = require(207);\r\n\r\nvar isAny = require(68).isAny;\r\n\r\nvar findIndex = require(290);\r\n\r\nvar find = require(302);\r\n\r\n\r\n/**\r\n * a simple ordering provider that makes sure:\r\n *\r\n * (1) elements are ordered by a {level} property\r\n * (2) elements with {alwaysOnTop} are always added to the root\r\n */\r\nfunction BpmnOrderingProvider(eventBus, translate) {\r\n\r\n  OrderingProvider.call(this, eventBus);\r\n\r\n  var orders = [\r\n    { type: 'bpmn:SubProcess', order: { level: 6 } },\r\n    {\r\n      type: 'bpmn:SequenceFlow',\r\n      order: {\r\n        level: 5,\r\n        containers: [\r\n          'bpmn:Participant',\r\n          'bpmn:FlowElementsContainer'\r\n        ]\r\n      }\r\n    },\r\n    // handle DataAssociation(s) like message flows and render them always on top\r\n    { type: 'bpmn:DataAssociation', order: { level: 9, containers: [ 'bpmn:Collaboration', 'bpmn:Process' ] } },\r\n    { type: 'bpmn:MessageFlow', order: { level: 9, containers: [ 'bpmn:Collaboration' ] } },\r\n    {\r\n      type: 'bpmn:Association',\r\n      order: {\r\n        level: 6,\r\n        containers: [\r\n          'bpmn:Participant',\r\n          'bpmn:FlowElementsContainer',\r\n          'bpmn:Collaboration'\r\n        ]\r\n      }\r\n    },\r\n    { type: 'bpmn:BoundaryEvent', order: { level: 8 } },\r\n    { type: 'bpmn:Participant', order: { level: -2 } },\r\n    { type: 'bpmn:Lane', order: { level: -1 } }\r\n  ];\r\n\r\n  function computeOrder(element) {\r\n    if (element.labelTarget) {\r\n      return { level: 10 };\r\n    }\r\n\r\n    var entry = find(orders, function(o) {\r\n      return isAny(element, [ o.type ]);\r\n    });\r\n\r\n    return entry && entry.order || { level: 1 };\r\n  }\r\n\r\n  function getOrder(element) {\r\n\r\n    var order = element.order;\r\n\r\n    if (!order) {\r\n      element.order = order = computeOrder(element);\r\n    }\r\n\r\n    return order;\r\n  }\r\n\r\n  function findActualParent(element, newParent, containers) {\r\n\r\n    var actualParent = newParent;\r\n\r\n    while (actualParent) {\r\n\r\n      if (isAny(actualParent, containers)) {\r\n        break;\r\n      }\r\n\r\n      actualParent = actualParent.parent;\r\n    }\r\n\r\n    if (!actualParent) {\r\n      throw new Error(translate('no parent for {element} in {parent}', {\r\n        element: element.id,\r\n        parent: newParent.id\r\n      }));\r\n    }\r\n\r\n    return actualParent;\r\n  }\r\n\r\n  this.getOrdering = function(element, newParent) {\r\n\r\n    var elementOrder = getOrder(element);\r\n\r\n\r\n    if (elementOrder.containers) {\r\n      newParent = findActualParent(element, newParent, elementOrder.containers);\r\n    }\r\n\r\n\r\n    var currentIndex = newParent.children.indexOf(element);\r\n\r\n    var insertIndex = findIndex(newParent.children, function(child) {\r\n\r\n      // do not compare with labels, they are created\r\n      // in the wrong order (right after elements) during import and\r\n      // mess up the positioning.\r\n      if (!element.labelTarget && child.labelTarget) {\r\n        return false;\r\n      }\r\n\r\n      return elementOrder.level < getOrder(child).level;\r\n    });\r\n\r\n\r\n    // if the element is already in the child list at\r\n    // a smaller index, we need to adjust the inser index.\r\n    // this takes into account that the element is being removed\r\n    // before being re-inserted\r\n    if (insertIndex !== -1) {\r\n      if (currentIndex !== -1 && currentIndex < insertIndex) {\r\n        insertIndex -= 1;\r\n      }\r\n    }\r\n\r\n    return {\r\n      index: insertIndex,\r\n      parent: newParent\r\n    };\r\n  };\r\n}\r\n\r\nBpmnOrderingProvider.$inject = [ 'eventBus', 'translate' ];\r\n\r\ninherits(BpmnOrderingProvider, OrderingProvider);\r\n\r\nmodule.exports = BpmnOrderingProvider;\r\n","module.exports = {\r\n  __init__: [ 'bpmnOrderingProvider' ],\r\n  __depends__: [\r\n    require(248)\r\n  ],\r\n  bpmnOrderingProvider: [ 'type', require(69) ]\r\n};","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\n/**\r\n * A palette provider for BPMN 2.0 elements.\r\n */\r\nfunction PaletteProvider(palette, create, elementFactory, spaceTool, lassoTool, handTool, globalConnect, translate) {\r\n\r\n  this._palette = palette;\r\n  this._create = create;\r\n  this._elementFactory = elementFactory;\r\n  this._spaceTool = spaceTool;\r\n  this._lassoTool = lassoTool;\r\n  this._handTool = handTool;\r\n  this._globalConnect = globalConnect;\r\n  this._translate = translate;\r\n\r\n  palette.registerProvider(this);\r\n}\r\n\r\nmodule.exports = PaletteProvider;\r\n\r\nPaletteProvider.$inject = [\r\n  'palette',\r\n  'create',\r\n  'elementFactory',\r\n  'spaceTool',\r\n  'lassoTool',\r\n  'handTool',\r\n  'globalConnect',\r\n  'translate'\r\n];\r\n\r\n\r\nPaletteProvider.prototype.getPaletteEntries = function(element) {\r\n\r\n  var actions  = {},\r\n      create = this._create,\r\n      elementFactory = this._elementFactory,\r\n      spaceTool = this._spaceTool,\r\n      lassoTool = this._lassoTool,\r\n      handTool = this._handTool,\r\n      globalConnect = this._globalConnect,\r\n      translate = this._translate;\r\n\r\n  function createAction(type, group, className, title, options) {\r\n\r\n    function createListener(event) {\r\n      var shape = elementFactory.createShape(assign({ type: type }, options));\r\n\r\n      if (options) {\r\n        shape.businessObject.di.isExpanded = options.isExpanded;\r\n      }\r\n\r\n      create.start(event, shape);\r\n    }\r\n\r\n    var shortType = type.replace(/^bpmn/:/, '');\r\n\r\n    return {\r\n      group: group,\r\n      className: className,\r\n      title: title || translate('Create {type}', { type: shortType }),\r\n      action: {\r\n        dragstart: createListener,\r\n        click: createListener\r\n      }\r\n    };\r\n  }\r\n\r\n  function createParticipant(event, collapsed) {\r\n    create.start(event, elementFactory.createParticipantShape(collapsed));\r\n  }\r\n\r\n  assign(actions, {\r\n    'hand-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-hand-tool',\r\n      title: translate('Activate the hand tool'),\r\n      action: {\r\n        click: function(event) {\r\n          handTool.activateHand(event);\r\n        }\r\n      }\r\n    },\r\n    'lasso-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-lasso-tool',\r\n      title: translate('Activate the lasso tool'),\r\n      action: {\r\n        click: function(event) {\r\n          lassoTool.activateSelection(event);\r\n        }\r\n      }\r\n    },\r\n    'space-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-space-tool',\r\n      title: translate('Activate the create/remove space tool'),\r\n      action: {\r\n        click: function(event) {\r\n          spaceTool.activateSelection(event);\r\n        }\r\n      }\r\n    },\r\n    'global-connect-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-connection-multi',\r\n      title: translate('Activate the global connect tool'),\r\n      action: {\r\n        click: function(event) {\r\n          globalConnect.toggle(event);\r\n        }\r\n      }\r\n    },\r\n    'tool-separator': {\r\n      group: 'tools',\r\n      separator: true\r\n    },\r\n    'create.start-event': createAction(\r\n      'bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none'\r\n    ),\r\n    'create.intermediate-event': createAction('bpmn:IntermediateThrowEvent', 'event',\r\n      'bpmn-icon-intermediate-event-none', translate('Create IntermediateThrowEvent/BoundaryEvent')\r\n    ),\r\n    'create.end-event': createAction(\r\n      'bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none'\r\n    ),\r\n    'create.exclusive-gateway': createAction(\r\n      'bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-xor'\r\n    ),\r\n    'create.task': createAction(\r\n      'bpmn:Task', 'activity', 'bpmn-icon-task'\r\n    ),\r\n    'create.data-object': createAction(\r\n      'bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object'\r\n    ),\r\n    'create.data-store': createAction(\r\n      'bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store'\r\n    ),\r\n    'create.subprocess-expanded': createAction(\r\n      'bpmn:SubProcess', 'activity', 'bpmn-icon-subprocess-expanded', translate('Create expanded SubProcess'),\r\n      { isExpanded: true }\r\n    ),\r\n    'create.participant-expanded': {\r\n      group: 'collaboration',\r\n      className: 'bpmn-icon-participant',\r\n      title: translate('Create Pool/Participant'),\r\n      action: {\r\n        dragstart: createParticipant,\r\n        click: createParticipant\r\n      }\r\n    }\r\n  });\r\n\r\n  return actions;\r\n};\r\n","module.exports = {\r\n  __depends__: [\r\n    require(213),\r\n    require(157),\r\n    require(240),\r\n    require(176),\r\n    require(168),\r\n    require(248),\r\n    require(20)\r\n  ],\r\n  __init__: [ 'paletteProvider' ],\r\n  paletteProvider: [ 'type', require(71) ]\r\n};\r\n","'use strict';\r\n\r\nvar is = require(95).is,\r\n    isEventSubProcess = require(93).isEventSubProcess,\r\n    getBusinessObject = require(95).getBusinessObject,\r\n    isExpanded = require(93).isExpanded,\r\n    isDifferentType = require(75).isDifferentType;\r\n\r\nvar forEach = require(303),\r\n    filter = require(301),\r\n    reject = require(307);\r\n\r\nvar replaceOptions = require(79);\r\n\r\n\r\n/**\r\n * This module is an element agnostic replace menu provider for the popup menu.\r\n */\r\nfunction ReplaceMenuProvider(popupMenu, modeling, moddle, bpmnReplace, rules, translate) {\r\n\r\n  this._popupMenu = popupMenu;\r\n  this._modeling = modeling;\r\n  this._moddle = moddle;\r\n  this._bpmnReplace = bpmnReplace;\r\n  this._rules = rules;\r\n  this._translate = translate;\r\n\r\n  this.register();\r\n}\r\n\r\nReplaceMenuProvider.$inject = [ 'popupMenu', 'modeling', 'moddle', 'bpmnReplace', 'rules', 'translate' ];\r\n\r\n\r\n/**\r\n * Register replace menu provider in the popup menu\r\n */\r\nReplaceMenuProvider.prototype.register = function() {\r\n  this._popupMenu.registerProvider('bpmn-replace', this);\r\n};\r\n\r\n\r\n/**\r\n * Get all entries from replaceOptions for the given element and apply filters\r\n * on them. Get for example only elements, which are different from the current one.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu entry items\r\n */\r\nReplaceMenuProvider.prototype.getEntries = function(element) {\r\n\r\n  var businessObject = element.businessObject;\r\n\r\n  var rules = this._rules;\r\n\r\n  var entries;\r\n\r\n  if (!rules.allowed('shape.replace', { element: element })) {\r\n    return [];\r\n  }\r\n\r\n  var differentType = isDifferentType(element);\r\n\r\n  // start events outside event sub processes\r\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent)) {\r\n\r\n    entries = filter(replaceOptions.START_EVENT, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded/collapsed pools\r\n  if (is(businessObject, 'bpmn:Participant')) {\r\n\r\n    entries = filter(replaceOptions.PARTICIPANT, function(entry) {\r\n      return isExpanded(businessObject) !== entry.target.isExpanded;\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // start events inside event sub processes\r\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\r\n\r\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      var isInterrupting = target.isInterrupting !== false;\r\n\r\n      var isInterruptingEqual = getBusinessObject(element).isInterrupting === isInterrupting;\r\n\r\n      // filters elements which types and event definition are equal but have have different interrupting types\r\n      return differentType(entry) || !differentType(entry) && !isInterruptingEqual;\r\n\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // end events\r\n  if (is(businessObject, 'bpmn:EndEvent')) {\r\n\r\n    entries = filter(replaceOptions.END_EVENT, function(entry) {\r\n      var target = entry.target;\r\n\r\n      // hide cancel end events outside transactions\r\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\r\n        return false;\r\n      }\r\n\r\n      return differentType(entry);\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // boundary events\r\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\r\n\r\n    entries = filter(replaceOptions.BOUNDARY_EVENT, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      if (target.eventDefinition == 'bpmn:CancelEventDefinition' &&\r\n         !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\r\n        return false;\r\n      }\r\n      var cancelActivity = target.cancelActivity !== false;\r\n\r\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\r\n\r\n      return differentType(entry) || !differentType(entry) && !isCancelActivityEqual;\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // intermediate events\r\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') ||\r\n      is(businessObject, 'bpmn:IntermediateThrowEvent')) {\r\n\r\n    entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // gateways\r\n  if (is(businessObject, 'bpmn:Gateway')) {\r\n\r\n    entries = filter(replaceOptions.GATEWAY, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // transactions\r\n  if (is(businessObject, 'bpmn:Transaction')) {\r\n\r\n    entries = filter(replaceOptions.TRANSACTION, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded event sub processes\r\n  if (isEventSubProcess(businessObject) && isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded sub processes\r\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // collapsed ad hoc sub processes\r\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && !isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.TASK, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      var isTargetSubProcess = target.type === 'bpmn:SubProcess';\r\n\r\n      var isTargetExpanded = target.isExpanded === true;\r\n\r\n      return isDifferentType(element, target) && ( !isTargetSubProcess || isTargetExpanded );\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // sequence flows\r\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\r\n    return this._createSequenceFlowEntries(element, replaceOptions.SEQUENCE_FLOW);\r\n  }\r\n\r\n  // flow nodes\r\n  if (is(businessObject, 'bpmn:FlowNode')) {\r\n    entries = filter(replaceOptions.TASK, differentType);\r\n\r\n    // collapsed SubProcess can not be replaced with itself\r\n    if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(businessObject)) {\r\n      entries = reject(entries, function(entry) {\r\n        return entry.label === 'Sub Process (collapsed)';\r\n      });\r\n    }\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n\r\n/**\r\n * Get a list of header items for the given element. This includes buttons\r\n * for multi instance markers and for the ad hoc marker.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu entry items\r\n */\r\nReplaceMenuProvider.prototype.getHeaderEntries = function(element) {\r\n\r\n  var headerEntries = [];\r\n\r\n  if (is(element, 'bpmn:Activity') && !isEventSubProcess(element)) {\r\n    headerEntries = headerEntries.concat(this._getLoopEntries(element));\r\n  }\r\n\r\n  if (is(element, 'bpmn:SubProcess') &&\r\n      !is(element, 'bpmn:Transaction') &&\r\n      !isEventSubProcess(element)) {\r\n    headerEntries.push(this._getAdHocEntry(element));\r\n  }\r\n\r\n  return headerEntries;\r\n};\r\n\r\n\r\n/**\r\n * Creates an array of menu entry objects for a given element and filters the replaceOptions\r\n * according to a filter function.\r\n *\r\n * @param  {djs.model.Base} element\r\n * @param  {Object} replaceOptions\r\n *\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._createEntries = function(element, replaceOptions) {\r\n  var menuEntries = [];\r\n\r\n  var self = this;\r\n\r\n  forEach(replaceOptions, function(definition) {\r\n    var entry = self._createMenuEntry(definition, element);\r\n\r\n    menuEntries.push(entry);\r\n  });\r\n\r\n  return menuEntries;\r\n};\r\n\r\n/**\r\n * Creates an array of menu entry objects for a given sequence flow.\r\n *\r\n * @param  {djs.model.Base} element\r\n * @param  {Object} replaceOptions\r\n\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function(element, replaceOptions) {\r\n\r\n  var businessObject = getBusinessObject(element);\r\n\r\n  var menuEntries = [];\r\n\r\n  var modeling = this._modeling,\r\n      moddle = this._moddle;\r\n\r\n  var self = this;\r\n\r\n  forEach(replaceOptions, function(entry) {\r\n\r\n    switch (entry.actionName) {\r\n    case 'replace-with-default-flow':\r\n      if (businessObject.sourceRef.default !== businessObject &&\r\n            (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:Activity'))) {\r\n\r\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element.source, { default: businessObject });\r\n        }));\r\n      }\r\n      break;\r\n    case 'replace-with-conditional-flow':\r\n      if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\r\n\r\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          var conditionExpression = moddle.create('bpmn:FormalExpression', { body: '' });\r\n\r\n          modeling.updateProperties(element, { conditionExpression: conditionExpression });\r\n        }));\r\n      }\r\n      break;\r\n    default:\r\n        // default flows\r\n      if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\r\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element, { conditionExpression: undefined });\r\n        }));\r\n      }\r\n        // conditional flows\r\n      if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:Activity')) &&\r\n           businessObject.sourceRef.default === businessObject) {\r\n\r\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element.source, { default: undefined });\r\n        }));\r\n      }\r\n    }\r\n  });\r\n\r\n  return menuEntries;\r\n};\r\n\r\n\r\n/**\r\n * Creates and returns a single menu entry item.\r\n *\r\n * @param  {Object} definition a single replace options definition object\r\n * @param  {djs.model.Base} element\r\n * @param  {Function} [action] an action callback function which gets called when\r\n *                             the menu entry is being triggered.\r\n *\r\n * @return {Object} menu entry item\r\n */\r\nReplaceMenuProvider.prototype._createMenuEntry = function(definition, element, action) {\r\n  var translate = this._translate;\r\n  var replaceElement = this._bpmnReplace.replaceElement;\r\n\r\n  var replaceAction = function() {\r\n    return replaceElement(element, definition.target);\r\n  };\r\n\r\n  action = action || replaceAction;\r\n\r\n  var menuEntry = {\r\n    label: translate(definition.label),\r\n    className: definition.className,\r\n    id: definition.actionName,\r\n    action: action\r\n  };\r\n\r\n  return menuEntry;\r\n};\r\n\r\n/**\r\n * Get a list of menu items containing buttons for multi instance markers\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._getLoopEntries = function(element) {\r\n\r\n  var self = this;\r\n  var translate = this._translate;\r\n\r\n  function toggleLoopEntry(event, entry) {\r\n    var loopCharacteristics;\r\n\r\n    if (entry.active) {\r\n      loopCharacteristics = undefined;\r\n    } else {\r\n      loopCharacteristics = self._moddle.create(entry.options.loopCharacteristics);\r\n\r\n      if (entry.options.isSequential) {\r\n        loopCharacteristics.isSequential = entry.options.isSequential;\r\n      }\r\n    }\r\n    self._modeling.updateProperties(element, { loopCharacteristics: loopCharacteristics });\r\n  }\r\n\r\n  var businessObject = getBusinessObject(element),\r\n      loopCharacteristics = businessObject.loopCharacteristics;\r\n\r\n  var isSequential,\r\n      isLoop,\r\n      isParallel;\r\n\r\n  if (loopCharacteristics) {\r\n    isSequential = loopCharacteristics.isSequential;\r\n    isLoop = loopCharacteristics.isSequential === undefined;\r\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\r\n  }\r\n\r\n\r\n  var loopEntries = [\r\n    {\r\n      id: 'toggle-parallel-mi',\r\n      className: 'bpmn-icon-parallel-mi-marker',\r\n      title: translate('Parallel Multi Instance'),\r\n      active: isParallel,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\r\n        isSequential: false\r\n      }\r\n    },\r\n    {\r\n      id: 'toggle-sequential-mi',\r\n      className: 'bpmn-icon-sequential-mi-marker',\r\n      title: translate('Sequential Multi Instance'),\r\n      active: isSequential,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\r\n        isSequential: true\r\n      }\r\n    },\r\n    {\r\n      id: 'toggle-loop',\r\n      className: 'bpmn-icon-loop-marker',\r\n      title: translate('Loop'),\r\n      active: isLoop,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\r\n      }\r\n    }\r\n  ];\r\n  return loopEntries;\r\n};\r\n\r\n\r\n/**\r\n * Get the menu items containing a button for the ad hoc marker\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} a menu item\r\n */\r\nReplaceMenuProvider.prototype._getAdHocEntry = function(element) {\r\n  var translate = this._translate;\r\n  var businessObject = getBusinessObject(element);\r\n\r\n  var isAdHoc = is(businessObject, 'bpmn:AdHocSubProcess');\r\n\r\n  var replaceElement = this._bpmnReplace.replaceElement;\r\n\r\n  var adHocEntry = {\r\n    id: 'toggle-adhoc',\r\n    className: 'bpmn-icon-ad-hoc-marker',\r\n    title: translate('Ad-hoc'),\r\n    active: isAdHoc,\r\n    action: function(event, entry) {\r\n      if (isAdHoc) {\r\n        return replaceElement(element, { type: 'bpmn:SubProcess' });\r\n      } else {\r\n        return replaceElement(element, { type: 'bpmn:AdHocSubProcess' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return adHocEntry;\r\n};\r\n\r\nmodule.exports = ReplaceMenuProvider;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(215),\r\n    require(80)\r\n  ],\r\n  __init__: [ 'replaceMenuProvider' ],\r\n  replaceMenuProvider: [ 'type', require(73) ]\r\n};","'use strict';\r\n\r\nvar getBusinessObject = require(95).getBusinessObject;\r\nvar isExpanded = require(93).isExpanded;\r\n\r\n/**\r\n * Returns true, if an element is from a different type\r\n * than a target definition. Takes into account the type,\r\n * event definition type and triggeredByEvent property.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isDifferentType(element) {\r\n\r\n  return function(entry) {\r\n    var target = entry.target;\r\n\r\n    var businessObject = getBusinessObject(element),\r\n        eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];\r\n\r\n    var isTypeEqual = businessObject.$type === target.type;\r\n\r\n    var isEventDefinitionEqual = (\r\n      (eventDefinition && eventDefinition.$type) === target.eventDefinitionType\r\n    );\r\n\r\n    var isTriggeredByEventEqual = (\r\n      businessObject.triggeredByEvent === target.triggeredByEvent\r\n    );\r\n\r\n    var isExpandedEqual = (\r\n        target.isExpanded === undefined ||\r\n        target.isExpanded === isExpanded(businessObject)\r\n    );\r\n\r\n    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;\r\n  };\r\n}\r\n\r\nmodule.exports.isDifferentType = isDifferentType;","'use strict';\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\nvar inherits = require(289);\r\n\r\nvar assign = require(431),\r\n    forEach = require(303);\r\n\r\nvar domQuery = require(452);\r\n\r\nvar svgAttr = require(473);\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\nfunction BpmnReplacePreview(eventBus, elementRegistry, elementFactory, canvas, previewSupport) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Replace the visuals of all elements in the context which can be replaced\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function replaceVisual(context) {\r\n\r\n    var replacements = context.canExecute.replacements;\r\n\r\n    forEach(replacements, function(replacement) {\r\n\r\n      var id = replacement.oldElementId;\r\n\r\n      var newElement = {\r\n        type: replacement.newElementType\r\n      };\r\n\r\n      // if the visual of the element is already replaced\r\n      if (context.visualReplacements[id]) {\r\n        return;\r\n      }\r\n\r\n      var element = elementRegistry.get(id);\r\n\r\n      assign(newElement, { x: element.x, y: element.y });\r\n\r\n      // create a temporary shape\r\n      var tempShape = elementFactory.createShape(newElement);\r\n\r\n      canvas.addShape(tempShape, element.parent);\r\n\r\n      // select the original SVG element related to the element and hide it\r\n      var gfx = domQuery('[data-element-id=' + element.id + ']', context.dragGroup);\r\n\r\n      if (gfx) {\r\n        svgAttr(gfx, { display: 'none' });\r\n      }\r\n\r\n      // clone the gfx of the temporary shape and add it to the drag group\r\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\r\n\r\n      context.visualReplacements[id] = dragger;\r\n\r\n      canvas.removeShape(tempShape);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restore the original visuals of the previously replaced elements\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function restoreVisual(context) {\r\n\r\n    var visualReplacements = context.visualReplacements;\r\n\r\n    forEach(visualReplacements, function(dragger, id) {\r\n\r\n      var originalGfx = domQuery('[data-element-id=' + id + ']', context.dragGroup);\r\n\r\n      if (originalGfx) {\r\n        svgAttr(originalGfx, { display: 'inline' });\r\n      }\r\n\r\n      dragger.remove();\r\n\r\n      if (visualReplacements[id]) {\r\n        delete visualReplacements[id];\r\n      }\r\n    });\r\n  }\r\n\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        canExecute = context.canExecute;\r\n\r\n    if (!context.visualReplacements) {\r\n      context.visualReplacements = {};\r\n    }\r\n\r\n    if (canExecute.replacements) {\r\n      replaceVisual(context);\r\n    } else {\r\n      restoreVisual(context);\r\n    }\r\n  });\r\n}\r\n\r\nBpmnReplacePreview.$inject = [ 'eventBus', 'elementRegistry', 'elementFactory', 'canvas', 'previewSupport' ];\r\n\r\ninherits(BpmnReplacePreview, CommandInterceptor);\r\n\r\nmodule.exports = BpmnReplacePreview;\r\n","module.exports = {\r\n  __depends__: [ require(217) ],\r\n  __init__: [ 'bpmnReplacePreview' ],\r\n  bpmnReplacePreview: [ 'type', require(76) ]\r\n};\r\n","'use strict';\r\n\r\nvar pick = require(438),\r\n    assign = require(431),\r\n    intersection = require(292),\r\n    filter = require(301),\r\n    has = require(432);\r\n\r\nvar is = require(95).is,\r\n    isExpanded = require(93).isExpanded,\r\n    isEventSubProcess = require(93).isEventSubProcess,\r\n    ModelCloneUtils = require(98),\r\n    getProperties = ModelCloneUtils.getProperties;\r\n\r\nvar IGNORED_PROPERTIES = ModelCloneUtils.IGNORED_PROPERTIES;\r\n\r\nvar ModelCloneHelper = require(97);\r\n\r\nvar CUSTOM_PROPERTIES = [\r\n  'cancelActivity',\r\n  'instantiate',\r\n  'eventGatewayType',\r\n  'triggeredByEvent',\r\n  'isInterrupting'\r\n];\r\n\r\n\r\nfunction toggeling(element, target) {\r\n\r\n  var oldCollapsed = has(element, 'collapsed') ?\r\n                     element.collapsed : !isExpanded(element);\r\n\r\n  var targetCollapsed;\r\n\r\n  if (has(target, 'collapsed') || has(target, 'isExpanded')) {\r\n    // property is explicitly set so use it\r\n    targetCollapsed = has(target, 'collapsed') ?\r\n                      target.collapsed : !target.isExpanded;\r\n  } else {\r\n    // keep old state\r\n    targetCollapsed = oldCollapsed;\r\n  }\r\n\r\n  if (oldCollapsed !== targetCollapsed) {\r\n    element.collapsed = oldCollapsed;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n * This module takes care of replacing BPMN elements\r\n */\r\nfunction BpmnReplace(bpmnFactory, replace, selection, modeling, eventBus) {\r\n\r\n  var helper = new ModelCloneHelper(eventBus);\r\n\r\n  /**\r\n   * Prepares a new business object for the replacement element\r\n   * and triggers the replace operation.\r\n   *\r\n   * @param  {djs.model.Base} element\r\n   * @param  {Object} target\r\n   * @param  {Object} [hints]\r\n   *\r\n   * @return {djs.model.Base} the newly created element\r\n   */\r\n  function replaceElement(element, target, hints) {\r\n\r\n    hints = hints || {};\r\n\r\n    var type = target.type,\r\n        oldBusinessObject = element.businessObject;\r\n\r\n    if (is(oldBusinessObject, 'bpmn:SubProcess')) {\r\n      if (type === 'bpmn:SubProcess') {\r\n        if (toggeling(element, target)) {\r\n          // expanding or collapsing process\r\n          modeling.toggleCollapse(element);\r\n\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n\r\n    var newBusinessObject = bpmnFactory.create(type);\r\n\r\n    var newElement = {\r\n      type: type,\r\n      businessObject: newBusinessObject\r\n    };\r\n\r\n    var elementProps = getProperties(oldBusinessObject.$descriptor),\r\n        newElementProps = getProperties(newBusinessObject.$descriptor, true),\r\n        properties = intersection(elementProps, newElementProps);\r\n\r\n    // initialize special properties defined in target definition\r\n    assign(newBusinessObject, pick(target, CUSTOM_PROPERTIES));\r\n\r\n    properties = filter(properties, function(property) {\r\n      var propName = property.replace(/bpmn:/, '');\r\n\r\n      // so the applied properties from 'target' don't get lost\r\n      if (newBusinessObject[property] !== undefined) {\r\n        return false;\r\n      }\r\n\r\n      // retain loop characteristics if the target element is not an event sub process\r\n      if (propName === 'loopCharacteristics') {\r\n        return !isEventSubProcess(newBusinessObject);\r\n      }\r\n\r\n      if ((propName === 'processRef' && target.isExpanded === false) ||\r\n           propName === 'triggeredByEvent' ||\r\n           propName === 'eventDefinitions') {\r\n        return false;\r\n      }\r\n\r\n      return IGNORED_PROPERTIES.indexOf(propName) === -1;\r\n    });\r\n\r\n    newBusinessObject = helper.clone(oldBusinessObject, newBusinessObject, properties);\r\n\r\n    // initialize custom BPMN extensions\r\n    if (target.eventDefinitionType) {\r\n      newElement.eventDefinitionType = target.eventDefinitionType;\r\n    }\r\n\r\n    if (is(oldBusinessObject, 'bpmn:Activity')) {\r\n\r\n      if (is(oldBusinessObject, 'bpmn:SubProcess')) {\r\n        // no toggeling, so keep old state\r\n        newElement.isExpanded = isExpanded(oldBusinessObject);\r\n      }\r\n      // else if property is explicitly set, use it\r\n      else if (has(target, 'isExpanded')) {\r\n        newElement.isExpanded = target.isExpanded;\r\n      }\r\n\r\n      // TODO: need also to respect min/max Size\r\n      // copy size, from an expanded subprocess to an expanded alternative subprocess\r\n      // except bpmn:Task, because Task is always expanded\r\n      if ((isExpanded(oldBusinessObject) && !is(oldBusinessObject, 'bpmn:Task')) && newElement.isExpanded) {\r\n        newElement.width = element.width;\r\n        newElement.height = element.height;\r\n      }\r\n    }\r\n\r\n    // transform collapsed/expanded pools\r\n    if (is(oldBusinessObject, 'bpmn:Participant')) {\r\n\r\n      // create expanded pool\r\n      if (target.isExpanded === true) {\r\n        newBusinessObject.processRef = bpmnFactory.create('bpmn:Process');\r\n      } else {\r\n        // remove children when transforming to collapsed pool\r\n        hints.moveChildren = false;\r\n      }\r\n\r\n        // apply same size\r\n      newElement.width = element.width;\r\n      newElement.height = element.height;\r\n    }\r\n\r\n    newBusinessObject.name = oldBusinessObject.name;\r\n\r\n    // retain default flow's reference between inclusive <-> exclusive gateways and activities\r\n    if ((is(oldBusinessObject, 'bpmn:ExclusiveGateway') || is(oldBusinessObject, 'bpmn:InclusiveGateway') ||\r\n         is(oldBusinessObject, 'bpmn:Activity')) &&\r\n        (is(newBusinessObject, 'bpmn:ExclusiveGateway') || is(newBusinessObject, 'bpmn:InclusiveGateway') ||\r\n         is(newBusinessObject, 'bpmn:Activity')))\r\n    {\r\n      newBusinessObject.default = oldBusinessObject.default;\r\n    }\r\n\r\n    if ('fill' in oldBusinessObject.di || 'stroke' in oldBusinessObject.di) {\r\n      assign(newElement, { colors: pick(oldBusinessObject.di, [ 'fill', 'stroke' ]) });\r\n    }\r\n\r\n    newElement = replace.replaceElement(element, newElement, hints);\r\n\r\n    if (hints.select !== false) {\r\n      selection.select(newElement);\r\n    }\r\n\r\n    return newElement;\r\n  }\r\n\r\n  this.replaceElement = replaceElement;\r\n}\r\n\r\nBpmnReplace.$inject = [ 'bpmnFactory', 'replace', 'selection', 'modeling', 'eventBus' ];\r\n\r\nmodule.exports = BpmnReplace;\r\n","'use strict';\r\n\r\nmodule.exports.START_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throwing',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Start Event',\r\n    actionName: 'replace-with-message-start',\r\n    className: 'bpmn-icon-start-event-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event',\r\n    actionName: 'replace-with-timer-start',\r\n    className: 'bpmn-icon-start-event-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event',\r\n    actionName: 'replace-with-conditional-start',\r\n    className: 'bpmn-icon-start-event-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event',\r\n    actionName: 'replace-with-signal-start',\r\n    className: 'bpmn-icon-start-event-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.INTERMEDIATE_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Intermediate Catch Event',\r\n    actionName: 'replace-with-message-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-message',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Intermediate Throw Event',\r\n    actionName: 'replace-with-message-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-message',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Intermediate Catch Event',\r\n    actionName: 'replace-with-timer-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-timer',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Intermediate Throw Event',\r\n    actionName: 'replace-with-escalation-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-escalation',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Intermediate Catch Event',\r\n    actionName: 'replace-with-conditional-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-condition',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Link Intermediate Catch Event',\r\n    actionName: 'replace-with-link-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-link',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:LinkEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Link Intermediate Throw Event',\r\n    actionName: 'replace-with-link-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-link',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:LinkEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Intermediate Throw Event',\r\n    actionName: 'replace-with-compensation-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-compensation',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Intermediate Catch Event',\r\n    actionName: 'replace-with-signal-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-signal',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Intermediate Throw Event',\r\n    actionName: 'replace-with-signal-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-signal',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.END_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message End Event',\r\n    actionName: 'replace-with-message-end',\r\n    className: 'bpmn-icon-end-event-message',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation End Event',\r\n    actionName: 'replace-with-escalation-end',\r\n    className: 'bpmn-icon-end-event-escalation',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error End Event',\r\n    actionName: 'replace-with-error-end',\r\n    className: 'bpmn-icon-end-event-error',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Cancel End Event',\r\n    actionName: 'replace-with-cancel-end',\r\n    className: 'bpmn-icon-end-event-cancel',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation End Event',\r\n    actionName: 'replace-with-compensation-end',\r\n    className: 'bpmn-icon-end-event-compensation',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal End Event',\r\n    actionName: 'replace-with-signal-end',\r\n    className: 'bpmn-icon-end-event-signal',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Terminate End Event',\r\n    actionName: 'replace-with-terminate-end',\r\n    className: 'bpmn-icon-end-event-terminate',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:TerminateEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.GATEWAY = [\r\n  {\r\n    label: 'Exclusive Gateway',\r\n    actionName: 'replace-with-exclusive-gateway',\r\n    className: 'bpmn-icon-gateway-xor',\r\n    target: {\r\n      type: 'bpmn:ExclusiveGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Parallel Gateway',\r\n    actionName: 'replace-with-parallel-gateway',\r\n    className: 'bpmn-icon-gateway-parallel',\r\n    target: {\r\n      type: 'bpmn:ParallelGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Inclusive Gateway',\r\n    actionName: 'replace-with-inclusive-gateway',\r\n    className: 'bpmn-icon-gateway-or',\r\n    target: {\r\n      type: 'bpmn:InclusiveGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Complex Gateway',\r\n    actionName: 'replace-with-complex-gateway',\r\n    className: 'bpmn-icon-gateway-complex',\r\n    target: {\r\n      type: 'bpmn:ComplexGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Event based Gateway',\r\n    actionName: 'replace-with-event-based-gateway',\r\n    className: 'bpmn-icon-gateway-eventbased',\r\n    target: {\r\n      type: 'bpmn:EventBasedGateway',\r\n      instantiate: false,\r\n      eventGatewayType: 'Exclusive'\r\n    }\r\n  }\r\n  // Gateways deactivated until https://github.com/bpmn-io/bpmn-js/issues/194\r\n  // {\r\n  //   label: 'Event based instantiating Gateway',\r\n  //   actionName: 'replace-with-exclusive-event-based-gateway',\r\n  //   className: 'bpmn-icon-exclusive-event-based',\r\n  //   target: {\r\n  //     type: 'bpmn:EventBasedGateway'\r\n  //   },\r\n  //   options: {\r\n  //     businessObject: { instantiate: true, eventGatewayType: 'Exclusive' }\r\n  //   }\r\n  // },\r\n  // {\r\n  //   label: 'Parallel Event based instantiating Gateway',\r\n  //   actionName: 'replace-with-parallel-event-based-instantiate-gateway',\r\n  //   className: 'bpmn-icon-parallel-event-based-instantiate-gateway',\r\n  //   target: {\r\n  //     type: 'bpmn:EventBasedGateway'\r\n  //   },\r\n  //   options: {\r\n  //     businessObject: { instantiate: true, eventGatewayType: 'Parallel' }\r\n  //   }\r\n  // }\r\n];\r\n\r\nmodule.exports.SUBPROCESS_EXPANDED = [\r\n  {\r\n    label: 'Transaction',\r\n    actionName: 'replace-with-transaction',\r\n    className: 'bpmn-icon-transaction',\r\n    target: {\r\n      type: 'bpmn:Transaction',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Event Sub Process',\r\n    actionName: 'replace-with-event-subprocess',\r\n    className: 'bpmn-icon-event-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      triggeredByEvent: true,\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (collapsed)',\r\n    actionName: 'replace-with-collapsed-subprocess',\r\n    className: 'bpmn-icon-subprocess-collapsed',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: false\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.TRANSACTION = [\r\n  {\r\n    label: 'Sub Process',\r\n    actionName: 'replace-with-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Event Sub Process',\r\n    actionName: 'replace-with-event-subprocess',\r\n    className: 'bpmn-icon-event-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      triggeredByEvent: true,\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.EVENT_SUB_PROCESS = [\r\n  {\r\n    label: 'Sub Process',\r\n    actionName: 'replace-with-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Transaction',\r\n    actionName: 'replace-with-transaction',\r\n    className: 'bpmn-icon-transaction',\r\n    target: {\r\n      type: 'bpmn:Transaction',\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.TASK = [\r\n  {\r\n    label: 'Task',\r\n    actionName: 'replace-with-task',\r\n    className: 'bpmn-icon-task',\r\n    target: {\r\n      type: 'bpmn:Task'\r\n    }\r\n  },\r\n  {\r\n    label: 'Send Task',\r\n    actionName: 'replace-with-send-task',\r\n    className: 'bpmn-icon-send',\r\n    target: {\r\n      type: 'bpmn:SendTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Receive Task',\r\n    actionName: 'replace-with-receive-task',\r\n    className: 'bpmn-icon-receive',\r\n    target: {\r\n      type: 'bpmn:ReceiveTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'User Task',\r\n    actionName: 'replace-with-user-task',\r\n    className: 'bpmn-icon-user',\r\n    target: {\r\n      type: 'bpmn:UserTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Manual Task',\r\n    actionName: 'replace-with-manual-task',\r\n    className: 'bpmn-icon-manual',\r\n    target: {\r\n      type: 'bpmn:ManualTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Business Rule Task',\r\n    actionName: 'replace-with-rule-task',\r\n    className: 'bpmn-icon-business-rule',\r\n    target: {\r\n      type: 'bpmn:BusinessRuleTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Service Task',\r\n    actionName: 'replace-with-service-task',\r\n    className: 'bpmn-icon-service',\r\n    target: {\r\n      type: 'bpmn:ServiceTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Script Task',\r\n    actionName: 'replace-with-script-task',\r\n    className: 'bpmn-icon-script',\r\n    target: {\r\n      type: 'bpmn:ScriptTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Call Activity',\r\n    actionName: 'replace-with-call-activity',\r\n    className: 'bpmn-icon-call-activity',\r\n    target: {\r\n      type: 'bpmn:CallActivity'\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (collapsed)',\r\n    actionName: 'replace-with-collapsed-subprocess',\r\n    className: 'bpmn-icon-subprocess-collapsed',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (expanded)',\r\n    actionName: 'replace-with-expanded-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.BOUNDARY_EVENT = [\r\n  {\r\n    label: 'Message Boundary Event',\r\n    actionName: 'replace-with-message-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-message',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Boundary Event',\r\n    actionName: 'replace-with-timer-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-timer',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Boundary Event',\r\n    actionName: 'replace-with-escalation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-escalation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Boundary Event',\r\n    actionName: 'replace-with-conditional-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-condition',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error Boundary Event',\r\n    actionName: 'replace-with-error-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-error',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Cancel Boundary Event',\r\n    actionName: 'replace-with-cancel-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-cancel',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Boundary Event',\r\n    actionName: 'replace-with-signal-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-signal',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Boundary Event',\r\n    actionName: 'replace-with-compensation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-compensation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-message-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-message',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-timer-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-timer',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-escalation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-escalation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-conditional-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-condition',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-signal-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-signal',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.EVENT_SUB_PROCESS_START_EVENT = [\r\n  {\r\n    label: 'Message Start Event',\r\n    actionName: 'replace-with-message-start',\r\n    className: 'bpmn-icon-start-event-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event',\r\n    actionName: 'replace-with-timer-start',\r\n    className: 'bpmn-icon-start-event-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event',\r\n    actionName: 'replace-with-conditional-start',\r\n    className: 'bpmn-icon-start-event-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event',\r\n    actionName: 'replace-with-signal-start',\r\n    className: 'bpmn-icon-start-event-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error Start Event',\r\n    actionName: 'replace-with-error-start',\r\n    className: 'bpmn-icon-start-event-error',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Start Event',\r\n    actionName: 'replace-with-escalation-start',\r\n    className: 'bpmn-icon-start-event-escalation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Start Event',\r\n    actionName: 'replace-with-compensation-start',\r\n    className: 'bpmn-icon-start-event-compensation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-message-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-timer-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-conditional-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-signal-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-escalation-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-escalation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  }\r\n];\r\n\r\nmodule.exports.SEQUENCE_FLOW = [\r\n  {\r\n    label: 'Sequence Flow',\r\n    actionName: 'replace-with-sequence-flow',\r\n    className: 'bpmn-icon-connection'\r\n  },\r\n  {\r\n    label: 'Default Flow',\r\n    actionName: 'replace-with-default-flow',\r\n    className: 'bpmn-icon-default-flow'\r\n  },\r\n  {\r\n    label: 'Conditional Flow',\r\n    actionName: 'replace-with-conditional-flow',\r\n    className: 'bpmn-icon-conditional-flow'\r\n  }\r\n];\r\n\r\nmodule.exports.PARTICIPANT = [\r\n  {\r\n    label: 'Expanded Pool',\r\n    actionName: 'replace-with-expanded-pool',\r\n    className: 'bpmn-icon-participant',\r\n    target: {\r\n      type: 'bpmn:Participant',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Collapsed Pool',\r\n    actionName: 'replace-with-collapsed-pool',\r\n    // TODO(@janstuemmel): maybe design new icon\r\n    className: 'bpmn-icon-lane',\r\n    target: {\r\n      type: 'bpmn:Participant',\r\n      isExpanded: false\r\n    }\r\n  }\r\n];\r\n","module.exports = {\r\n  __depends__: [\r\n    require(219),\r\n    require(233)\r\n  ],\r\n  bpmnReplace: [ 'type', require(78) ]\r\n};\r\n","'use strict';\r\n\r\nvar find = require(302),\r\n    any = require(299),\r\n    every = require(300),\r\n    filter = require(301),\r\n    forEach = require(303),\r\n    inherits = require(289);\r\n\r\nvar is = require(95).is,\r\n    isAny = require(68).isAny,\r\n    getBusinessObject = require(95).getBusinessObject,\r\n    isExpanded = require(93).isExpanded,\r\n    isEventSubProcess = require(93).isEventSubProcess,\r\n    isInterrupting = require(93).isInterrupting,\r\n    hasErrorEventDefinition = require(93).hasErrorEventDefinition,\r\n    hasEscalationEventDefinition = require(93).hasEscalationEventDefinition,\r\n    hasCompensateEventDefinition = require(93).hasCompensateEventDefinition;\r\n\r\n\r\nvar RuleProvider = require(225);\r\n\r\nvar isBoundaryAttachment = require(86).getBoundaryAttachment;\r\n\r\n/**\r\n * BPMN specific modeling rule\r\n */\r\nfunction BpmnRules(eventBus) {\r\n  RuleProvider.call(this, eventBus);\r\n}\r\n\r\ninherits(BpmnRules, RuleProvider);\r\n\r\nBpmnRules.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = BpmnRules;\r\n\r\nBpmnRules.prototype.init = function() {\r\n\r\n  this.addRule('connection.create', function(context) {\r\n    var source = context.source,\r\n        target = context.target;\r\n\r\n    return canConnect(source, target);\r\n  });\r\n\r\n  this.addRule('connection.reconnectStart', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = context.hover || context.source,\r\n        target = connection.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.reconnectEnd', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = connection.source,\r\n        target = context.hover || context.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.updateWaypoints', function(context) {\r\n    // OK! but visually ignore\r\n    return null;\r\n  });\r\n\r\n  this.addRule('shape.resize', function(context) {\r\n\r\n    var shape = context.shape,\r\n        newBounds = context.newBounds;\r\n\r\n    return canResize(shape, newBounds);\r\n  });\r\n\r\n  this.addRule('elements.move', function(context) {\r\n\r\n    var target = context.target,\r\n        shapes = context.shapes,\r\n        position = context.position;\r\n\r\n    return canAttach(shapes, target, null, position) ||\r\n           canReplace(shapes, target, position) ||\r\n           canMove(shapes, target, position) ||\r\n           canInsert(shapes, target, position);\r\n  });\r\n\r\n  this.addRule([ 'shape.create', 'shape.append' ], function(context) {\r\n    var target = context.target,\r\n        shape = context.shape,\r\n        source = context.source,\r\n        position = context.position;\r\n\r\n    return canAttach([ shape ], target, source, position) || canCreate(shape, target, source, position);\r\n  });\r\n\r\n  this.addRule('element.copy', function(context) {\r\n    var collection = context.collection,\r\n        element = context.element;\r\n\r\n    return canCopy(collection, element);\r\n  });\r\n\r\n  this.addRule('element.paste', function(context) {\r\n    var parent = context.parent,\r\n        element = context.element,\r\n        position = context.position,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    if (source || target) {\r\n      return canConnect(source, target);\r\n    }\r\n\r\n    return canAttach([ element ], parent, null, position) || canCreate(element, parent, null, position);\r\n  });\r\n\r\n  this.addRule('elements.paste', function(context) {\r\n    var tree = context.tree,\r\n        target = context.target;\r\n\r\n    return canPaste(tree, target);\r\n  });\r\n\r\n  this.addRule([ 'elements.delete' ], function(context) {\r\n\r\n    // do not allow deletion of labels\r\n    return filter(context.elements, function(e) {\r\n      return !isLabel(e);\r\n    });\r\n  });\r\n};\r\n\r\nBpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;\r\n\r\nBpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;\r\n\r\nBpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;\r\n\r\nBpmnRules.prototype.canConnectAssociation = canConnectAssociation;\r\n\r\nBpmnRules.prototype.canMove = canMove;\r\n\r\nBpmnRules.prototype.canAttach = canAttach;\r\n\r\nBpmnRules.prototype.canReplace = canReplace;\r\n\r\nBpmnRules.prototype.canDrop = canDrop;\r\n\r\nBpmnRules.prototype.canInsert = canInsert;\r\n\r\nBpmnRules.prototype.canCreate = canCreate;\r\n\r\nBpmnRules.prototype.canConnect = canConnect;\r\n\r\nBpmnRules.prototype.canResize = canResize;\r\n\r\nBpmnRules.prototype.canCopy = canCopy;\r\n\r\n/**\r\n * Utility functions for rule checking\r\n */\r\n\r\nfunction nonExistantOrLabel(element) {\r\n  return !element || isLabel(element);\r\n}\r\n\r\nfunction isSame(a, b) {\r\n  return a === b;\r\n}\r\n\r\nfunction getOrganizationalParent(element) {\r\n\r\n  var bo = getBusinessObject(element);\r\n\r\n  while (bo && !is(bo, 'bpmn:Process')) {\r\n    if (is(bo, 'bpmn:Participant')) {\r\n      return bo.processRef || bo;\r\n    }\r\n\r\n    bo = bo.$parent;\r\n  }\r\n\r\n  return bo;\r\n}\r\n\r\nfunction isTextAnnotation(element) {\r\n  return is(element, 'bpmn:TextAnnotation');\r\n}\r\n\r\nfunction isCompensationBoundary(element) {\r\n  return is(element, 'bpmn:BoundaryEvent') &&\r\n         hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\r\n}\r\n\r\nfunction isForCompensation(e) {\r\n  return getBusinessObject(e).isForCompensation;\r\n}\r\n\r\nfunction isSameOrganization(a, b) {\r\n  var parentA = getOrganizationalParent(a),\r\n      parentB = getOrganizationalParent(b);\r\n\r\n  return parentA === parentB;\r\n}\r\n\r\nfunction isMessageFlowSource(element) {\r\n  return is(element, 'bpmn:InteractionNode') &&\r\n        !isForCompensation(element) && (\r\n            !is(element, 'bpmn:Event') || (\r\n              is(element, 'bpmn:ThrowEvent') &&\r\n              hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\r\n            )\r\n  );\r\n}\r\n\r\nfunction isMessageFlowTarget(element) {\r\n  return is(element, 'bpmn:InteractionNode') &&\r\n        !isForCompensation(element) && (\r\n            !is(element, 'bpmn:Event') || (\r\n              is(element, 'bpmn:CatchEvent') &&\r\n              hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\r\n            )\r\n  );\r\n}\r\n\r\nfunction getScopeParent(element) {\r\n\r\n  var bo = getBusinessObject(element);\r\n\r\n  if (is(bo, 'bpmn:Participant')) {\r\n    return null;\r\n  }\r\n\r\n  while (bo) {\r\n    bo = bo.$parent;\r\n\r\n    if (is(bo, 'bpmn:FlowElementsContainer')) {\r\n      return bo;\r\n    }\r\n  }\r\n\r\n  return bo;\r\n}\r\n\r\nfunction isSameScope(a, b) {\r\n  var scopeParentA = getScopeParent(a),\r\n      scopeParentB = getScopeParent(b);\r\n\r\n  return scopeParentA && (scopeParentA === scopeParentB);\r\n}\r\n\r\nfunction hasEventDefinition(element, eventDefinition) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return !!find(bo.eventDefinitions || [], function(definition) {\r\n    return is(definition, eventDefinition);\r\n  });\r\n}\r\n\r\nfunction hasEventDefinitionOrNone(element, eventDefinition) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return (bo.eventDefinitions || []).every(function(definition) {\r\n    return is(definition, eventDefinition);\r\n  });\r\n}\r\n\r\nfunction isSequenceFlowSource(element) {\r\n  return is(element, 'bpmn:FlowNode') &&\r\n        !is(element, 'bpmn:EndEvent') &&\r\n        !isEventSubProcess(element) &&\r\n        !(is(element, 'bpmn:IntermediateThrowEvent') &&\r\n          hasEventDefinition(element, 'bpmn:LinkEventDefinition')\r\n        ) &&\r\n        !isCompensationBoundary(element) &&\r\n        !isForCompensation(element);\r\n}\r\n\r\nfunction isSequenceFlowTarget(element) {\r\n  return is(element, 'bpmn:FlowNode') &&\r\n        !is(element, 'bpmn:StartEvent') &&\r\n        !is(element, 'bpmn:BoundaryEvent') &&\r\n        !isEventSubProcess(element) &&\r\n        !(is(element, 'bpmn:IntermediateCatchEvent') &&\r\n          hasEventDefinition(element, 'bpmn:LinkEventDefinition')\r\n        ) &&\r\n        !isForCompensation(element);\r\n\r\n}\r\n\r\nfunction isEventBasedTarget(element) {\r\n  return is(element, 'bpmn:ReceiveTask') || (\r\n         is(element, 'bpmn:IntermediateCatchEvent') && (\r\n           hasEventDefinition(element, 'bpmn:MessageEventDefinition') ||\r\n           hasEventDefinition(element, 'bpmn:TimerEventDefinition') ||\r\n           hasEventDefinition(element, 'bpmn:ConditionalEventDefinition') ||\r\n           hasEventDefinition(element, 'bpmn:SignalEventDefinition')\r\n         )\r\n  );\r\n}\r\n\r\nfunction isLabel(element) {\r\n  return element.labelTarget;\r\n}\r\n\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n\r\nfunction getParents(element) {\r\n\r\n  var parents = [];\r\n\r\n  while (element) {\r\n    element = element.parent;\r\n\r\n    if (element) {\r\n      parents.push(element);\r\n    }\r\n  }\r\n\r\n  return parents;\r\n}\r\n\r\nfunction isParent(possibleParent, element) {\r\n  var allParents = getParents(element);\r\n  return allParents.indexOf(possibleParent) !== -1;\r\n}\r\n\r\nfunction canConnect(source, target, connection) {\r\n\r\n  if (nonExistantOrLabel(source) || nonExistantOrLabel(target)) {\r\n    return null;\r\n  }\r\n\r\n  // See https://github.com/bpmn-io/bpmn-js/issues/178\r\n  // as a workround we disallow connections with same\r\n  // target and source element.\r\n  // This rule must be removed if a auto layout for this\r\n  // connections is implemented.\r\n  if (isSame(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  if (!is(connection, 'bpmn:DataAssociation')) {\r\n\r\n    if (canConnectMessageFlow(source, target)) {\r\n      return { type: 'bpmn:MessageFlow' };\r\n    }\r\n\r\n    if (canConnectSequenceFlow(source, target)) {\r\n      return { type: 'bpmn:SequenceFlow' };\r\n    }\r\n  }\r\n\r\n  var connectDataAssociation = canConnectDataAssociation(source, target);\r\n\r\n  if (connectDataAssociation) {\r\n    return connectDataAssociation;\r\n  }\r\n\r\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\r\n    return {\r\n      type: 'bpmn:Association',\r\n      associationDirection: 'One'\r\n    };\r\n  }\r\n\r\n  if (canConnectAssociation(source, target)) {\r\n\r\n    return {\r\n      type: 'bpmn:Association'\r\n    };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Can an element be dropped into the target element\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction canDrop(element, target, position) {\r\n\r\n  // can move labels everywhere\r\n  if (isLabel(element) && !isConnection(target)) {\r\n    return true;\r\n  }\r\n\r\n  // disallow to create elements on collapsed pools\r\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\r\n    return false;\r\n  }\r\n\r\n  // allow to create new participants on\r\n  // on existing collaboration and process diagrams\r\n  if (is(element, 'bpmn:Participant')) {\r\n    return is(target, 'bpmn:Process') || is(target, 'bpmn:Collaboration');\r\n  }\r\n\r\n  // allow creating lanes on participants and other lanes only\r\n  if (is(element, 'bpmn:Lane')) {\r\n    return is(target, 'bpmn:Participant') || is(target, 'bpmn:Lane');\r\n  }\r\n\r\n  if (is(element, 'bpmn:BoundaryEvent')) {\r\n    return false;\r\n  }\r\n\r\n  // drop flow elements onto flow element containers\r\n  // and participants\r\n  if (is(element, 'bpmn:FlowElement')) {\r\n    if (is(target, 'bpmn:FlowElementsContainer')) {\r\n      return isExpanded(target);\r\n    }\r\n\r\n    return isAny(target, [ 'bpmn:Participant', 'bpmn:Lane' ]);\r\n  }\r\n\r\n  // account for the fact that data associations are always\r\n  // rendered and moved to top (Process or Collaboration level)\r\n  //\r\n  // artifacts may be placed wherever, too\r\n  if (isAny(element, [ 'bpmn:Artifact', 'bpmn:DataAssociation' ])) {\r\n    return isAny(target, [\r\n      'bpmn:Collaboration',\r\n      'bpmn:Lane',\r\n      'bpmn:Participant',\r\n      'bpmn:Process',\r\n      'bpmn:SubProcess' ]);\r\n  }\r\n\r\n  if (is(element, 'bpmn:MessageFlow')) {\r\n    return is(target, 'bpmn:Collaboration')\r\n      || element.source.parent == target\r\n      || element.target.parent == target;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canPaste(tree, target) {\r\n  var topLevel = tree[0],\r\n      participants;\r\n\r\n  if (is(target, 'bpmn:Collaboration')) {\r\n    return every(topLevel, function(e) {\r\n      return e.type === 'bpmn:Participant';\r\n    });\r\n  }\r\n\r\n  if (is(target, 'bpmn:Process')) {\r\n    participants = any(topLevel, function(e) {\r\n      return e.type === 'bpmn:Participant';\r\n    });\r\n\r\n    return !(participants && target.children.length > 0);\r\n  }\r\n\r\n  // disallow to create elements on collapsed pools\r\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\r\n    return false;\r\n  }\r\n\r\n  if (is(target, 'bpmn:FlowElementsContainer')) {\r\n    return isExpanded(target);\r\n  }\r\n\r\n  return isAny(target, [\r\n    'bpmn:Collaboration',\r\n    'bpmn:Lane',\r\n    'bpmn:Participant',\r\n    'bpmn:Process',\r\n    'bpmn:SubProcess' ]);\r\n}\r\n\r\nfunction isBoundaryEvent(element) {\r\n  return !isLabel(element) && is(element, 'bpmn:BoundaryEvent');\r\n}\r\n\r\nfunction isLane(element) {\r\n  return is(element, 'bpmn:Lane');\r\n}\r\n\r\n/**\r\n * We treat IntermediateThrowEvents as boundary events during create,\r\n * this must be reflected in the rules.\r\n */\r\nfunction isBoundaryCandidate(element) {\r\n  return isBoundaryEvent(element) ||\r\n        (is(element, 'bpmn:IntermediateThrowEvent') && !element.parent);\r\n}\r\n\r\n\r\nfunction canAttach(elements, target, source, position) {\r\n\r\n  if (!Array.isArray(elements)) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  // disallow appending as boundary event\r\n  if (source) {\r\n    return false;\r\n  }\r\n\r\n  // only (re-)attach one element at a time\r\n  if (elements.length !== 1) {\r\n    return false;\r\n  }\r\n\r\n  var element = elements[0];\r\n\r\n  // do not attach labels\r\n  if (isLabel(element)) {\r\n    return false;\r\n  }\r\n\r\n  // only handle boundary events\r\n  if (!isBoundaryCandidate(element)) {\r\n    return false;\r\n  }\r\n\r\n  // allow default move operation\r\n  if (!target) {\r\n    return true;\r\n  }\r\n\r\n  // disallow drop on event sub processes\r\n  if (isEventSubProcess(target)) {\r\n    return false;\r\n  }\r\n\r\n  // only allow drop on non compensation activities\r\n  if (!is(target, 'bpmn:Activity') || isForCompensation(target)) {\r\n    return false;\r\n  }\r\n\r\n  // only attach to subprocess border\r\n  if (position && !isBoundaryAttachment(position, target)) {\r\n    return false;\r\n  }\r\n\r\n  return 'attach';\r\n}\r\n\r\n\r\n/**\r\n * Defines how to replace elements for a given target.\r\n *\r\n * Returns an array containing all elements which will be replaced.\r\n *\r\n * @example\r\n *\r\n *  [{ id: 'IntermediateEvent_2',\r\n *     type: 'bpmn:StartEvent'\r\n *   },\r\n *   { id: 'IntermediateEvent_5',\r\n *     type: 'bpmn:EndEvent'\r\n *   }]\r\n *\r\n * @param  {Array} elements\r\n * @param  {Object} target\r\n *\r\n * @return {Object} an object containing all elements which have to be replaced\r\n */\r\nfunction canReplace(elements, target, position) {\r\n\r\n  if (!target) {\r\n    return false;\r\n  }\r\n\r\n  var canExecute = {\r\n    replacements: []\r\n  };\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    if (!isEventSubProcess(target)) {\r\n\r\n      if (is(element, 'bpmn:StartEvent') &&\r\n          element.type !== 'label' &&\r\n          canDrop(element, target)) {\r\n\r\n        // replace a non-interrupting start event by a blank interrupting start event\r\n        // when the target is not an event sub process\r\n        if (!isInterrupting(element)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:StartEvent'\r\n          });\r\n        }\r\n\r\n        // replace an error/escalation/compansate start event by a blank interrupting start event\r\n        // when the target is not an event sub process\r\n        if (hasErrorEventDefinition(element) ||\r\n            hasEscalationEventDefinition(element) ||\r\n            hasCompensateEventDefinition(element)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:StartEvent'\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!is(target, 'bpmn:Transaction')) {\r\n      if (hasEventDefinition(element, 'bpmn:CancelEventDefinition') &&\r\n          element.type !== 'label') {\r\n\r\n        if (is(element, 'bpmn:EndEvent') && canDrop(element, target)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:EndEvent'\r\n          });\r\n        }\r\n\r\n        if (is(element, 'bpmn:BoundaryEvent') && canAttach(element, target, null, position)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:BoundaryEvent'\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return canExecute.replacements.length ? canExecute : false;\r\n}\r\n\r\nfunction canMove(elements, target) {\r\n\r\n  // do not move selection containing boundary events\r\n  if (any(elements, isBoundaryEvent)) {\r\n    return false;\r\n  }\r\n\r\n  // do not move selection containing lanes\r\n  if (any(elements, isLane)) {\r\n    return false;\r\n  }\r\n\r\n  // allow default move check to start move operation\r\n  if (!target) {\r\n    return true;\r\n  }\r\n\r\n  return elements.every(function(element) {\r\n    return canDrop(element, target);\r\n  });\r\n}\r\n\r\nfunction canCreate(shape, target, source, position) {\r\n\r\n  if (!target) {\r\n    return false;\r\n  }\r\n\r\n  if (isLabel(target)) {\r\n    return null;\r\n  }\r\n\r\n  if (isSame(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  // ensure we do not drop the element\r\n  // into source\r\n  if (source && isParent(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  return canDrop(shape, target, position) || canInsert(shape, target, position);\r\n}\r\n\r\nfunction canResize(shape, newBounds) {\r\n  if (is(shape, 'bpmn:SubProcess')) {\r\n    return (!!isExpanded(shape)) && (\r\n          !newBounds || (newBounds.width >= 100 && newBounds.height >= 80)\r\n    );\r\n  }\r\n\r\n  if (is(shape, 'bpmn:Lane')) {\r\n    return !newBounds || (newBounds.width >= 130 && newBounds.height >= 60);\r\n  }\r\n\r\n  if (is(shape, 'bpmn:Participant')) {\r\n    return !newBounds || (newBounds.width >= 250 && newBounds.height >= 50);\r\n  }\r\n\r\n  if (isTextAnnotation(shape)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Check, whether one side of the relationship\r\n * is a text annotation.\r\n */\r\nfunction isOneTextAnnotation(source, target) {\r\n\r\n  var sourceTextAnnotation = isTextAnnotation(source),\r\n      targetTextAnnotation = isTextAnnotation(target);\r\n\r\n  return (\r\n    (sourceTextAnnotation || targetTextAnnotation) &&\r\n    (sourceTextAnnotation !== targetTextAnnotation)\r\n  );\r\n}\r\n\r\n\r\nfunction canConnectAssociation(source, target) {\r\n\r\n  // do not connect connections\r\n  if (isConnection(source) || isConnection(target)) {\r\n    return false;\r\n  }\r\n\r\n  // compensation boundary events are exception\r\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\r\n    return true;\r\n  }\r\n\r\n  // don't connect parent <-> child\r\n  if (isParent(target, source) || isParent(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  // allow connection of associations between <!TextAnnotation> and <TextAnnotation>\r\n  return isOneTextAnnotation(source, target);\r\n}\r\n\r\nfunction canConnectMessageFlow(source, target) {\r\n\r\n  return isMessageFlowSource(source) &&\r\n         isMessageFlowTarget(target) &&\r\n        !isSameOrganization(source, target);\r\n}\r\n\r\nfunction canConnectSequenceFlow(source, target) {\r\n\r\n  return isSequenceFlowSource(source) &&\r\n         isSequenceFlowTarget(target) &&\r\n         isSameScope(source, target) &&\r\n         !(is(source, 'bpmn:EventBasedGateway') && !isEventBasedTarget(target));\r\n}\r\n\r\n\r\nfunction canConnectDataAssociation(source, target) {\r\n\r\n  if (isAny(source, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\r\n      isAny(target, [ 'bpmn:Activity', 'bpmn:ThrowEvent' ])) {\r\n    return { type: 'bpmn:DataInputAssociation' };\r\n  }\r\n\r\n  if (isAny(target, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\r\n      isAny(source, [ 'bpmn:Activity', 'bpmn:CatchEvent' ])) {\r\n    return { type: 'bpmn:DataOutputAssociation' };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canInsert(shape, flow, position) {\r\n\r\n  if (Array.isArray(shape)) {\r\n    if (shape.length !== 1) {\r\n      return false;\r\n    }\r\n\r\n    shape = shape[0];\r\n  }\r\n\r\n  // return true if we can drop on the\r\n  // underlying flow parent\r\n  //\r\n  // at this point we are not really able to talk\r\n  // about connection rules (yet)\r\n\r\n  return (\r\n    isAny(flow, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ]) &&\r\n    !isLabel(flow) &&\r\n    is(shape, 'bpmn:FlowNode') &&\r\n    !is(shape, 'bpmn:BoundaryEvent') &&\r\n    canDrop(shape, flow.parent, position));\r\n}\r\n\r\nfunction contains(collection, element) {\r\n  return (collection && element) && collection.indexOf(element) !== -1;\r\n}\r\n\r\nfunction canCopy(collection, element) {\r\n  if (is(element, 'bpmn:Lane') && !contains(collection, element.parent)) {\r\n    return false;\r\n  }\r\n\r\n  if (is(element, 'bpmn:BoundaryEvent') && !contains(collection, element.host)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(227)\r\n  ],\r\n  __init__: [ 'bpmnRules' ],\r\n  bpmnRules: [ 'type', require(81) ]\r\n};\r\n","'use strict';\r\n\r\nvar map = require(305),\r\n    filter = require(301),\r\n    sortBy = require(310);\r\n\r\nvar labelUtil = require(25);\r\n\r\n\r\n/**\r\n * Provides ability to search through BPMN elements\r\n */\r\nfunction BpmnSearchProvider(elementRegistry, searchPad, canvas) {\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n\r\n  searchPad.registerProvider(this);\r\n}\r\n\r\nmodule.exports = BpmnSearchProvider;\r\n\r\nBpmnSearchProvider.$inject = [\r\n  'elementRegistry',\r\n  'searchPad',\r\n  'canvas'\r\n];\r\n\r\n\r\n/**\r\n * Finds all elements that match given pattern\r\n *\r\n * <Result> :\r\n *  {\r\n *    primaryTokens: <Array<Token>>,\r\n *    secondaryTokens: <Array<Token>>,\r\n *    element: <Element>\r\n *  }\r\n *\r\n * <Token> :\r\n *  {\r\n *    normal|matched: <String>\r\n *  }\r\n *\r\n * @param  {String} pattern\r\n * @return {Array<Result>}\r\n */\r\nBpmnSearchProvider.prototype.find = function(pattern) {\r\n  var rootElement = this._canvas.getRootElement();\r\n\r\n  var elements = this._elementRegistry.filter(function(element) {\r\n    if (element.labelTarget) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  // do not include root element\r\n  elements = filter(elements, function(element) {\r\n    return element !== rootElement;\r\n  });\r\n\r\n  elements = map(elements, function(element) {\r\n    return {\r\n      primaryTokens: matchAndSplit(labelUtil.getLabel(element), pattern),\r\n      secondaryTokens: matchAndSplit(element.id, pattern),\r\n      element: element\r\n    };\r\n  });\r\n\r\n  // exclude non-matched elements\r\n  elements = filter(elements, function(element) {\r\n    return hasMatched(element.primaryTokens) || hasMatched(element.secondaryTokens);\r\n  });\r\n\r\n  elements = sortBy(elements, function(element) {\r\n    return labelUtil.getLabel(element.element) + element.element.id;\r\n  });\r\n\r\n  return elements;\r\n};\r\n\r\n\r\nfunction hasMatched(tokens) {\r\n  var matched = filter(tokens, function(t) {\r\n    return !!t.matched;\r\n  });\r\n\r\n  return matched.length > 0;\r\n}\r\n\r\n\r\nfunction matchAndSplit(text, pattern) {\r\n  var tokens = [],\r\n      originalText = text;\r\n\r\n  if (!text) {\r\n    return tokens;\r\n  }\r\n\r\n  text = text.toLowerCase();\r\n  pattern = pattern.toLowerCase();\r\n\r\n  var i = text.indexOf(pattern);\r\n\r\n  if (i > -1) {\r\n    if (i !== 0) {\r\n      tokens.push({\r\n        normal: originalText.substr(0, i)\r\n      });\r\n    }\r\n\r\n    tokens.push({\r\n      matched: originalText.substr(i, pattern.length)\r\n    });\r\n\r\n    if (pattern.length + i < text.length) {\r\n      tokens.push({\r\n        normal: originalText.substr(pattern.length + i, text.length)\r\n      });\r\n    }\r\n  } else {\r\n    tokens.push({\r\n      normal: originalText\r\n    });\r\n  }\r\n\r\n  return tokens;\r\n}","module.exports = {\r\n  __depends__: [\r\n    require(229)\r\n  ],\r\n  __init__: [ 'bpmnSearch'],\r\n  bpmnSearch: [ 'type', require(83) ]\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar abs = Math.abs;\r\n\r\nvar forEach = require(303),\r\n    filter = require(301),\r\n    assign = require(431);\r\n\r\nvar getBoundingBox = require(266).getBBox;\r\n\r\nvar is = require(95).is,\r\n    isAny = require(68).isAny,\r\n    isExpanded = require(93).isExpanded;\r\n\r\nvar Snapping = require(236),\r\n    SnapUtil = require(235);\r\n\r\nvar asTRBL = require(252).asTRBL;\r\n\r\nvar round = Math.round;\r\n\r\nvar mid = SnapUtil.mid,\r\n    topLeft = SnapUtil.topLeft,\r\n    bottomRight = SnapUtil.bottomRight,\r\n    isSnapped = SnapUtil.isSnapped,\r\n    setSnapped = SnapUtil.setSnapped;\r\n\r\nvar getBoundaryAttachment = require(86).getBoundaryAttachment,\r\n    getParticipantSizeConstraints = require(86).getParticipantSizeConstraints,\r\n    getLanesRoot = require(67).getLanesRoot;\r\n\r\nvar HIGH_PRIORITY = 1500;\r\n\r\n\r\n/**\r\n * BPMN specific snapping functionality\r\n *\r\n *  * snap on process elements if a pool is created inside a\r\n *    process diagram\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nfunction BpmnSnapping(eventBus, canvas, bpmnRules, elementRegistry) {\r\n\r\n  // instantiate super\r\n  Snapping.call(this, eventBus, canvas);\r\n\r\n\r\n  /**\r\n   * Drop participant on process <> process elements snapping\r\n   */\r\n  eventBus.on('create.start', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    // snap participant around existing elements (if any)\r\n    if (is(shape, 'bpmn:Participant') && is(rootElement, 'bpmn:Process')) {\r\n      initParticipantSnapping(context, shape, rootElement.children);\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'create.move', 'create.end' ], HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        participantSnapBox = context.participantSnapBox;\r\n\r\n    if (!isSnapped(event) && participantSnapBox) {\r\n      snapParticipant(participantSnapBox, shape, event);\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.move.start', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    // snap participant around existing elements (if any)\r\n    if (is(shape, 'bpmn:Participant') && is(rootElement, 'bpmn:Process')) {\r\n      initParticipantSnapping(context, shape, rootElement.children);\r\n    }\r\n  });\r\n\r\n\r\n  function canAttach(shape, target, position) {\r\n    return bpmnRules.canAttach([ shape ], target, null, position) === 'attach';\r\n  }\r\n\r\n  function canConnect(source, target) {\r\n    return bpmnRules.canConnect(source, target);\r\n  }\r\n\r\n  /**\r\n   * Snap boundary events to elements border\r\n   */\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        target = context.target,\r\n        shape = context.shape;\r\n\r\n    if (target && !isSnapped(event) && canAttach(shape, target, event)) {\r\n      snapBoundaryEvent(event, shape, target);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Adjust parent for flowElements to the target participant\r\n   * when droping onto lanes.\r\n   */\r\n  eventBus.on([\r\n    'shape.move.hover',\r\n    'shape.move.move',\r\n    'shape.move.end',\r\n    'create.hover',\r\n    'create.move',\r\n    'create.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        hover = event.hover;\r\n\r\n    if (is(hover, 'bpmn:Lane') && !isAny(shape, [ 'bpmn:Lane', 'bpmn:Participant' ])) {\r\n      event.hover = getLanesRoot(hover);\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Snap sequence flows.\r\n   */\r\n  eventBus.on([\r\n    'connect.move',\r\n    'connect.hover',\r\n    'connect.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    var connection = canConnect(source, target) || {};\r\n\r\n    if (!context.initialSourcePosition) {\r\n      context.initialSourcePosition = context.sourcePosition;\r\n    }\r\n\r\n    if (target && connection.type === 'bpmn:SequenceFlow') {\r\n\r\n      // snap source\r\n      context.sourcePosition = mid(source);\r\n\r\n      // snap target\r\n      assign(event, mid(target));\r\n    } else {\r\n\r\n      // otherwise reset source snap\r\n      context.sourcePosition = context.initialSourcePosition;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  eventBus.on([\r\n    'create.move',\r\n    'shape.move.move'\r\n  ], function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        target = context.target;\r\n\r\n    var threshold = 30;\r\n\r\n    if (is(shape, 'bpmn:Lane')) {\r\n      if (isAny(target, [ 'bpmn:Lane', 'bpmn:Participant' ])) {\r\n\r\n        var childLanes = filter(target.children, function(c) {\r\n          return is(c, 'bpmn:Lane');\r\n        });\r\n\r\n        var y = event.y,\r\n            targetTrbl;\r\n\r\n        var insert = childLanes.reduce(function(insert, l) {\r\n\r\n          var laneTrbl = asTRBL(l);\r\n\r\n          if (abs(laneTrbl.top - y) < threshold) {\r\n            insert = assign(insert || {}, { before: { element: l, y: laneTrbl.top } });\r\n          } else\r\n          if (abs(laneTrbl.bottom - y) < threshold) {\r\n            insert = assign(insert || {}, { after: { element: l, y: laneTrbl.bottom } });\r\n          } else\r\n          if (laneTrbl.top < y && laneTrbl.bottom > y) {\r\n            if (abs(laneTrbl.top - y) > abs(laneTrbl.bottom - y)) {\r\n              insert = assign(insert || {}, { after: { element: l, y: laneTrbl.bottom } });\r\n            } else {\r\n              insert = assign(insert || {}, { before: { element: l, y: laneTrbl.top } });\r\n            }\r\n\r\n          }\r\n\r\n          return insert;\r\n        }, false);\r\n\r\n\r\n        if (!insert) {\r\n          targetTrbl = asTRBL(target);\r\n\r\n          if (abs(targetTrbl.top - y) < threshold) {\r\n            insert = { before: { element: target, y: targetTrbl.top } };\r\n          } else\r\n          if (abs(targetTrbl.bottom - y) < threshold) {\r\n            insert = { after: { element: target, y: targetTrbl.bottom } };\r\n          } else {\r\n            insert = { into: { element: target, y: (targetTrbl.top + targetTrbl.bottom) / 2 } };\r\n          }\r\n\r\n        }\r\n\r\n        if (insert.before && insert.after) {\r\n          console.log('insert between', insert.before.element.id, 'and', insert.after.element.id);\r\n          setSnapped(event, 'x', insert.before.element.x + insert.before.element.width / 2);\r\n          setSnapped(event, 'y', insert.before.y);\r\n        } else\r\n        if (insert.after) {\r\n          console.log('insert after', insert.after.element.id);\r\n          setSnapped(event, 'x', insert.after.element.x + insert.after.element.width / 2);\r\n          setSnapped(event, 'y', insert.after.y);\r\n        } else\r\n        if (insert.before) {\r\n          console.log('insert before', insert.before.element.id);\r\n          setSnapped(event, 'x', insert.before.element.x + insert.before.element.width / 2);\r\n          setSnapped(event, 'y', insert.before.y);\r\n        } else\r\n        if (insert.into) {\r\n          console.log('insert into', insert.into.element.id);\r\n          setSnapped(event, 'x', insert.into.element.x + insert.into.element.width / 2);\r\n          setSnapped(event, 'y', insert.into.y);\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\r\n      context.minDimensions = { width: 140, height: 120 };\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.minDimensions = { width: 300, height: 150 };\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n      context.resizeConstraints = getParticipantSizeConstraints(shape, context.direction, context.balanced);\r\n    }\r\n\r\n    if (is(shape, 'bpmn:TextAnnotation')) {\r\n      context.minDimensions = { width: 50, height: 30 };\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(BpmnSnapping, Snapping);\r\n\r\nBpmnSnapping.$inject = [ 'eventBus', 'canvas', 'bpmnRules', 'elementRegistry' ];\r\n\r\nmodule.exports = BpmnSnapping;\r\n\r\n\r\nBpmnSnapping.prototype.initSnap = function(event) {\r\n\r\n  var context = event.context,\r\n      shape = event.shape,\r\n      shapeMid,\r\n      shapeBounds,\r\n      shapeTopLeft,\r\n      shapeBottomRight,\r\n      snapContext;\r\n\r\n\r\n  snapContext = Snapping.prototype.initSnap.call(this, event);\r\n\r\n  if (is(shape, 'bpmn:Participant')) {\r\n    // assign higher priority for outer snaps on participants\r\n    snapContext.setSnapLocations([ 'top-left', 'bottom-right', 'mid' ]);\r\n  }\r\n\r\n\r\n  if (shape) {\r\n\r\n    shapeMid = mid(shape, event);\r\n\r\n    shapeBounds = {\r\n      width: shape.width,\r\n      height: shape.height,\r\n      x: isNaN(shape.x) ? round(shapeMid.x - shape.width / 2) : shape.x,\r\n      y: isNaN(shape.y) ? round(shapeMid.y - shape.height / 2) : shape.y\r\n    };\r\n\r\n    shapeTopLeft = topLeft(shapeBounds);\r\n    shapeBottomRight = bottomRight(shapeBounds);\r\n\r\n    snapContext.setSnapOrigin('top-left', {\r\n      x: shapeTopLeft.x - event.x,\r\n      y: shapeTopLeft.y - event.y\r\n    });\r\n\r\n    snapContext.setSnapOrigin('bottom-right', {\r\n      x: shapeBottomRight.x - event.x,\r\n      y: shapeBottomRight.y - event.y\r\n    });\r\n\r\n    forEach(shape.outgoing, function(c) {\r\n      var docking = c.waypoints[0];\r\n\r\n      docking = docking.original || docking;\r\n\r\n      snapContext.setSnapOrigin(c.id + '-docking', {\r\n        x: docking.x - event.x,\r\n        y: docking.y - event.y\r\n      });\r\n    });\r\n\r\n    forEach(shape.incoming, function(c) {\r\n      var docking = c.waypoints[c.waypoints.length - 1];\r\n\r\n      docking = docking.original || docking;\r\n\r\n      snapContext.setSnapOrigin(c.id + '-docking', {\r\n        x: docking.x - event.x,\r\n        y: docking.y - event.y\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  var source = context.source;\r\n\r\n  if (source) {\r\n    snapContext.addDefaultSnap('mid', mid(source));\r\n  }\r\n};\r\n\r\n\r\nBpmnSnapping.prototype.addTargetSnaps = function(snapPoints, shape, target) {\r\n\r\n  // use target parent as snap target\r\n  if (is(shape, 'bpmn:BoundaryEvent') && shape.type !== 'label') {\r\n    target = target.parent;\r\n  }\r\n\r\n  // add sequence flow parents as snap targets\r\n  if (is(target, 'bpmn:SequenceFlow')) {\r\n    this.addTargetSnaps(snapPoints, shape, target.parent);\r\n  }\r\n\r\n  var siblings = this.getSiblings(shape, target) || [];\r\n\r\n  forEach(siblings, function(sibling) {\r\n\r\n    // do not snap to lanes\r\n    if (is(sibling, 'bpmn:Lane')) {\r\n      return;\r\n    }\r\n\r\n    if (sibling.waypoints) {\r\n      forEach(sibling.waypoints, function(waypoint, i) {\r\n        var nextWaypoint = sibling.waypoints[i+1];\r\n\r\n        if (!nextWaypoint) {\r\n          return;\r\n        }\r\n\r\n        if (nextWaypoint.x === waypoint.x || nextWaypoint.y === waypoint.y) {\r\n          snapPoints.add('mid', waypoint);\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    snapPoints.add('mid', mid(sibling));\r\n\r\n    if (is(sibling, 'bpmn:Participant')) {\r\n      snapPoints.add('top-left', topLeft(sibling));\r\n      snapPoints.add('bottom-right', bottomRight(sibling));\r\n    }\r\n  });\r\n\r\n\r\n  forEach(shape.incoming, function(c) {\r\n\r\n    if (siblings.indexOf(c.source) === -1) {\r\n      snapPoints.add('mid', mid(c.source));\r\n    }\r\n\r\n    var docking = c.waypoints[0];\r\n    snapPoints.add(c.id + '-docking', docking.original || docking);\r\n  });\r\n\r\n\r\n  forEach(shape.outgoing, function(c) {\r\n\r\n    if (siblings.indexOf(c.target) === -1) {\r\n      snapPoints.add('mid', mid(c.target));\r\n    }\r\n\r\n    var docking = c.waypoints[c.waypoints.length - 1];\r\n    snapPoints.add(c.id + '-docking', docking.original || docking);\r\n  });\r\n};\r\n\r\n\r\n/////// participant snapping //////////////////\r\n\r\nfunction initParticipantSnapping(context, shape, elements) {\r\n\r\n  if (!elements.length) {\r\n    return;\r\n  }\r\n\r\n  var snapBox = getBoundingBox(elements.filter(function(e) {\r\n    return !e.labelTarget && !e.waypoints;\r\n  }));\r\n\r\n  snapBox.x -= 50;\r\n  snapBox.y -= 20;\r\n  snapBox.width += 70;\r\n  snapBox.height += 40;\r\n\r\n  // adjust shape height to include bounding box\r\n  shape.width = Math.max(shape.width, snapBox.width);\r\n  shape.height = Math.max(shape.height, snapBox.height);\r\n\r\n  context.participantSnapBox = snapBox;\r\n}\r\n\r\nfunction snapParticipant(snapBox, shape, event, offset) {\r\n  offset = offset || 0;\r\n\r\n  var shapeHalfWidth = shape.width / 2 - offset,\r\n      shapeHalfHeight = shape.height / 2;\r\n\r\n  var currentTopLeft = {\r\n    x: event.x - shapeHalfWidth - offset,\r\n    y: event.y - shapeHalfHeight\r\n  };\r\n\r\n  var currentBottomRight = {\r\n    x: event.x + shapeHalfWidth + offset,\r\n    y: event.y + shapeHalfHeight\r\n  };\r\n\r\n  var snapTopLeft = snapBox,\r\n      snapBottomRight = bottomRight(snapBox);\r\n\r\n  if (currentTopLeft.x >= snapTopLeft.x) {\r\n    setSnapped(event, 'x', snapTopLeft.x + offset + shapeHalfWidth);\r\n  } else\r\n  if (currentBottomRight.x <= snapBottomRight.x) {\r\n    setSnapped(event, 'x', snapBottomRight.x - offset - shapeHalfWidth);\r\n  }\r\n\r\n  if (currentTopLeft.y >= snapTopLeft.y) {\r\n    setSnapped(event, 'y', snapTopLeft.y + shapeHalfHeight);\r\n  } else\r\n  if (currentBottomRight.y <= snapBottomRight.y) {\r\n    setSnapped(event, 'y', snapBottomRight.y - shapeHalfHeight);\r\n  }\r\n}\r\n\r\n\r\n/////// boundary event snapping /////////////////////////\r\n\r\n\r\nfunction snapBoundaryEvent(event, shape, target) {\r\n  var targetTRBL = asTRBL(target);\r\n\r\n  var direction = getBoundaryAttachment(event, target);\r\n\r\n  if (/top/.test(direction)) {\r\n    setSnapped(event, 'y', targetTRBL.top);\r\n  } else\r\n  if (/bottom/.test(direction)) {\r\n    setSnapped(event, 'y', targetTRBL.bottom);\r\n  }\r\n\r\n  if (/left/.test(direction)) {\r\n    setSnapped(event, 'x', targetTRBL.left);\r\n  } else\r\n  if (/right/.test(direction)) {\r\n    setSnapped(event, 'x', targetTRBL.right);\r\n  }\r\n}\r\n","'use strict';\r\n\r\nvar getOrientation = require(252).getOrientation;\r\n\r\n\r\nfunction getBoundaryAttachment(position, targetBounds) {\r\n\r\n  var orientation = getOrientation(position, targetBounds, -15);\r\n\r\n  if (orientation !== 'intersect') {\r\n    return orientation;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports.getBoundaryAttachment = getBoundaryAttachment;\r\n\r\n\r\n\r\n// participant snapping box implementation /////////////////\r\n\r\nvar is = require(95).is;\r\n\r\nvar asTRBL = require(252).asTRBL;\r\n\r\nvar collectLanes = require(67).collectLanes,\r\n    getLanesRoot = require(67).getLanesRoot;\r\n\r\nvar abs = Math.abs,\r\n    min = Math.min,\r\n    max = Math.max;\r\n\r\n\r\nfunction addToTrbl(trbl, attr, value, choice) {\r\n\r\n  var current = trbl[attr];\r\n\r\n  // make sure to set the value if it does not exist\r\n  // or apply the correct value by comparing against\r\n  // choice(value, currentValue)\r\n  trbl[attr] = current === undefined ? value : choice(value, current);\r\n}\r\n\r\nfunction addMin(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, min);\r\n}\r\n\r\nfunction addMax(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, max);\r\n}\r\n\r\n\r\nvar LANE_MIN_HEIGHT = 60,\r\n    LANE_MIN_WIDTH = 300,\r\n    LANE_RIGHT_PADDING = 20,\r\n    LANE_LEFT_PADDING = 50,\r\n    LANE_TOP_PADDING = 20,\r\n    LANE_BOTTOM_PADDING = 20;\r\n\r\n\r\nfunction getParticipantSizeConstraints(laneShape, resizeDirection, balanced) {\r\n\r\n  var lanesRoot = getLanesRoot(laneShape);\r\n\r\n  var isFirst = true,\r\n      isLast = true;\r\n\r\n  ///// max top/bottom size for lanes\r\n\r\n  var allLanes = collectLanes(lanesRoot, [ lanesRoot ]);\r\n\r\n  var laneTrbl = asTRBL(laneShape);\r\n\r\n  var maxTrbl = {},\r\n      minTrbl = {};\r\n\r\n  if (/e/.test(resizeDirection)) {\r\n    minTrbl.right = laneTrbl.left + LANE_MIN_WIDTH;\r\n  } else\r\n  if (/w/.test(resizeDirection)) {\r\n    minTrbl.left = laneTrbl.right - LANE_MIN_WIDTH;\r\n  }\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (/n/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.top < (laneTrbl.top - 10)) {\r\n        isFirst = false;\r\n      }\r\n\r\n      // max top size (based on next element)\r\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\r\n        addMax(maxTrbl, 'top', otherTrbl.top + LANE_MIN_HEIGHT);\r\n      }\r\n\r\n      // min top size (based on self or nested element)\r\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\r\n        addMin(minTrbl, 'top', otherTrbl.bottom - LANE_MIN_HEIGHT);\r\n      }\r\n    }\r\n\r\n    if (/s/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.bottom > (laneTrbl.bottom + 10)) {\r\n        isLast = false;\r\n      }\r\n\r\n      // max bottom size (based on previous element)\r\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\r\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - LANE_MIN_HEIGHT);\r\n      }\r\n\r\n      // min bottom size (based on self or nested element)\r\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\r\n        addMax(minTrbl, 'bottom', otherTrbl.top + LANE_MIN_HEIGHT);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  ///// max top/bottom/left/right size based on flow nodes\r\n\r\n  var flowElements = lanesRoot.children.filter(function(s) {\r\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\r\n  });\r\n\r\n  flowElements.forEach(function(flowElement) {\r\n\r\n    var flowElementTrbl = asTRBL(flowElement);\r\n\r\n    if (isFirst && /n/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'top', flowElementTrbl.top - LANE_TOP_PADDING);\r\n    }\r\n\r\n    if (/e/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'right', flowElementTrbl.right + LANE_RIGHT_PADDING);\r\n    }\r\n\r\n    if (isLast && /s/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + LANE_BOTTOM_PADDING);\r\n    }\r\n\r\n    if (/w/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'left', flowElementTrbl.left - LANE_LEFT_PADDING);\r\n    }\r\n  });\r\n\r\n\r\n  return {\r\n    min: minTrbl,\r\n    max: maxTrbl\r\n  };\r\n}\r\n\r\n\r\nmodule.exports.getParticipantSizeConstraints = getParticipantSizeConstraints;","module.exports = {\r\n  __init__: [ 'snapping' ],\r\n  snapping: [ 'type', require(85) ]\r\n};","'use strict';\r\n\r\nvar assign = require(431),\r\n    map = require(305);\r\n\r\nvar LabelUtil = require(94);\r\n\r\nvar TextUtil = require(280);\r\n\r\nvar is = require(95).is;\r\n\r\nvar hasExternalLabel = LabelUtil.hasExternalLabel,\r\n    getExternalLabelBounds = LabelUtil.getExternalLabelBounds,\r\n    isExpanded = require(93).isExpanded,\r\n    elementToString = require(91).elementToString;\r\n\r\n\r\nfunction elementData(semantic, attrs) {\r\n  return assign({\r\n    id: semantic.id,\r\n    type: semantic.$type,\r\n    businessObject: semantic\r\n  }, attrs);\r\n}\r\n\r\nfunction collectWaypoints(waypoints) {\r\n  return map(waypoints, function(p) {\r\n    return { x: p.x, y: p.y };\r\n  });\r\n}\r\n\r\nfunction notYetDrawn(translate, semantic, refSemantic, property) {\r\n  return new Error(translate('element {element} referenced by {referenced}#{property} not yet drawn', {\r\n    element: elementToString(refSemantic),\r\n    referenced: elementToString(semantic),\r\n    property: property\r\n  }));\r\n}\r\n\r\n\r\n/**\r\n * An importer that adds bpmn elements to the canvas\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementFactory} elementFactory\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction BpmnImporter(eventBus, canvas, elementFactory, elementRegistry, translate) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._elementFactory = elementFactory;\r\n  this._elementRegistry = elementRegistry;\r\n  this._translate = translate;\r\n\r\n  this._textUtil = new TextUtil();\r\n}\r\n\r\nBpmnImporter.$inject = [ 'eventBus', 'canvas', 'elementFactory', 'elementRegistry', 'translate' ];\r\n\r\nmodule.exports = BpmnImporter;\r\n\r\n\r\n/**\r\n * Add bpmn element (semantic) to the canvas onto the\r\n * specified parent shape.\r\n */\r\nBpmnImporter.prototype.add = function(semantic, parentElement) {\r\n\r\n  var di = semantic.di,\r\n      element,\r\n      translate = this._translate,\r\n      hidden;\r\n\r\n  // ROOT ELEMENT\r\n  // handle the special case that we deal with a\r\n  // invisible root element (process or collaboration)\r\n  if (is(di, 'bpmndi:BPMNPlane')) {\r\n\r\n    // add a virtual element (not being drawn)\r\n    element = this._elementFactory.createRoot(elementData(semantic));\r\n\r\n    this._canvas.setRootElement(element);\r\n  }\r\n\r\n  // SHAPE\r\n  else if (is(di, 'bpmndi:BPMNShape')) {\r\n\r\n    var collapsed = !isExpanded(semantic);\r\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\r\n\r\n    var bounds = semantic.di.bounds;\r\n\r\n    element = this._elementFactory.createShape(elementData(semantic, {\r\n      collapsed: collapsed,\r\n      hidden: hidden,\r\n      x: Math.round(bounds.x),\r\n      y: Math.round(bounds.y),\r\n      width: Math.round(bounds.width),\r\n      height: Math.round(bounds.height)\r\n    }));\r\n\r\n    if (is(semantic, 'bpmn:BoundaryEvent')) {\r\n      this._attachBoundary(semantic, element);\r\n    }\r\n\r\n    this._canvas.addShape(element, parentElement);\r\n  }\r\n\r\n  // CONNECTION\r\n  else if (is(di, 'bpmndi:BPMNEdge')) {\r\n\r\n    var source = this._getSource(semantic),\r\n        target = this._getTarget(semantic);\r\n\r\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\r\n\r\n    element = this._elementFactory.createConnection(elementData(semantic, {\r\n      hidden: hidden,\r\n      source: source,\r\n      target: target,\r\n      waypoints: collectWaypoints(semantic.di.waypoint)\r\n    }));\r\n\r\n    if (is(semantic, 'bpmn:DataAssociation')) {\r\n\r\n      // render always on top; this ensures DataAssociations\r\n      // are rendered correctly across different \"hacks\" people\r\n      // love to model such as cross participant / sub process\r\n      // associations\r\n      parentElement = null;\r\n    }\r\n\r\n    this._canvas.addConnection(element, parentElement);\r\n  } else {\r\n    throw new Error(translate('unknown di {di} for element {semantic}', {\r\n      di: elementToString(di),\r\n      semantic: elementToString(semantic)\r\n    }));\r\n  }\r\n  // (optional) LABEL\r\n  if (hasExternalLabel(semantic)) {\r\n    this.addLabel(semantic, element);\r\n  }\r\n\r\n\r\n  this._eventBus.fire('bpmnElement.added', { element: element });\r\n\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Attach the boundary element to the given host\r\n *\r\n * @param {ModdleElement} boundarySemantic\r\n * @param {djs.model.Base} boundaryElement\r\n */\r\nBpmnImporter.prototype._attachBoundary = function(boundarySemantic, boundaryElement) {\r\n  var translate = this._translate;\r\n  var hostSemantic = boundarySemantic.attachedToRef;\r\n\r\n  if (!hostSemantic) {\r\n    throw new Error(translate('missing {semantic}#attachedToRef', {\r\n      semantic: elementToString(boundarySemantic)\r\n    }));\r\n  }\r\n\r\n  var host = this._elementRegistry.get(hostSemantic.id),\r\n      attachers = host && host.attachers;\r\n\r\n  if (!host) {\r\n    throw notYetDrawn(translate, boundarySemantic, hostSemantic, 'attachedToRef');\r\n  }\r\n\r\n  // wire element.host <> host.attachers\r\n  boundaryElement.host = host;\r\n\r\n  if (!attachers) {\r\n    host.attachers = attachers = [];\r\n  }\r\n\r\n  if (attachers.indexOf(boundaryElement) === -1) {\r\n    attachers.push(boundaryElement);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * add label for an element\r\n */\r\nBpmnImporter.prototype.addLabel = function(semantic, element) {\r\n  var bounds,\r\n      text,\r\n      label;\r\n\r\n  bounds = getExternalLabelBounds(semantic, element);\r\n\r\n  text = semantic.name;\r\n\r\n  if (text) {\r\n    // get corrected bounds from actual layouted text\r\n    bounds = getLayoutedBounds(bounds, text, this._textUtil);\r\n  }\r\n\r\n  label = this._elementFactory.createLabel(elementData(semantic, {\r\n    id: semantic.id + '_label',\r\n    labelTarget: element,\r\n    type: 'label',\r\n    hidden: element.hidden || !semantic.name,\r\n    x: Math.round(bounds.x),\r\n    y: Math.round(bounds.y),\r\n    width: Math.round(bounds.width),\r\n    height: Math.round(bounds.height)\r\n  }));\r\n\r\n  return this._canvas.addShape(label, element.parent);\r\n};\r\n\r\n/**\r\n * Return the drawn connection end based on the given side.\r\n *\r\n * @throws {Error} if the end is not yet drawn\r\n */\r\nBpmnImporter.prototype._getEnd = function(semantic, side) {\r\n\r\n  var element,\r\n      refSemantic,\r\n      type = semantic.$type,\r\n      translate = this._translate;\r\n\r\n  refSemantic = semantic[side + 'Ref'];\r\n\r\n  // handle mysterious isMany DataAssociation#sourceRef\r\n  if (side === 'source' && type === 'bpmn:DataInputAssociation') {\r\n    refSemantic = refSemantic && refSemantic[0];\r\n  }\r\n\r\n  // fix source / target for DataInputAssociation / DataOutputAssociation\r\n  if (side === 'source' && type === 'bpmn:DataOutputAssociation' ||\r\n      side === 'target' && type === 'bpmn:DataInputAssociation') {\r\n\r\n    refSemantic = semantic.$parent;\r\n  }\r\n\r\n  element = refSemantic && this._getElement(refSemantic);\r\n\r\n  if (element) {\r\n    return element;\r\n  }\r\n\r\n  if (refSemantic) {\r\n    throw notYetDrawn(translate, semantic, refSemantic, side + 'Ref');\r\n  } else {\r\n    throw new Error(translate('{semantic}#{side} Ref not specified', {\r\n      semantic: elementToString(semantic),\r\n      side: side\r\n    }));\r\n  }\r\n};\r\n\r\nBpmnImporter.prototype._getSource = function(semantic) {\r\n  return this._getEnd(semantic, 'source');\r\n};\r\n\r\nBpmnImporter.prototype._getTarget = function(semantic) {\r\n  return this._getEnd(semantic, 'target');\r\n};\r\n\r\n\r\nBpmnImporter.prototype._getElement = function(semantic) {\r\n  return this._elementRegistry.get(semantic.id);\r\n};\r\n\r\n\r\n// TODO(nikku): repeating code (search for <getLayoutedBounds>)\r\n\r\nvar EXTERNAL_LABEL_STYLE = {\r\n  fontFamily: 'Arial, sans-serif',\r\n  fontSize: '11px'\r\n};\r\n\r\nfunction getLayoutedBounds(bounds, text, textUtil) {\r\n\r\n  var layoutedLabelDimensions = textUtil.getDimensions(text, {\r\n    box: {\r\n      width: 90,\r\n      height: 30,\r\n      x: bounds.width / 2 + bounds.x,\r\n      y: bounds.height / 2 + bounds.y\r\n    },\r\n    style: EXTERNAL_LABEL_STYLE\r\n  });\r\n\r\n  // resize label shape to fit label text\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2 - layoutedLabelDimensions.width / 2),\r\n    y: Math.round(bounds.y),\r\n    width: Math.ceil(layoutedLabelDimensions.width),\r\n    height: Math.ceil(layoutedLabelDimensions.height)\r\n  };\r\n}","'use strict';\r\n\r\nvar filter = require(301),\r\n    find = require(302),\r\n    forEach = require(303);\r\n\r\nvar Refs = require(466);\r\n\r\nvar elementToString = require(91).elementToString;\r\n\r\nvar diRefs = new Refs({ name: 'bpmnElement', enumerable: true }, { name: 'di' });\r\n\r\n/**\r\n * Returns true if an element has the given meta-model type\r\n *\r\n * @param  {ModdleElement}  element\r\n * @param  {String}         type\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction is(element, type) {\r\n  return element.$instanceOf(type);\r\n}\r\n\r\n\r\n/**\r\n * Find a suitable display candidate for definitions where the DI does not\r\n * correctly specify one.\r\n */\r\nfunction findDisplayCandidate(definitions) {\r\n  return find(definitions.rootElements, function(e) {\r\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\r\n  });\r\n}\r\n\r\n\r\nfunction BpmnTreeWalker(handler, translate) {\r\n\r\n  // list of containers already walked\r\n  var handledElements = {};\r\n\r\n  // list of elements to handle deferred to ensure\r\n  // prerequisites are drawn\r\n  var deferred = [];\r\n\r\n  ///// Helpers /////////////////////////////////\r\n\r\n  function contextual(fn, ctx) {\r\n    return function(e) {\r\n      fn(e, ctx);\r\n    };\r\n  }\r\n\r\n  function handled(element) {\r\n    handledElements[element.id] = element;\r\n  }\r\n\r\n  function isHandled(element) {\r\n    return handledElements[element.id];\r\n  }\r\n\r\n  function visit(element, ctx) {\r\n\r\n    var gfx = element.gfx;\r\n\r\n    // avoid multiple rendering of elements\r\n    if (gfx) {\r\n      throw new Error(\r\n        translate('already rendered {element}', { element: elementToString(element) })\r\n      );\r\n    }\r\n\r\n    // call handler\r\n    return handler.element(element, ctx);\r\n  }\r\n\r\n  function visitRoot(element, diagram) {\r\n    return handler.root(element, diagram);\r\n  }\r\n\r\n  function visitIfDi(element, ctx) {\r\n\r\n    try {\r\n      var gfx = element.di && visit(element, ctx);\r\n\r\n      handled(element);\r\n\r\n      return gfx;\r\n    } catch (e) {\r\n      logError(e.message, { element: element, error: e });\r\n\r\n      console.error(translate('failed to import {element}', { element: elementToString(element) }));\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  function logError(message, context) {\r\n    handler.error(message, context);\r\n  }\r\n\r\n  ////// DI handling ////////////////////////////\r\n\r\n  function registerDi(di) {\r\n    var bpmnElement = di.bpmnElement;\r\n\r\n    if (bpmnElement) {\r\n      if (bpmnElement.di) {\r\n        logError(\r\n          translate('multiple DI elements defined for {element}', {\r\n            element: elementToString(bpmnElement)\r\n          }),\r\n          { element: bpmnElement  }\r\n        );\r\n      } else {\r\n        diRefs.bind(bpmnElement, 'di');\r\n        bpmnElement.di = di;\r\n      }\r\n    } else {\r\n      logError(\r\n        translate('no bpmnElement referenced in {element}', {\r\n          element: elementToString(di)\r\n        }),\r\n        { element: di }\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleDiagram(diagram) {\r\n    handlePlane(diagram.plane);\r\n  }\r\n\r\n  function handlePlane(plane) {\r\n    registerDi(plane);\r\n\r\n    forEach(plane.planeElement, handlePlaneElement);\r\n  }\r\n\r\n  function handlePlaneElement(planeElement) {\r\n    registerDi(planeElement);\r\n  }\r\n\r\n\r\n  ////// Semantic handling //////////////////////\r\n\r\n  /**\r\n   * Handle definitions and return the rendered diagram (if any)\r\n   *\r\n   * @param {ModdleElement} definitions to walk and import\r\n   * @param {ModdleElement} [diagram] specific diagram to import and display\r\n   *\r\n   * @throws {Error} if no diagram to display could be found\r\n   */\r\n  function handleDefinitions(definitions, diagram) {\r\n    // make sure we walk the correct bpmnElement\r\n\r\n    var diagrams = definitions.diagrams;\r\n\r\n    if (diagram && diagrams.indexOf(diagram) === -1) {\r\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\r\n    }\r\n\r\n    if (!diagram && diagrams && diagrams.length) {\r\n      diagram = diagrams[0];\r\n    }\r\n\r\n    // no diagram -> nothing to import\r\n    if (!diagram) {\r\n      throw new Error(translate('no diagram to display'));\r\n    }\r\n\r\n    // load DI from selected diagram only\r\n    handleDiagram(diagram);\r\n\r\n\r\n    var plane = diagram.plane;\r\n\r\n    if (!plane) {\r\n      throw new Error(translate(\r\n        'no plane for {element}',\r\n        { element: elementToString(diagram) }\r\n      ));\r\n    }\r\n\r\n    var rootElement = plane.bpmnElement;\r\n\r\n    // ensure we default to a suitable display candidate (process or collaboration),\r\n    // even if non is specified in DI\r\n    if (!rootElement) {\r\n      rootElement = findDisplayCandidate(definitions);\r\n\r\n      if (!rootElement) {\r\n        throw new Error(translate('no process or collaboration to display'));\r\n      } else {\r\n\r\n        logError(\r\n          translate('correcting missing bpmnElement on {plane} to {rootElement}', {\r\n            plane: elementToString(plane),\r\n            rootElement: elementToString(rootElement)\r\n          })\r\n        );\r\n\r\n        // correct DI on the fly\r\n        plane.bpmnElement = rootElement;\r\n        registerDi(plane);\r\n      }\r\n    }\r\n\r\n\r\n    var ctx = visitRoot(rootElement, plane);\r\n\r\n    if (is(rootElement, 'bpmn:Process')) {\r\n      handleProcess(rootElement, ctx);\r\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\r\n      handleCollaboration(rootElement, ctx);\r\n\r\n      // force drawing of everything not yet drawn that is part of the target DI\r\n      handleUnhandledProcesses(definitions.rootElements, ctx);\r\n    } else {\r\n      throw new Error(\r\n        translate('unsupported bpmnElement for {plane}: {rootElement}', {\r\n          plane: elementToString(plane),\r\n          rootElement: elementToString(rootElement)\r\n        })\r\n      );\r\n    }\r\n\r\n    // handle all deferred elements\r\n    handleDeferred(deferred);\r\n  }\r\n\r\n  function handleDeferred(deferred) {\r\n    forEach(deferred, function(d) { d(); });\r\n  }\r\n\r\n  function handleProcess(process, context) {\r\n    handleFlowElementsContainer(process, context);\r\n    handleIoSpecification(process.ioSpecification, context);\r\n\r\n    handleArtifacts(process.artifacts, context);\r\n\r\n    // log process handled\r\n    handled(process);\r\n  }\r\n\r\n  function handleUnhandledProcesses(rootElements) {\r\n\r\n    // walk through all processes that have not yet been drawn and draw them\r\n    // if they contain lanes with DI information.\r\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\r\n    var processes = filter(rootElements, function(e) {\r\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\r\n    });\r\n\r\n    processes.forEach(contextual(handleProcess));\r\n  }\r\n\r\n  function handleMessageFlow(messageFlow, context) {\r\n    visitIfDi(messageFlow, context);\r\n  }\r\n\r\n  function handleMessageFlows(messageFlows, context) {\r\n    forEach(messageFlows, contextual(handleMessageFlow, context));\r\n  }\r\n\r\n  function handleDataAssociation(association, context) {\r\n    visitIfDi(association, context);\r\n  }\r\n\r\n  function handleDataInput(dataInput, context) {\r\n    visitIfDi(dataInput, context);\r\n  }\r\n\r\n  function handleDataOutput(dataOutput, context) {\r\n    visitIfDi(dataOutput, context);\r\n  }\r\n\r\n  function handleArtifact(artifact, context) {\r\n\r\n    // bpmn:TextAnnotation\r\n    // bpmn:Group\r\n    // bpmn:Association\r\n\r\n    visitIfDi(artifact, context);\r\n  }\r\n\r\n  function handleArtifacts(artifacts, context) {\r\n\r\n    forEach(artifacts, function(e) {\r\n      if (is(e, 'bpmn:Association')) {\r\n        deferred.push(function() {\r\n          handleArtifact(e, context);\r\n        });\r\n      } else {\r\n        handleArtifact(e, context);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleIoSpecification(ioSpecification, context) {\r\n\r\n    if (!ioSpecification) {\r\n      return;\r\n    }\r\n\r\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\r\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\r\n  }\r\n\r\n  function handleSubProcess(subProcess, context) {\r\n    handleFlowElementsContainer(subProcess, context);\r\n    handleArtifacts(subProcess.artifacts, context);\r\n  }\r\n\r\n  function handleFlowNode(flowNode, context) {\r\n    var childCtx = visitIfDi(flowNode, context);\r\n\r\n    if (is(flowNode, 'bpmn:SubProcess')) {\r\n      handleSubProcess(flowNode, childCtx || context);\r\n    }\r\n\r\n    if (is(flowNode, 'bpmn:Activity')) {\r\n      handleIoSpecification(flowNode.ioSpecification, context);\r\n    }\r\n\r\n    // defer handling of associations\r\n    // affected types:\r\n    //\r\n    //   * bpmn:Activity\r\n    //   * bpmn:ThrowEvent\r\n    //   * bpmn:CatchEvent\r\n    //\r\n    deferred.push(function() {\r\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\r\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\r\n    });\r\n  }\r\n\r\n  function handleSequenceFlow(sequenceFlow, context) {\r\n    visitIfDi(sequenceFlow, context);\r\n  }\r\n\r\n  function handleDataElement(dataObject, context) {\r\n    visitIfDi(dataObject, context);\r\n  }\r\n\r\n  function handleBoundaryEvent(dataObject, context) {\r\n    visitIfDi(dataObject, context);\r\n  }\r\n\r\n  function handleLane(lane, context) {\r\n    var newContext = visitIfDi(lane, context);\r\n\r\n    if (lane.childLaneSet) {\r\n      handleLaneSet(lane.childLaneSet, newContext || context);\r\n    }\r\n\r\n    wireFlowNodeRefs(lane);\r\n  }\r\n\r\n  function handleLaneSet(laneSet, context) {\r\n    forEach(laneSet.lanes, contextual(handleLane, context));\r\n  }\r\n\r\n  function handleLaneSets(laneSets, context) {\r\n    forEach(laneSets, contextual(handleLaneSet, context));\r\n  }\r\n\r\n  function handleFlowElementsContainer(container, context) {\r\n    if (container.laneSets) {\r\n      handleLaneSets(container.laneSets, context);\r\n    }\r\n\r\n    handleFlowElements(container.flowElements, context);\r\n  }\r\n\r\n  function handleFlowElements(flowElements, context) {\r\n    forEach(flowElements, function(e) {\r\n      if (is(e, 'bpmn:SequenceFlow')) {\r\n        deferred.push(function() {\r\n          handleSequenceFlow(e, context);\r\n        });\r\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\r\n        deferred.unshift(function() {\r\n          handleBoundaryEvent(e, context);\r\n        });\r\n      } else if (is(e, 'bpmn:FlowNode')) {\r\n        handleFlowNode(e, context);\r\n      } else if (is(e, 'bpmn:DataObject')) {\r\n        // SKIP (assume correct referencing via DataObjectReference)\r\n      } else if (is(e, 'bpmn:DataStoreReference')) {\r\n        handleDataElement(e, context);\r\n      } else if (is(e, 'bpmn:DataObjectReference')) {\r\n        handleDataElement(e, context);\r\n      } else {\r\n        logError(\r\n          translate('unrecognized flowElement {element} in context {context}', {\r\n            element: elementToString(e),\r\n            context: (context ? elementToString(context.businessObject) : 'null')\r\n          }),\r\n          { element: e, context: context }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleParticipant(participant, context) {\r\n    var newCtx = visitIfDi(participant, context);\r\n\r\n    var process = participant.processRef;\r\n    if (process) {\r\n      handleProcess(process, newCtx || context);\r\n    }\r\n  }\r\n\r\n  function handleCollaboration(collaboration) {\r\n\r\n    forEach(collaboration.participants, contextual(handleParticipant));\r\n\r\n    handleArtifacts(collaboration.artifacts);\r\n\r\n    // handle message flows latest in the process\r\n    deferred.push(function() {\r\n      handleMessageFlows(collaboration.messageFlows);\r\n    });\r\n  }\r\n\r\n\r\n  function wireFlowNodeRefs(lane) {\r\n    // wire the virtual flowNodeRefs <-> relationship\r\n    forEach(lane.flowNodeRef, function(flowNode) {\r\n      var lanes = flowNode.get('lanes');\r\n\r\n      if (lanes) {\r\n        lanes.push(lane);\r\n      }\r\n    });\r\n  }\r\n\r\n  ///// API ////////////////////////////////\r\n\r\n  return {\r\n    handleDefinitions: handleDefinitions\r\n  };\r\n}\r\n\r\nmodule.exports = BpmnTreeWalker;","'use strict';\r\n\r\nvar BpmnTreeWalker = require(89);\r\n\r\n\r\n/**\r\n * Import the definitions into a diagram.\r\n *\r\n * Errors and warnings are reported through the specified callback.\r\n *\r\n * @param  {Diagram} diagram\r\n * @param  {ModdleElement} definitions\r\n * @param  {Function} done the callback, invoked with (err, [ warning ]) once the import is done\r\n */\r\nfunction importBpmnDiagram(diagram, definitions, done) {\r\n\r\n  var importer = diagram.get('bpmnImporter'),\r\n      eventBus = diagram.get('eventBus'),\r\n      translate = diagram.get('translate');\r\n\r\n  var error,\r\n      warnings = [];\r\n\r\n  /**\r\n   * Walk the diagram semantically, importing (=drawing)\r\n   * all elements you encounter.\r\n   *\r\n   * @param {ModdleElement} definitions\r\n   */\r\n  function render(definitions) {\r\n\r\n    var visitor = {\r\n\r\n      root: function(element) {\r\n        return importer.add(element);\r\n      },\r\n\r\n      element: function(element, parentShape) {\r\n        return importer.add(element, parentShape);\r\n      },\r\n\r\n      error: function(message, context) {\r\n        warnings.push({ message: message, context: context });\r\n      }\r\n    };\r\n\r\n    var walker = new BpmnTreeWalker(visitor, translate);\r\n\r\n    // traverse BPMN 2.0 document model,\r\n    // starting at definitions\r\n    walker.handleDefinitions(definitions);\r\n  }\r\n\r\n  eventBus.fire('import.render.start', { definitions: definitions });\r\n\r\n  try {\r\n    render(definitions);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  eventBus.fire('import.render.complete', {\r\n    error: error,\r\n    warnings: warnings\r\n  });\r\n\r\n  done(error, warnings);\r\n}\r\n\r\nmodule.exports.importBpmnDiagram = importBpmnDiagram;","'use strict';\r\n\r\nmodule.exports.elementToString = function(e) {\r\n  if (!e) {\r\n    return '<null>';\r\n  }\r\n\r\n  return '<' + e.$type + (e.id ? ' id=\"' + e.id : '') + '\" />';\r\n};","module.exports = {\r\n  __depends__: [\r\n    require(248)\r\n  ],\r\n  bpmnImporter: [ 'type', require(88) ]\r\n};","'use strict';\r\n\r\nvar is = require(95).is,\r\n    getBusinessObject = require(95).getBusinessObject;\r\n\r\nvar forEach = require(303);\r\n\r\nmodule.exports.isExpanded = function(element) {\r\n\r\n  if (is(element, 'bpmn:CallActivity')) {\r\n    return false;\r\n  }\r\n\r\n  if (is(element, 'bpmn:SubProcess')) {\r\n    return !!getBusinessObject(element).di.isExpanded;\r\n  }\r\n\r\n  if (is(element, 'bpmn:Participant')) {\r\n    return !!getBusinessObject(element).processRef;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nmodule.exports.isInterrupting = function(element) {\r\n  return element && getBusinessObject(element).isInterrupting !== false;\r\n};\r\n\r\nmodule.exports.isEventSubProcess = function(element) {\r\n  return element && !!getBusinessObject(element).triggeredByEvent;\r\n};\r\n\r\nfunction hasEventDefinition(element, eventType) {\r\n  var bo = getBusinessObject(element),\r\n      hasEventDefinition = false;\r\n\r\n  if (bo.eventDefinitions) {\r\n    forEach(bo.eventDefinitions, function(event) {\r\n      if (is(event, eventType)) {\r\n        hasEventDefinition = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  return hasEventDefinition;\r\n}\r\n\r\nmodule.exports.hasEventDefinition = hasEventDefinition;\r\n\r\nmodule.exports.hasErrorEventDefinition = function(element) {\r\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\r\n};\r\n\r\nmodule.exports.hasEscalationEventDefinition = function(element) {\r\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\r\n};\r\n\r\nmodule.exports.hasCompensateEventDefinition = function(element) {\r\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\nvar is = require(95).is;\r\n\r\nvar DEFAULT_LABEL_SIZE = module.exports.DEFAULT_LABEL_SIZE = {\r\n  width: 90,\r\n  height: 20\r\n};\r\n\r\nvar FLOW_LABEL_INDENT = module.exports.FLOW_LABEL_INDENT = 15;\r\n\r\n\r\n/**\r\n * Returns true if the given semantic has an external label\r\n *\r\n * @param {BpmnElement} semantic\r\n * @return {Boolean} true if has label\r\n */\r\nmodule.exports.hasExternalLabel = function(semantic) {\r\n  return is(semantic, 'bpmn:Event') ||\r\n         is(semantic, 'bpmn:Gateway') ||\r\n         is(semantic, 'bpmn:DataStoreReference') ||\r\n         is(semantic, 'bpmn:DataObjectReference') ||\r\n         is(semantic, 'bpmn:SequenceFlow') ||\r\n         is(semantic, 'bpmn:MessageFlow');\r\n};\r\n\r\n/**\r\n * Get the position for sequence flow labels\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @return {Point} the label position\r\n */\r\nfunction getFlowLabelPosition(waypoints) {\r\n\r\n  // get the waypoints mid\r\n  var mid = waypoints.length / 2 - 1;\r\n\r\n  var first = waypoints[Math.floor(mid)];\r\n  var second = waypoints[Math.ceil(mid + 0.01)];\r\n\r\n  // get position\r\n  var position = getWaypointsMid(waypoints);\r\n\r\n  // calculate angle\r\n  var angle = Math.atan( (second.y - first.y) / (second.x - first.x) );\r\n\r\n  var x = position.x,\r\n      y = position.y;\r\n\r\n  if ( Math.abs(angle) < Math.PI / 2 ) {\r\n    y -= FLOW_LABEL_INDENT;\r\n  } else {\r\n    x += FLOW_LABEL_INDENT;\r\n  }\r\n\r\n  return { x: x, y: y };\r\n}\r\n\r\nmodule.exports.getFlowLabelPosition = getFlowLabelPosition;\r\n\r\n/**\r\n * Get the middle of a number of waypoints\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @return {Point} the mid point\r\n */\r\nfunction getWaypointsMid(waypoints) {\r\n\r\n  var mid = waypoints.length / 2 - 1;\r\n\r\n  var first = waypoints[Math.floor(mid)];\r\n  var second = waypoints[Math.ceil(mid + 0.01)];\r\n\r\n  return {\r\n    x: first.x + (second.x - first.x) / 2,\r\n    y: first.y + (second.y - first.y) / 2\r\n  };\r\n}\r\n\r\nmodule.exports.getWaypointsMid = getWaypointsMid;\r\n\r\n\r\nfunction getExternalLabelMid(element) {\r\n\r\n  if (element.waypoints) {\r\n    return getFlowLabelPosition(element.waypoints);\r\n  } else {\r\n    return {\r\n      x: element.x + element.width / 2,\r\n      y: element.y + element.height + DEFAULT_LABEL_SIZE.height / 2\r\n    };\r\n  }\r\n}\r\n\r\nmodule.exports.getExternalLabelMid = getExternalLabelMid;\r\n\r\n\r\n/**\r\n * Returns the bounds of an elements label, parsed from the elements DI or\r\n * generated from its bounds.\r\n *\r\n * @param {BpmnElement} semantic\r\n * @param {djs.model.Base} element\r\n */\r\nmodule.exports.getExternalLabelBounds = function(semantic, element) {\r\n\r\n  var mid,\r\n      size,\r\n      bounds,\r\n      di = semantic.di,\r\n      label = di.label;\r\n\r\n  if (label && label.bounds) {\r\n    bounds = label.bounds;\r\n\r\n    size = {\r\n      width: Math.max(DEFAULT_LABEL_SIZE.width, bounds.width),\r\n      height: bounds.height\r\n    };\r\n\r\n    mid = {\r\n      x: bounds.x + bounds.width / 2,\r\n      y: bounds.y + bounds.height / 2\r\n    };\r\n  } else {\r\n\r\n    mid = getExternalLabelMid(element);\r\n\r\n    size = DEFAULT_LABEL_SIZE;\r\n  }\r\n\r\n  return assign({\r\n    x: mid.x - size.width / 2,\r\n    y: mid.y - size.height / 2\r\n  }, size);\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Is an element of the given BPMN type?\r\n *\r\n * @param  {djs.model.Base|ModdleElement} element\r\n * @param  {String} type\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction is(element, type) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\r\n}\r\n\r\nmodule.exports.is = is;\r\n\r\n\r\n/**\r\n * Return the business object for a given element.\r\n *\r\n * @param  {djs.model.Base|ModdleElement} element\r\n *\r\n * @return {ModdleElement}\r\n */\r\nfunction getBusinessObject(element) {\r\n  return (element && element.businessObject) || element;\r\n}\r\n\r\nmodule.exports.getBusinessObject = getBusinessObject;\r\n","/**\r\n * This file must not be changed or exchanged.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n\r\n'use strict';\r\n\r\nvar domify = require(449);\r\n\r\nvar domDelegate = require(448);\r\n\r\n/* jshint -W101 */\r\n\r\n// inlined ../resources/bpmnjs.png\r\nvar logoData = module.exports.BPMNIO_LOGO = 'iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAMAAADypuvZAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAADBQTFRFiMte9PrwldFwfcZPqtqN0+zEyOe1XLgjvuKncsJAZ70y6fXh3vDT////UrQV////G2zN+AAAABB0Uk5T////////////////////AOAjXRkAAAHDSURBVHjavJZJkoUgDEBJmAX8979tM8u3E6x20VlYJfFFMoL4vBDxATxZcakIOJTWSmxvKWVIkJ8jHvlRv1F2LFrVISCZI+tCtQx+XfewgVTfyY3plPiQEAzI3zWy+kR6NBhFBYeBuscJLOUuA2WVLpCjVIaFzrNQZArxAZKUQm6gsj37L9Cb7dnIBUKxENaaMJQqMpDXvSL+ktxdGRm2IsKgJGGPg7atwUG5CcFUEuSv+CwQqizTrvDTNXdMU2bMiDWZd8d7QIySWVRsb2vBBioxOFt4OinPBapL+neAb5KL5IJ8szOza2/DYoipUCx+CjO0Bpsv0V6mktNZ+k8rlABlWG0FrOpKYVo8DT3dBeLEjUBAj7moDogVii7nSS9QzZnFcOVBp1g2PyBQ3Vr5aIapN91VJy33HTJLC1iX2FY6F8gRdaAeIEfVONgtFCzZTmoLEdOjBDfsIOA6128gw3eu1shAajdZNAORxuQDJN5A5PbEG6gNIu24QJD5iNyRMZIr6bsHbCtCU/OaOaSvgkUyDMdDa1BXGf5HJ1To+/Ym6mCKT02Y+/Sa126ZKyd3jxhzpc1r8zVL6YM1Qy/kR4ABAFJ6iQUnivhAAAAAAElFTkSuQmCC';\r\n\r\n/* jshint +W101 */\r\n\r\n\r\nfunction css(attrs) {\r\n  return attrs.join(';');\r\n}\r\n\r\nvar LIGHTBOX_STYLES = css([\r\n  'z-index: 1001',\r\n  'position: fixed',\r\n  'top: 0',\r\n  'left: 0',\r\n  'right: 0',\r\n  'bottom: 0'\r\n]);\r\n\r\nvar BACKDROP_STYLES = css([\r\n  'width: 100%',\r\n  'height: 100%',\r\n  'background: rgba(0,0,0,0.2)'\r\n]);\r\n\r\nvar NOTICE_STYLES = css([\r\n  'position: absolute',\r\n  'left: 50%',\r\n  'top: 40%',\r\n  'margin: 0 -130px',\r\n  'width: 260px',\r\n  'padding: 10px',\r\n  'background: white',\r\n  'border: solid 1px #AAA',\r\n  'border-radius: 3px',\r\n  'font-family: Helvetica, Arial, sans-serif',\r\n  'font-size: 14px',\r\n  'line-height: 1.2em'\r\n]);\r\n\r\nvar LIGHTBOX_MARKUP =\r\n  '<div class=\"bjs-powered-by-lightbox\" style=\"' + LIGHTBOX_STYLES + '\">' +\r\n    '<div class=\"backdrop\" style=\"' + BACKDROP_STYLES + '\"></div>' +\r\n    '<div class=\"notice\" style=\"' + NOTICE_STYLES + '\">' +\r\n      '<a href=\"http://bpmn.io\" target=\"_blank\" style=\"float: left; margin-right: 10px\">' +\r\n        '<img src=\"data:image/png;base64,'+ logoData +'\">' +\r\n      '</a>' +\r\n      'Web-based tooling for BPMN, DMN and CMMN diagrams ' +\r\n      'powered by <a href=\"http://bpmn.io\" target=\"_blank\">bpmn.io</a>.' +\r\n    '</div>' +\r\n  '</div>';\r\n\r\n\r\nvar lightbox;\r\n\r\nfunction open() {\r\n\r\n  if (!lightbox) {\r\n    lightbox = domify(LIGHTBOX_MARKUP);\r\n\r\n    domDelegate.bind(lightbox, '.backdrop', 'click', function(event) {\r\n      document.body.removeChild(lightbox);\r\n    });\r\n  }\r\n\r\n  document.body.appendChild(lightbox);\r\n}\r\n\r\nmodule.exports.open = open;","'use strict';\r\n\r\nvar forEach = require(303),\r\n    filter = require(301),\r\n    any = require(299),\r\n    sort = require(310),\r\n    isArray = require(422);\r\n\r\nvar IGNORED_PROPERTIES = require(98).IGNORED_PROPERTIES;\r\n\r\nfunction isAllowedIn(extProp, type) {\r\n  var allowedIn = extProp.meta.allowedIn;\r\n\r\n  // '*' is a wildcard, which means any element is allowed to use this property\r\n  if (allowedIn.length === 1 && allowedIn[0] === '*') {\r\n    return true;\r\n  }\r\n\r\n  return allowedIn.indexOf(type) !== -1;\r\n}\r\n\r\nfunction isType(element, types) {\r\n  return any(types, function(type) {\r\n    return typeof element === type;\r\n  });\r\n}\r\n\r\n/**\r\n * A bpmn properties cloning interface\r\n *\r\n */\r\nfunction ModelCloneHelper(eventBus) {\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nmodule.exports = ModelCloneHelper;\r\n\r\n\r\nModelCloneHelper.prototype.clone = function(refElement, newElement, properties) {\r\n  // hasNestedProperty: property allows us to avoid ending up with empty (xml) tags\r\n  // f.ex: if extensionElements.values is empty, don't set it\r\n  var context = {\r\n    newElement: newElement,\r\n    hasNestedProperty: false\r\n  };\r\n\r\n  // we want the extensionElements to be cloned last\r\n  // so that they can check certain properties\r\n  properties = sort(properties, function(prop) {\r\n    return prop === 'bpmn:extensionElements';\r\n  });\r\n\r\n  forEach(properties, function(propName) {\r\n    var refElementProp = refElement.get(propName),\r\n        newElementProp = newElement.get(propName),\r\n        propDescriptor = newElement.$model.getPropertyDescriptor(newElement, propName),\r\n        newProperty, name;\r\n\r\n    // we're not interested in cloning:\r\n    // - same values from simple types\r\n    // - cloning id's\r\n    // - cloning reference elements\r\n    if (newElementProp === refElementProp ||\r\n       (propDescriptor && (propDescriptor.isId || propDescriptor.isReference))) {\r\n      return;\r\n    }\r\n\r\n    // if the property is of type 'boolean', 'string', 'number' or 'null', just set it\r\n    if (isType(refElementProp, [ 'boolean', 'string', 'number' ]) || refElementProp === null) {\r\n      newElement.set(propName, refElementProp);\r\n\r\n      return;\r\n    }\r\n\r\n    if (isArray(refElementProp)) {\r\n\r\n      forEach(refElementProp, function(extElement) {\r\n        var newProp;\r\n\r\n        context.refTopLevelProperty = extElement;\r\n\r\n        newProp = this._deepClone(extElement, context);\r\n\r\n        if (context.hasNestedProperty) {\r\n          newProp.$parent = newElement;\r\n\r\n          newElementProp.push(newProp);\r\n        }\r\n\r\n        context.hasNestedProperty = false;\r\n      }, this);\r\n\r\n    } else {\r\n      name = propName.replace(/bpmn:/, '');\r\n\r\n      context.refTopLevelProperty = refElementProp;\r\n\r\n      newProperty = this._deepClone(refElementProp, context);\r\n\r\n      if (context.hasNestedProperty) {\r\n        newElement[name] = newProperty;\r\n      }\r\n\r\n      context.hasNestedProperty = false;\r\n    }\r\n  }, this);\r\n\r\n  return newElement;\r\n};\r\n\r\nModelCloneHelper.prototype._deepClone = function _deepClone(propertyElement, context) {\r\n  var eventBus = this._eventBus;\r\n\r\n  var newProp = propertyElement.$model.create(propertyElement.$type);\r\n\r\n  var properties = filter(Object.keys(propertyElement), function(prop) {\r\n    var descriptor = newProp.$model.getPropertyDescriptor(newProp, prop);\r\n\r\n    if (descriptor && (descriptor.isId || descriptor.isReference)) {\r\n      return false;\r\n    }\r\n\r\n    // we need to make sure we don't clone certain properties\r\n    // which we cannot easily know if they hold references or not\r\n    if (IGNORED_PROPERTIES.indexOf(prop) !== -1) {\r\n      return false;\r\n    }\r\n\r\n    // make sure we don't copy the type\r\n    return prop !== '$type';\r\n  });\r\n\r\n  if (!properties.length) {\r\n    context.hasNestedProperty = true;\r\n  }\r\n\r\n  forEach(properties, function(propName) {\r\n    // check if the propertyElement has this property defined\r\n    if (propertyElement[propName] !== undefined &&\r\n       (propertyElement[propName].$type || isArray(propertyElement[propName]))) {\r\n\r\n      if (isArray(propertyElement[propName])) {\r\n        newProp[propName] = [];\r\n\r\n        forEach(propertyElement[propName], function(property) {\r\n          var extProp = propertyElement.$model.getTypeDescriptor(property.$type),\r\n              newDeepProp;\r\n\r\n          // we're not going to copy undefined types\r\n          if (!extProp) {\r\n            return;\r\n          }\r\n\r\n          var canClone = eventBus.fire('property.clone', {\r\n            newElement: context.newElement,\r\n            refTopLevelProperty: context.refTopLevelProperty,\r\n            propertyDescriptor: extProp\r\n          });\r\n\r\n          if (!canClone) {\r\n            // if can clone is 'undefined' or 'false'\r\n            // check for the meta information if it is allowed\r\n            if (propertyElement.$type === 'bpmn:ExtensionElements' &&\r\n                extProp.meta && extProp.meta.allowedIn &&\r\n                !isAllowedIn(extProp, context.newElement.$type)) {\r\n              return false;\r\n            }\r\n          }\r\n\r\n          newDeepProp = this._deepClone(property, context);\r\n\r\n          newDeepProp.$parent = newProp;\r\n\r\n          if (!newProp[propName]) {\r\n            newProp[propName] = [];\r\n          }\r\n\r\n          context.hasNestedProperty = true;\r\n\r\n          newProp[propName].push(newDeepProp);\r\n        }, this);\r\n\r\n      } else if (propertyElement[propName].$type) {\r\n        newProp[propName] = this._deepClone(propertyElement[propName], context);\r\n\r\n        if (newProp[propName]) {\r\n          context.hasNestedProperty = true;\r\n\r\n          newProp[propName].$parent = newProp;\r\n        }\r\n      }\r\n    } else {\r\n      context.hasNestedProperty = true;\r\n\r\n      // just assign directly if it's a value\r\n      newProp[propName] = propertyElement[propName];\r\n    }\r\n  }, this);\r\n\r\n  return newProp;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\n/**\r\n * These are the properties that should be ignored when cloning elements.\r\n *\r\n * @type {Array}\r\n */\r\nmodule.exports.IGNORED_PROPERTIES = [\r\n  'lanes',\r\n  'incoming',\r\n  'outgoing',\r\n  'artifacts',\r\n  'default',\r\n  'flowElements'\r\n];\r\n\r\n\r\nfunction getProperties(descriptor, keepDefault) {\r\n  var properties = [];\r\n\r\n  forEach(descriptor.properties, function(property) {\r\n\r\n    if (keepDefault && property.default) {\r\n      return;\r\n    }\r\n\r\n    properties.push(property.ns.name);\r\n  });\r\n\r\n  return properties;\r\n}\r\n\r\nmodule.exports.getProperties = getProperties;\r\n","module.exports = require(101);","'use strict';\n\nvar isString = require(428),\n    isFunction = require(423),\n    assign = require(431);\n\nvar Moddle = require(457),\n    XmlReader = require(455),\n    XmlWriter = require(456);\n\n/**\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\n *\n * @class BpmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\nfunction BpmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\n\nBpmnModdle.prototype = Object.create(Moddle.prototype);\n\nmodule.exports = BpmnModdle;\n\n\n/**\n * Instantiates a BPMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n * @param {Function} done       callback that is invoked with (err, result, parseContext)\n *                              once the import completes\n */\nBpmnModdle.prototype.fromXML = function(xmlStr, typeName, options, done) {\n\n  if (!isString(typeName)) {\n    done = options;\n    options = typeName;\n    typeName = 'bpmn:Definitions';\n  }\n\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var reader = new XmlReader(assign({ model: this, lax: true }, options));\n  var rootHandler = reader.handler(typeName);\n\n  reader.fromXML(xmlStr, rootHandler, done);\n};\n\n\n/**\n * Serializes a BPMN 2.0 object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n * @param {Function} done       callback invoked with (err, xmlStr) once the import completes\n */\nBpmnModdle.prototype.toXML = function(element, options, done) {\n\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var writer = new XmlWriter(options);\n  try {\n    var result = writer.toXML(element);\n    done(null, result);\n  } catch (e) {\n    done(e);\n  }\n};\n","'use strict';\n\nvar assign = require(431);\n\nvar BpmnModdle = require(100);\n\nvar packages = {\n  bpmn: require(103),\n  bpmndi: require(104),\n  dc: require(105),\n  di: require(106),\n  bioc: require(102)\n};\n\nmodule.exports = function(additionalPackages, options) {\n  return new BpmnModdle(assign({}, packages, additionalPackages), options);\n};\n","module.exports={\r\n  \"name\": \"bpmn.io colors for BPMN\",\r\n  \"uri\": \"http://bpmn.io/schema/bpmn/biocolor/1.0\",\r\n  \"prefix\": \"bioc\",\r\n  \"types\": [\r\n    {\r\n      \"name\": \"ColoredShape\",\r\n      \"extends\": [ \"bpmndi:BPMNShape\" ],\r\n      \"properties\": [\r\n        {\r\n          \"name\": \"stroke\",\r\n          \"isAttr\": true,\r\n          \"type\": \"String\"\r\n        },\r\n        {\r\n          \"name\": \"fill\",\r\n          \"isAttr\": true,\r\n          \"type\": \"String\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"ColoredEdge\",\r\n      \"extends\": [ \"bpmndi:BPMNEdge\" ],\r\n      \"properties\": [\r\n        {\r\n          \"name\": \"stroke\",\r\n          \"isAttr\": true,\r\n          \"type\": \"String\"\r\n        },\r\n        {\r\n          \"name\": \"fill\",\r\n          \"isAttr\": true,\r\n          \"type\": \"String\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"emumerations\": [],\r\n  \"associations\": []\r\n}\r\n","module.exports={\n  \"name\": \"BPMN20\",\n  \"uri\": \"http://www.omg.org/spec/BPMN/20100524/MODEL\",\n  \"associations\": [],\n  \"types\": [\n    {\n      \"name\": \"Interface\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"operations\",\n          \"type\": \"Operation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"implementationRef\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Operation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"inMessageRef\",\n          \"type\": \"Message\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outMessageRef\",\n          \"type\": \"Message\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"errorRef\",\n          \"type\": \"Error\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"implementationRef\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"EndPoint\",\n      \"superClass\": [\n        \"RootElement\"\n      ]\n    },\n    {\n      \"name\": \"Auditing\",\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"GlobalTask\",\n      \"superClass\": [\n        \"CallableElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"resources\",\n          \"type\": \"ResourceRole\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Monitoring\",\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"Performer\",\n      \"superClass\": [\n        \"ResourceRole\"\n      ]\n    },\n    {\n      \"name\": \"Process\",\n      \"superClass\": [\n        \"FlowElementsContainer\",\n        \"CallableElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"processType\",\n          \"type\": \"ProcessType\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isClosed\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"auditing\",\n          \"type\": \"Auditing\"\n        },\n        {\n          \"name\": \"monitoring\",\n          \"type\": \"Monitoring\"\n        },\n        {\n          \"name\": \"properties\",\n          \"type\": \"Property\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"laneSets\",\n          \"type\": \"LaneSet\",\n          \"isMany\": true,\n          \"replaces\": \"FlowElementsContainer#laneSets\"\n        },\n        {\n          \"name\": \"flowElements\",\n          \"type\": \"FlowElement\",\n          \"isMany\": true,\n          \"replaces\": \"FlowElementsContainer#flowElements\"\n        },\n        {\n          \"name\": \"artifacts\",\n          \"type\": \"Artifact\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"resources\",\n          \"type\": \"ResourceRole\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"correlationSubscriptions\",\n          \"type\": \"CorrelationSubscription\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"supports\",\n          \"type\": \"Process\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"definitionalCollaborationRef\",\n          \"type\": \"Collaboration\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"isExecutable\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        }\n      ]\n    },\n    {\n      \"name\": \"LaneSet\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"lanes\",\n          \"type\": \"Lane\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Lane\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"partitionElementRef\",\n          \"type\": \"BaseElement\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"partitionElement\",\n          \"type\": \"BaseElement\"\n        },\n        {\n          \"name\": \"flowNodeRef\",\n          \"type\": \"FlowNode\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"childLaneSet\",\n          \"type\": \"LaneSet\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"GlobalManualTask\",\n      \"superClass\": [\n        \"GlobalTask\"\n      ]\n    },\n    {\n      \"name\": \"ManualTask\",\n      \"superClass\": [\n        \"Task\"\n      ]\n    },\n    {\n      \"name\": \"UserTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"renderings\",\n          \"type\": \"Rendering\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Rendering\",\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"HumanPerformer\",\n      \"superClass\": [\n        \"Performer\"\n      ]\n    },\n    {\n      \"name\": \"PotentialOwner\",\n      \"superClass\": [\n        \"HumanPerformer\"\n      ]\n    },\n    {\n      \"name\": \"GlobalUserTask\",\n      \"superClass\": [\n        \"GlobalTask\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"renderings\",\n          \"type\": \"Rendering\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Gateway\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"FlowNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"gatewayDirection\",\n          \"type\": \"GatewayDirection\",\n          \"default\": \"Unspecified\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"EventBasedGateway\",\n      \"superClass\": [\n        \"Gateway\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"instantiate\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"eventGatewayType\",\n          \"type\": \"EventBasedGatewayType\",\n          \"isAttr\": true,\n          \"default\": \"Exclusive\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ComplexGateway\",\n      \"superClass\": [\n        \"Gateway\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"activationCondition\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"default\",\n          \"type\": \"SequenceFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ExclusiveGateway\",\n      \"superClass\": [\n        \"Gateway\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"default\",\n          \"type\": \"SequenceFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"InclusiveGateway\",\n      \"superClass\": [\n        \"Gateway\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"default\",\n          \"type\": \"SequenceFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ParallelGateway\",\n      \"superClass\": [\n        \"Gateway\"\n      ]\n    },\n    {\n      \"name\": \"RootElement\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"Relationship\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"type\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"direction\",\n          \"type\": \"RelationshipDirection\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"source\",\n          \"isMany\": true,\n          \"isReference\": true,\n          \"type\": \"Element\"\n        },\n        {\n          \"name\": \"target\",\n          \"isMany\": true,\n          \"isReference\": true,\n          \"type\": \"Element\"\n        }\n      ]\n    },\n    {\n      \"name\": \"BaseElement\",\n      \"isAbstract\": true,\n      \"properties\": [\n        {\n          \"name\": \"id\",\n          \"isAttr\": true,\n          \"type\": \"String\",\n          \"isId\": true\n        },\n        {\n          \"name\": \"documentation\",\n          \"type\": \"Documentation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"extensionDefinitions\",\n          \"type\": \"ExtensionDefinition\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"extensionElements\",\n          \"type\": \"ExtensionElements\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Extension\",\n      \"properties\": [\n        {\n          \"name\": \"mustUnderstand\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"definition\",\n          \"type\": \"ExtensionDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ExtensionDefinition\",\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"extensionAttributeDefinitions\",\n          \"type\": \"ExtensionAttributeDefinition\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ExtensionAttributeDefinition\",\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"type\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"isReference\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"extensionDefinition\",\n          \"type\": \"ExtensionDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ExtensionElements\",\n      \"properties\": [\n        {\n          \"name\": \"valueRef\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"Element\"\n        },\n        {\n          \"name\": \"values\",\n          \"type\": \"Element\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"extensionAttributeDefinition\",\n          \"type\": \"ExtensionAttributeDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Documentation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"text\",\n          \"type\": \"String\",\n          \"isBody\": true\n        },\n        {\n          \"name\": \"textFormat\",\n          \"default\": \"text/plain\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Event\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"FlowNode\",\n        \"InteractionNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"properties\",\n          \"type\": \"Property\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"IntermediateCatchEvent\",\n      \"superClass\": [\n        \"CatchEvent\"\n      ]\n    },\n    {\n      \"name\": \"IntermediateThrowEvent\",\n      \"superClass\": [\n        \"ThrowEvent\"\n      ]\n    },\n    {\n      \"name\": \"EndEvent\",\n      \"superClass\": [\n        \"ThrowEvent\"\n      ]\n    },\n    {\n      \"name\": \"StartEvent\",\n      \"superClass\": [\n        \"CatchEvent\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"isInterrupting\",\n          \"default\": true,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ThrowEvent\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Event\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataInputs\",\n          \"type\": \"DataInput\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"dataInputAssociations\",\n          \"type\": \"DataInputAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"inputSet\",\n          \"type\": \"InputSet\"\n        },\n        {\n          \"name\": \"eventDefinitions\",\n          \"type\": \"EventDefinition\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"eventDefinitionRef\",\n          \"type\": \"EventDefinition\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CatchEvent\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Event\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"parallelMultiple\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\",\n          \"default\": false\n        },\n        {\n          \"name\": \"dataOutputs\",\n          \"type\": \"DataOutput\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"dataOutputAssociations\",\n          \"type\": \"DataOutputAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"outputSet\",\n          \"type\": \"OutputSet\"\n        },\n        {\n          \"name\": \"eventDefinitions\",\n          \"type\": \"EventDefinition\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"eventDefinitionRef\",\n          \"type\": \"EventDefinition\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"BoundaryEvent\",\n      \"superClass\": [\n        \"CatchEvent\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"cancelActivity\",\n          \"default\": true,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"attachedToRef\",\n          \"type\": \"Activity\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"EventDefinition\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"RootElement\"\n      ]\n    },\n    {\n      \"name\": \"CancelEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ]\n    },\n    {\n      \"name\": \"ErrorEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"errorRef\",\n          \"type\": \"Error\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"TerminateEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ]\n    },\n    {\n      \"name\": \"EscalationEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"escalationRef\",\n          \"type\": \"Escalation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Escalation\",\n      \"properties\": [\n        {\n          \"name\": \"structureRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"escalationCode\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ],\n      \"superClass\": [\n        \"RootElement\"\n      ]\n    },\n    {\n      \"name\": \"CompensateEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"waitForCompletion\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"activityRef\",\n          \"type\": \"Activity\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"TimerEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"timeDate\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"timeCycle\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"timeDuration\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"LinkEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"target\",\n          \"type\": \"LinkEventDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"source\",\n          \"type\": \"LinkEventDefinition\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"MessageEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"messageRef\",\n          \"type\": \"Message\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"operationRef\",\n          \"type\": \"Operation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ConditionalEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"condition\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"SignalEventDefinition\",\n      \"superClass\": [\n        \"EventDefinition\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"signalRef\",\n          \"type\": \"Signal\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Signal\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"structureRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ImplicitThrowEvent\",\n      \"superClass\": [\n        \"ThrowEvent\"\n      ]\n    },\n    {\n      \"name\": \"DataState\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ItemAwareElement\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"itemSubjectRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"dataState\",\n          \"type\": \"DataState\"\n        }\n      ]\n    },\n    {\n      \"name\": \"DataAssociation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"assignment\",\n          \"type\": \"Assignment\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"sourceRef\",\n          \"type\": \"ItemAwareElement\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"targetRef\",\n          \"type\": \"ItemAwareElement\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"transformation\",\n          \"type\": \"FormalExpression\",\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"DataInput\",\n      \"superClass\": [\n        \"ItemAwareElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"isCollection\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"inputSetRef\",\n          \"type\": \"InputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"inputSetWithOptional\",\n          \"type\": \"InputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"inputSetWithWhileExecuting\",\n          \"type\": \"InputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"DataOutput\",\n      \"superClass\": [\n        \"ItemAwareElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"isCollection\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"outputSetRef\",\n          \"type\": \"OutputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outputSetWithOptional\",\n          \"type\": \"OutputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outputSetWithWhileExecuting\",\n          \"type\": \"OutputSet\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"InputSet\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"dataInputRefs\",\n          \"type\": \"DataInput\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"optionalInputRefs\",\n          \"type\": \"DataInput\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"whileExecutingInputRefs\",\n          \"type\": \"DataInput\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outputSetRefs\",\n          \"type\": \"OutputSet\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"OutputSet\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataOutputRefs\",\n          \"type\": \"DataOutput\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"inputSetRefs\",\n          \"type\": \"InputSet\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"optionalOutputRefs\",\n          \"type\": \"DataOutput\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"whileExecutingOutputRefs\",\n          \"type\": \"DataOutput\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Property\",\n      \"superClass\": [\n        \"ItemAwareElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"DataInputAssociation\",\n      \"superClass\": [\n        \"DataAssociation\"\n      ]\n    },\n    {\n      \"name\": \"DataOutputAssociation\",\n      \"superClass\": [\n        \"DataAssociation\"\n      ]\n    },\n    {\n      \"name\": \"InputOutputSpecification\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataInputs\",\n          \"type\": \"DataInput\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"dataOutputs\",\n          \"type\": \"DataOutput\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"inputSets\",\n          \"type\": \"InputSet\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"outputSets\",\n          \"type\": \"OutputSet\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"DataObject\",\n      \"superClass\": [\n        \"FlowElement\",\n        \"ItemAwareElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"isCollection\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        }\n      ]\n    },\n    {\n      \"name\": \"InputOutputBinding\",\n      \"properties\": [\n        {\n          \"name\": \"inputDataRef\",\n          \"type\": \"InputSet\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outputDataRef\",\n          \"type\": \"OutputSet\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"operationRef\",\n          \"type\": \"Operation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Assignment\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"from\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"to\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"DataStore\",\n      \"superClass\": [\n        \"RootElement\",\n        \"ItemAwareElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"capacity\",\n          \"isAttr\": true,\n          \"type\": \"Integer\"\n        },\n        {\n          \"name\": \"isUnlimited\",\n          \"default\": true,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        }\n      ]\n    },\n    {\n      \"name\": \"DataStoreReference\",\n      \"superClass\": [\n        \"ItemAwareElement\",\n        \"FlowElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataStoreRef\",\n          \"type\": \"DataStore\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"DataObjectReference\",\n      \"superClass\": [\n        \"ItemAwareElement\",\n        \"FlowElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataObjectRef\",\n          \"type\": \"DataObject\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ConversationLink\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"sourceRef\",\n          \"type\": \"InteractionNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"targetRef\",\n          \"type\": \"InteractionNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ConversationAssociation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"innerConversationNodeRef\",\n          \"type\": \"ConversationNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outerConversationNodeRef\",\n          \"type\": \"ConversationNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CallConversation\",\n      \"superClass\": [\n        \"ConversationNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"calledCollaborationRef\",\n          \"type\": \"Collaboration\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"participantAssociations\",\n          \"type\": \"ParticipantAssociation\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Conversation\",\n      \"superClass\": [\n        \"ConversationNode\"\n      ]\n    },\n    {\n      \"name\": \"SubConversation\",\n      \"superClass\": [\n        \"ConversationNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"conversationNodes\",\n          \"type\": \"ConversationNode\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ConversationNode\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"InteractionNode\",\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"participantRefs\",\n          \"type\": \"Participant\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"messageFlowRefs\",\n          \"type\": \"MessageFlow\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"correlationKeys\",\n          \"type\": \"CorrelationKey\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"GlobalConversation\",\n      \"superClass\": [\n        \"Collaboration\"\n      ]\n    },\n    {\n      \"name\": \"PartnerEntity\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"participantRef\",\n          \"type\": \"Participant\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"PartnerRole\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"participantRef\",\n          \"type\": \"Participant\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CorrelationProperty\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"correlationPropertyRetrievalExpression\",\n          \"type\": \"CorrelationPropertyRetrievalExpression\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"type\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Error\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"structureRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"errorCode\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"CorrelationKey\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"correlationPropertyRef\",\n          \"type\": \"CorrelationProperty\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Expression\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"isAbstract\": false,\n      \"properties\": [\n        {\n          \"name\": \"body\",\n          \"type\": \"String\",\n          \"isBody\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"FormalExpression\",\n      \"superClass\": [\n        \"Expression\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"language\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"evaluatesToTypeRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Message\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"itemRef\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ItemDefinition\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"itemKind\",\n          \"type\": \"ItemKind\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"structureRef\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isCollection\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"import\",\n          \"type\": \"Import\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"FlowElement\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"auditing\",\n          \"type\": \"Auditing\"\n        },\n        {\n          \"name\": \"monitoring\",\n          \"type\": \"Monitoring\"\n        },\n        {\n          \"name\": \"categoryValueRef\",\n          \"type\": \"CategoryValue\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"SequenceFlow\",\n      \"superClass\": [\n        \"FlowElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"isImmediate\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"conditionExpression\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"sourceRef\",\n          \"type\": \"FlowNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"targetRef\",\n          \"type\": \"FlowNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"FlowElementsContainer\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"laneSets\",\n          \"type\": \"LaneSet\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"flowElements\",\n          \"type\": \"FlowElement\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CallableElement\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"ioSpecification\",\n          \"type\": \"InputOutputSpecification\",\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        },\n        {\n          \"name\": \"supportedInterfaceRef\",\n          \"type\": \"Interface\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"ioBinding\",\n          \"type\": \"InputOutputBinding\",\n          \"isMany\": true,\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"FlowNode\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"FlowElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"incoming\",\n          \"type\": \"SequenceFlow\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outgoing\",\n          \"type\": \"SequenceFlow\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"lanes\",\n          \"type\": \"Lane\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CorrelationPropertyRetrievalExpression\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"messagePath\",\n          \"type\": \"FormalExpression\"\n        },\n        {\n          \"name\": \"messageRef\",\n          \"type\": \"Message\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CorrelationPropertyBinding\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"dataPath\",\n          \"type\": \"FormalExpression\"\n        },\n        {\n          \"name\": \"correlationPropertyRef\",\n          \"type\": \"CorrelationProperty\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Resource\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"resourceParameters\",\n          \"type\": \"ResourceParameter\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ResourceParameter\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"isRequired\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"type\",\n          \"type\": \"ItemDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CorrelationSubscription\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"correlationKeyRef\",\n          \"type\": \"CorrelationKey\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"correlationPropertyBinding\",\n          \"type\": \"CorrelationPropertyBinding\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"MessageFlow\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"sourceRef\",\n          \"type\": \"InteractionNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"targetRef\",\n          \"type\": \"InteractionNode\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"messageRef\",\n          \"type\": \"Message\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"MessageFlowAssociation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"innerMessageFlowRef\",\n          \"type\": \"MessageFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outerMessageFlowRef\",\n          \"type\": \"MessageFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"InteractionNode\",\n      \"isAbstract\": true,\n      \"properties\": [\n        {\n          \"name\": \"incomingConversationLinks\",\n          \"type\": \"ConversationLink\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outgoingConversationLinks\",\n          \"type\": \"ConversationLink\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Participant\",\n      \"superClass\": [\n        \"InteractionNode\",\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"interfaceRef\",\n          \"type\": \"Interface\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"participantMultiplicity\",\n          \"type\": \"ParticipantMultiplicity\"\n        },\n        {\n          \"name\": \"endPointRefs\",\n          \"type\": \"EndPoint\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"processRef\",\n          \"type\": \"Process\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ParticipantAssociation\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"innerParticipantRef\",\n          \"type\": \"Participant\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"outerParticipantRef\",\n          \"type\": \"Participant\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ParticipantMultiplicity\",\n      \"properties\": [\n        {\n          \"name\": \"minimum\",\n          \"default\": 0,\n          \"isAttr\": true,\n          \"type\": \"Integer\"\n        },\n        {\n          \"name\": \"maximum\",\n          \"default\": 1,\n          \"isAttr\": true,\n          \"type\": \"Integer\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Collaboration\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"isClosed\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"participants\",\n          \"type\": \"Participant\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"messageFlows\",\n          \"type\": \"MessageFlow\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"artifacts\",\n          \"type\": \"Artifact\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"conversations\",\n          \"type\": \"ConversationNode\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"conversationAssociations\",\n          \"type\": \"ConversationAssociation\"\n        },\n        {\n          \"name\": \"participantAssociations\",\n          \"type\": \"ParticipantAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"messageFlowAssociations\",\n          \"type\": \"MessageFlowAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"correlationKeys\",\n          \"type\": \"CorrelationKey\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"choreographyRef\",\n          \"type\": \"Choreography\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"conversationLinks\",\n          \"type\": \"ConversationLink\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ChoreographyActivity\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"FlowNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"participantRefs\",\n          \"type\": \"Participant\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"initiatingParticipantRef\",\n          \"type\": \"Participant\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"correlationKeys\",\n          \"type\": \"CorrelationKey\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"loopType\",\n          \"type\": \"ChoreographyLoopType\",\n          \"default\": \"None\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"CallChoreography\",\n      \"superClass\": [\n        \"ChoreographyActivity\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"calledChoreographyRef\",\n          \"type\": \"Choreography\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"participantAssociations\",\n          \"type\": \"ParticipantAssociation\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"SubChoreography\",\n      \"superClass\": [\n        \"ChoreographyActivity\",\n        \"FlowElementsContainer\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"artifacts\",\n          \"type\": \"Artifact\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ChoreographyTask\",\n      \"superClass\": [\n        \"ChoreographyActivity\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"messageFlowRef\",\n          \"type\": \"MessageFlow\",\n          \"isMany\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Choreography\",\n      \"superClass\": [\n        \"FlowElementsContainer\",\n        \"Collaboration\"\n      ]\n    },\n    {\n      \"name\": \"GlobalChoreographyTask\",\n      \"superClass\": [\n        \"Choreography\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"initiatingParticipantRef\",\n          \"type\": \"Participant\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"TextAnnotation\",\n      \"superClass\": [\n        \"Artifact\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"text\",\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"textFormat\",\n          \"default\": \"text/plain\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Group\",\n      \"superClass\": [\n        \"Artifact\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"categoryValueRef\",\n          \"type\": \"CategoryValue\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Association\",\n      \"superClass\": [\n        \"Artifact\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"associationDirection\",\n          \"type\": \"AssociationDirection\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"sourceRef\",\n          \"type\": \"BaseElement\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"targetRef\",\n          \"type\": \"BaseElement\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Category\",\n      \"superClass\": [\n        \"RootElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"categoryValue\",\n          \"type\": \"CategoryValue\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Artifact\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"CategoryValue\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"categorizedFlowElements\",\n          \"type\": \"FlowElement\",\n          \"isVirtual\": true,\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"value\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Activity\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"FlowNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"isForCompensation\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"default\",\n          \"type\": \"SequenceFlow\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"ioSpecification\",\n          \"type\": \"InputOutputSpecification\",\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        },\n        {\n          \"name\": \"boundaryEventRefs\",\n          \"type\": \"BoundaryEvent\",\n          \"isMany\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"properties\",\n          \"type\": \"Property\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"dataInputAssociations\",\n          \"type\": \"DataInputAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"dataOutputAssociations\",\n          \"type\": \"DataOutputAssociation\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"startQuantity\",\n          \"default\": 1,\n          \"isAttr\": true,\n          \"type\": \"Integer\"\n        },\n        {\n          \"name\": \"resources\",\n          \"type\": \"ResourceRole\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"completionQuantity\",\n          \"default\": 1,\n          \"isAttr\": true,\n          \"type\": \"Integer\"\n        },\n        {\n          \"name\": \"loopCharacteristics\",\n          \"type\": \"LoopCharacteristics\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ServiceTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"operationRef\",\n          \"type\": \"Operation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"SubProcess\",\n      \"superClass\": [\n        \"Activity\",\n        \"FlowElementsContainer\",\n        \"InteractionNode\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"triggeredByEvent\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"artifacts\",\n          \"type\": \"Artifact\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"LoopCharacteristics\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"MultiInstanceLoopCharacteristics\",\n      \"superClass\": [\n        \"LoopCharacteristics\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"isSequential\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"behavior\",\n          \"type\": \"MultiInstanceBehavior\",\n          \"default\": \"All\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"loopCardinality\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"loopDataInputRef\",\n          \"type\": \"ItemAwareElement\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"loopDataOutputRef\",\n          \"type\": \"ItemAwareElement\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"inputDataItem\",\n          \"type\": \"DataInput\",\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        },\n        {\n          \"name\": \"outputDataItem\",\n          \"type\": \"DataOutput\",\n          \"xml\": {\n            \"serialize\": \"property\"\n          }\n        },\n        {\n          \"name\": \"complexBehaviorDefinition\",\n          \"type\": \"ComplexBehaviorDefinition\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"completionCondition\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"oneBehaviorEventRef\",\n          \"type\": \"EventDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"noneBehaviorEventRef\",\n          \"type\": \"EventDefinition\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"StandardLoopCharacteristics\",\n      \"superClass\": [\n        \"LoopCharacteristics\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"testBefore\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"loopCondition\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"loopMaximum\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"CallActivity\",\n      \"superClass\": [\n        \"Activity\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"calledElement\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Task\",\n      \"superClass\": [\n        \"Activity\",\n        \"InteractionNode\"\n      ]\n    },\n    {\n      \"name\": \"SendTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"operationRef\",\n          \"type\": \"Operation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"messageRef\",\n          \"type\": \"Message\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ReceiveTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"instantiate\",\n          \"default\": false,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"operationRef\",\n          \"type\": \"Operation\",\n          \"isAttr\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"messageRef\",\n          \"type\": \"Message\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ScriptTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"scriptFormat\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"script\",\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"BusinessRuleTask\",\n      \"superClass\": [\n        \"Task\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AdHocSubProcess\",\n      \"superClass\": [\n        \"SubProcess\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"completionCondition\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"ordering\",\n          \"type\": \"AdHocOrdering\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"cancelRemainingInstances\",\n          \"default\": true,\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Transaction\",\n      \"superClass\": [\n        \"SubProcess\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"protocol\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"method\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"GlobalScriptTask\",\n      \"superClass\": [\n        \"GlobalTask\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"scriptLanguage\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"script\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"GlobalBusinessRuleTask\",\n      \"superClass\": [\n        \"GlobalTask\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"implementation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ComplexBehaviorDefinition\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"condition\",\n          \"type\": \"FormalExpression\"\n        },\n        {\n          \"name\": \"event\",\n          \"type\": \"ImplicitThrowEvent\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ResourceRole\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"resourceRef\",\n          \"type\": \"Resource\",\n          \"isReference\": true\n        },\n        {\n          \"name\": \"resourceParameterBindings\",\n          \"type\": \"ResourceParameterBinding\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"resourceAssignmentExpression\",\n          \"type\": \"ResourceAssignmentExpression\"\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ResourceParameterBinding\",\n      \"properties\": [\n        {\n          \"name\": \"expression\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        },\n        {\n          \"name\": \"parameterRef\",\n          \"type\": \"ResourceParameter\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"ResourceAssignmentExpression\",\n      \"properties\": [\n        {\n          \"name\": \"expression\",\n          \"type\": \"Expression\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ],\n      \"superClass\": [\n        \"BaseElement\"\n      ]\n    },\n    {\n      \"name\": \"Import\",\n      \"properties\": [\n        {\n          \"name\": \"importType\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"location\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"namespace\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Definitions\",\n      \"superClass\": [\n        \"BaseElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"targetNamespace\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"expressionLanguage\",\n          \"default\": \"http://www.w3.org/1999/XPath\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"typeLanguage\",\n          \"default\": \"http://www.w3.org/2001/XMLSchema\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"imports\",\n          \"type\": \"Import\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"extensions\",\n          \"type\": \"Extension\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"rootElements\",\n          \"type\": \"RootElement\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"diagrams\",\n          \"isMany\": true,\n          \"type\": \"bpmndi:BPMNDiagram\"\n        },\n        {\n          \"name\": \"exporter\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"relationships\",\n          \"type\": \"Relationship\",\n          \"isMany\": true\n        },\n        {\n          \"name\": \"exporterVersion\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    }\n  ],\n  \"emumerations\": [\n    {\n      \"name\": \"ProcessType\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"Public\"\n        },\n        {\n          \"name\": \"Private\"\n        }\n      ]\n    },\n    {\n      \"name\": \"GatewayDirection\",\n      \"literalValues\": [\n        {\n          \"name\": \"Unspecified\"\n        },\n        {\n          \"name\": \"Converging\"\n        },\n        {\n          \"name\": \"Diverging\"\n        },\n        {\n          \"name\": \"Mixed\"\n        }\n      ]\n    },\n    {\n      \"name\": \"EventBasedGatewayType\",\n      \"literalValues\": [\n        {\n          \"name\": \"Parallel\"\n        },\n        {\n          \"name\": \"Exclusive\"\n        }\n      ]\n    },\n    {\n      \"name\": \"RelationshipDirection\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"Forward\"\n        },\n        {\n          \"name\": \"Backward\"\n        },\n        {\n          \"name\": \"Both\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ItemKind\",\n      \"literalValues\": [\n        {\n          \"name\": \"Physical\"\n        },\n        {\n          \"name\": \"Information\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ChoreographyLoopType\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"Standard\"\n        },\n        {\n          \"name\": \"MultiInstanceSequential\"\n        },\n        {\n          \"name\": \"MultiInstanceParallel\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AssociationDirection\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"One\"\n        },\n        {\n          \"name\": \"Both\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MultiInstanceBehavior\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"One\"\n        },\n        {\n          \"name\": \"All\"\n        },\n        {\n          \"name\": \"Complex\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AdHocOrdering\",\n      \"literalValues\": [\n        {\n          \"name\": \"Parallel\"\n        },\n        {\n          \"name\": \"Sequential\"\n        }\n      ]\n    }\n  ],\n  \"prefix\": \"bpmn\",\n  \"xml\": {\n    \"tagAlias\": \"lowerCase\",\n    \"typePrefix\": \"t\"\n  }\n}","module.exports={\n  \"name\": \"BPMNDI\",\n  \"uri\": \"http://www.omg.org/spec/BPMN/20100524/DI\",\n  \"types\": [\n    {\n      \"name\": \"BPMNDiagram\",\n      \"properties\": [\n        {\n          \"name\": \"plane\",\n          \"type\": \"BPMNPlane\",\n          \"redefines\": \"di:Diagram#rootElement\"\n        },\n        {\n          \"name\": \"labelStyle\",\n          \"type\": \"BPMNLabelStyle\",\n          \"isMany\": true\n        }\n      ],\n      \"superClass\": [\n        \"di:Diagram\"\n      ]\n    },\n    {\n      \"name\": \"BPMNPlane\",\n      \"properties\": [\n        {\n          \"name\": \"bpmnElement\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"bpmn:BaseElement\",\n          \"redefines\": \"di:DiagramElement#modelElement\"\n        }\n      ],\n      \"superClass\": [\n        \"di:Plane\"\n      ]\n    },\n    {\n      \"name\": \"BPMNShape\",\n      \"properties\": [\n        {\n          \"name\": \"bpmnElement\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"bpmn:BaseElement\",\n          \"redefines\": \"di:DiagramElement#modelElement\"\n        },\n        {\n          \"name\": \"isHorizontal\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"isExpanded\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"isMarkerVisible\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"label\",\n          \"type\": \"BPMNLabel\"\n        },\n        {\n          \"name\": \"isMessageVisible\",\n          \"isAttr\": true,\n          \"type\": \"Boolean\"\n        },\n        {\n          \"name\": \"participantBandKind\",\n          \"type\": \"ParticipantBandKind\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"choreographyActivityShape\",\n          \"type\": \"BPMNShape\",\n          \"isAttr\": true,\n          \"isReference\": true\n        }\n      ],\n      \"superClass\": [\n        \"di:LabeledShape\"\n      ]\n    },\n    {\n      \"name\": \"BPMNEdge\",\n      \"properties\": [\n        {\n          \"name\": \"label\",\n          \"type\": \"BPMNLabel\"\n        },\n        {\n          \"name\": \"bpmnElement\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"bpmn:BaseElement\",\n          \"redefines\": \"di:DiagramElement#modelElement\"\n        },\n        {\n          \"name\": \"sourceElement\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"di:DiagramElement\",\n          \"redefines\": \"di:Edge#source\"\n        },\n        {\n          \"name\": \"targetElement\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"type\": \"di:DiagramElement\",\n          \"redefines\": \"di:Edge#target\"\n        },\n        {\n          \"name\": \"messageVisibleKind\",\n          \"type\": \"MessageVisibleKind\",\n          \"isAttr\": true,\n          \"default\": \"initiating\"\n        }\n      ],\n      \"superClass\": [\n        \"di:LabeledEdge\"\n      ]\n    },\n    {\n      \"name\": \"BPMNLabel\",\n      \"properties\": [\n        {\n          \"name\": \"labelStyle\",\n          \"type\": \"BPMNLabelStyle\",\n          \"isAttr\": true,\n          \"isReference\": true,\n          \"redefines\": \"di:DiagramElement#style\"\n        }\n      ],\n      \"superClass\": [\n        \"di:Label\"\n      ]\n    },\n    {\n      \"name\": \"BPMNLabelStyle\",\n      \"properties\": [\n        {\n          \"name\": \"font\",\n          \"type\": \"dc:Font\"\n        }\n      ],\n      \"superClass\": [\n        \"di:Style\"\n      ]\n    }\n  ],\n  \"emumerations\": [\n    {\n      \"name\": \"ParticipantBandKind\",\n      \"literalValues\": [\n        {\n          \"name\": \"top_initiating\"\n        },\n        {\n          \"name\": \"middle_initiating\"\n        },\n        {\n          \"name\": \"bottom_initiating\"\n        },\n        {\n          \"name\": \"top_non_initiating\"\n        },\n        {\n          \"name\": \"middle_non_initiating\"\n        },\n        {\n          \"name\": \"bottom_non_initiating\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MessageVisibleKind\",\n      \"literalValues\": [\n        {\n          \"name\": \"initiating\"\n        },\n        {\n          \"name\": \"non_initiating\"\n        }\n      ]\n    }\n  ],\n  \"associations\": [],\n  \"prefix\": \"bpmndi\"\n}","module.exports={\n  \"name\": \"DC\",\n  \"uri\": \"http://www.omg.org/spec/DD/20100524/DC\",\n  \"types\": [\n    {\n      \"name\": \"Boolean\"\n    },\n    {\n      \"name\": \"Integer\"\n    },\n    {\n      \"name\": \"Real\"\n    },\n    {\n      \"name\": \"String\"\n    },\n    {\n      \"name\": \"Font\",\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"size\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isBold\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isItalic\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isUnderline\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isStrikeThrough\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Point\",\n      \"properties\": [\n        {\n          \"name\": \"x\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Bounds\",\n      \"properties\": [\n        {\n          \"name\": \"x\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"width\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"height\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        }\n      ]\n    }\n  ],\n  \"prefix\": \"dc\",\n  \"associations\": []\n}","module.exports={\n  \"name\": \"DI\",\n  \"uri\": \"http://www.omg.org/spec/DD/20100524/DI\",\n  \"types\": [\n    {\n      \"name\": \"DiagramElement\",\n      \"isAbstract\": true,\n      \"properties\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"String\",\n          \"isAttr\": true,\n          \"isId\": true\n        },\n        {\n          \"name\": \"extension\",\n          \"type\": \"Extension\"\n        },\n        {\n          \"name\": \"owningDiagram\",\n          \"type\": \"Diagram\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"owningElement\",\n          \"type\": \"DiagramElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"modelElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true,\n          \"type\": \"Element\"\n        },\n        {\n          \"name\": \"style\",\n          \"type\": \"Style\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"ownedElement\",\n          \"type\": \"DiagramElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Node\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"DiagramElement\"\n      ]\n    },\n    {\n      \"name\": \"Edge\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"DiagramElement\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"source\",\n          \"type\": \"DiagramElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"target\",\n          \"type\": \"DiagramElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isReference\": true\n        },\n        {\n          \"name\": \"waypoint\",\n          \"isUnique\": false,\n          \"isMany\": true,\n          \"type\": \"dc:Point\",\n          \"xml\": {\n            \"serialize\": \"xsi:type\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"Diagram\",\n      \"isAbstract\": true,\n      \"properties\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"String\",\n          \"isAttr\": true,\n          \"isId\": true\n        },\n        {\n          \"name\": \"rootElement\",\n          \"type\": \"DiagramElement\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true\n        },\n        {\n          \"name\": \"name\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"documentation\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        },\n        {\n          \"name\": \"resolution\",\n          \"isAttr\": true,\n          \"type\": \"Real\"\n        },\n        {\n          \"name\": \"ownedStyle\",\n          \"type\": \"Style\",\n          \"isReadOnly\": true,\n          \"isVirtual\": true,\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Shape\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Node\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"bounds\",\n          \"type\": \"dc:Bounds\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Plane\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Node\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"planeElement\",\n          \"type\": \"DiagramElement\",\n          \"subsettedProperty\": \"DiagramElement-ownedElement\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"LabeledEdge\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Edge\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"ownedLabel\",\n          \"type\": \"Label\",\n          \"isReadOnly\": true,\n          \"subsettedProperty\": \"DiagramElement-ownedElement\",\n          \"isVirtual\": true,\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"LabeledShape\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Shape\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"ownedLabel\",\n          \"type\": \"Label\",\n          \"isReadOnly\": true,\n          \"subsettedProperty\": \"DiagramElement-ownedElement\",\n          \"isVirtual\": true,\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Label\",\n      \"isAbstract\": true,\n      \"superClass\": [\n        \"Node\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"bounds\",\n          \"type\": \"dc:Bounds\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Style\",\n      \"isAbstract\": true,\n      \"properties\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"String\",\n          \"isAttr\": true,\n          \"isId\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Extension\",\n      \"properties\": [\n        {\n          \"name\": \"values\",\n          \"type\": \"Element\",\n          \"isMany\": true\n        }\n      ]\n    }\n  ],\n  \"associations\": [],\n  \"prefix\": \"di\",\n  \"xml\": {\n    \"tagAlias\": \"lowerCase\"\n  }\n}","/**\n * Module dependencies.\n */\n\ntry {\n  var index = require(111);\n} catch (err) {\n  var index = require(111);\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = //s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^/s+|/s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n","var matches = require(112)\n\nmodule.exports = function (element, selector, checkYoSelf, root) {\n  element = checkYoSelf ? {parentNode: element} : element\n\n  root = root || document\n\n  // Make sure `element !== document` and `element != null`\n  // otherwise we get an illegal invocation\n  while ((element = element.parentNode) && element !== document) {\n    if (matches(element, selector))\n      return element\n    // After `matches` on the edge case that\n    // the selector matches the root\n    // (when the root is not the document)\n    if (element === root)\n      return\n  }\n}\n","/**\n * Module dependencies.\n */\n\ntry {\n  var closest = require(108);\n} catch(err) {\n  var closest = require(108);\n}\n\ntry {\n  var event = require(110);\n} catch(err) {\n  var event = require(110);\n}\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, selector, type, fn, capture){\n  return event.bind(el, type, function(e){\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  event.unbind(el, type, fn, capture);\n};\n","var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};","module.exports = function(arr, obj){\n  if (arr.indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","/**\n * Module dependencies.\n */\n\ntry {\n  var query = require(113);\n} catch (err) {\n  var query = require(113);\n}\n\n/**\n * Element prototype.\n */\n\nvar proto = Element.prototype;\n\n/**\n * Vendor function.\n */\n\nvar vendor = proto.matches\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\n/**\n * Expose `match()`.\n */\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = query.all(selector, el.parentNode);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n","function one(selector, el) {\n  return el.querySelector(selector);\n}\n\nexports = module.exports = function(selector, el){\n  el = el || document;\n  return one(selector, el);\n};\n\nexports.all = function(selector, el){\n  el = el || document;\n  return el.querySelectorAll(selector);\n};\n\nexports.engine = function(obj){\n  if (!obj.one) throw new Error('.one callback required');\n  if (!obj.all) throw new Error('.all callback required');\n  one = obj.one;\n  exports.all = obj.all;\n  return exports;\n};\n","module.exports = {\r\n  __depends__: [ require(170) ],\r\n  __init__: [ 'directEditing' ],\r\n  directEditing: [ 'type', require(115) ]\r\n};","'use strict';\r\n\r\nvar bind = require(312),\r\n    find = require(302);\r\n\r\nvar TextBox = require(116);\r\n\r\n\r\n/**\r\n * A direct editing component that allows users\r\n * to edit an elements text directly in the diagram\r\n *\r\n * @param {EventBus} eventBus the event bus\r\n */\r\nfunction DirectEditing(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n\r\n  this._providers = [];\r\n  this._textbox = new TextBox({\r\n    container: canvas.getContainer(),\r\n    keyHandler: bind(this._handleKey, this),\r\n    resizeHandler: bind(this._handleResize, this)\r\n  });\r\n}\r\n\r\nDirectEditing.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n\r\n/**\r\n * Register a direct editing provider\r\n\r\n * @param {Object} provider the provider, must expose an #activate(element) method that returns\r\n *                          an activation context ({ bounds: {x, y, width, height }, text }) if\r\n *                          direct editing is available for the given element.\r\n *                          Additionally the provider must expose a #update(element, value) method\r\n *                          to receive direct editing updates.\r\n */\r\nDirectEditing.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n};\r\n\r\n\r\n/**\r\n * Returns true if direct editing is currently active\r\n *\r\n * @return {Boolean}\r\n */\r\nDirectEditing.prototype.isActive = function() {\r\n  return !!this._active;\r\n};\r\n\r\n\r\n/**\r\n * Cancel direct editing, if it is currently active\r\n */\r\nDirectEditing.prototype.cancel = function() {\r\n  if (!this._active) {\r\n    return;\r\n  }\r\n\r\n  this._fire('cancel');\r\n  this.close();\r\n};\r\n\r\n\r\nDirectEditing.prototype._fire = function(event, context) {\r\n  this._eventBus.fire('directEditing.' + event, context || { active: this._active });\r\n};\r\n\r\nDirectEditing.prototype.close = function() {\r\n  this._textbox.destroy();\r\n\r\n  this._fire('deactivate');\r\n\r\n  this._active = null;\r\n\r\n  this.resizable = undefined;\r\n};\r\n\r\n\r\nDirectEditing.prototype.complete = function() {\r\n\r\n  var active = this._active;\r\n\r\n  if (!active) {\r\n    return;\r\n  }\r\n\r\n  var text = this.getValue();\r\n\r\n  var bounds = this.$textbox.getBoundingClientRect();\r\n\r\n  if (text !== active.context.text || this.resizable) {\r\n    active.provider.update(active.element, text, active.context.text, {\r\n      x: bounds.top,\r\n      y: bounds.left,\r\n      width: bounds.width,\r\n      height: bounds.height\r\n    });\r\n  }\r\n\r\n  this._fire('complete');\r\n\r\n  this.close();\r\n};\r\n\r\n\r\nDirectEditing.prototype.getValue = function() {\r\n  return this._textbox.getValue();\r\n};\r\n\r\n\r\nDirectEditing.prototype._handleKey = function(e) {\r\n\r\n  // stop bubble\r\n  e.stopPropagation();\r\n\r\n  var key = e.keyCode || e.charCode;\r\n\r\n  // ESC\r\n  if (key === 27) {\r\n    e.preventDefault();\r\n    return this.cancel();\r\n  }\r\n\r\n  // Enter\r\n  if (key === 13 && !e.shiftKey) {\r\n    e.preventDefault();\r\n    return this.complete();\r\n  }\r\n};\r\n\r\n\r\nDirectEditing.prototype._handleResize = function(event) {\r\n  this._fire('resize', event);\r\n};\r\n\r\n\r\n/**\r\n * Activate direct editing on the given element\r\n *\r\n * @param {Object} ElementDescriptor the descriptor for a shape or connection\r\n * @return {Boolean} true if the activation was possible\r\n */\r\nDirectEditing.prototype.activate = function(element) {\r\n  if (this.isActive()) {\r\n    this.cancel();\r\n  }\r\n\r\n  // the direct editing context\r\n  var context;\r\n\r\n  var provider = find(this._providers, function(p) {\r\n    return (context = p.activate(element)) ? p : null;\r\n  });\r\n\r\n  // check if activation took place\r\n  if (context) {\r\n    this.$textbox = this._textbox.create(\r\n      context.bounds,\r\n      context.style,\r\n      context.text,\r\n      context.options\r\n    );\r\n\r\n    this._active = {\r\n      element: element,\r\n      context: context,\r\n      provider: provider\r\n    };\r\n\r\n    if (context.options && context.options.resizable) {\r\n      this.resizable = true;\r\n    }\r\n\r\n    this._fire('activate');\r\n  }\r\n\r\n  return !!context;\r\n};\r\n\r\n\r\nmodule.exports = DirectEditing;","'use strict';\r\n\r\nvar assign = require(431),\r\n    bind = require(312),\r\n    pick = require(438);\r\n\r\nvar domAttr = require(444),\r\n    domClasses = require(445),\r\n    domEvent = require(450),\r\n    domRemove = require(453);\r\n\r\nvar min = Math.min,\r\n    max = Math.max;\r\n\r\nfunction preventDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction stopPropagation(e) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction isTextNode(node) {\r\n  return node.nodeType === Node.TEXT_NODE;\r\n}\r\n\r\nfunction toArray(nodeList) {\r\n  return [].slice.call(nodeList);\r\n}\r\n\r\n/**\r\n * Initializes a container for a content editable div.\r\n *\r\n * Structure:\r\n *\r\n * container\r\n *   parent\r\n *     content\r\n *     handle\r\n *\r\n * @param {object} options\r\n * @param {DOMElement} options.container The DOM element to append the contentContainer to\r\n * @param {Function} options.keyHandler Handler for key events\r\n * @param {Function} options.resizeHandler Handler for resize events\r\n */\r\nfunction TextBox(options) {\r\n  this.container = options.container;\r\n\r\n  this.parent = document.createElement('div');\r\n\r\n  this.content = document.createElement('div');\r\n\r\n  this.parent.appendChild(this.content);\r\n\r\n  domAttr(this.content, 'contentEditable', 'true');\r\n\r\n  this.keyHandler = options.keyHandler || function() {};\r\n  this.resizeHandler = options.resizeHandler || function() {};\r\n\r\n  this.autoResize = bind(this.autoResize, this);\r\n  this.handlePaste = bind(this.handlePaste, this);\r\n}\r\n\r\nmodule.exports = TextBox;\r\n\r\n\r\n/**\r\n * Create a text box with the given position, size, style and text content\r\n *\r\n * @param {Object} bounds\r\n * @param {Number} bounds.x absolute x position\r\n * @param {Number} bounds.y absolute y position\r\n * @param {Number} [bounds.width] fixed width value\r\n * @param {Number} [bounds.height] fixed height value\r\n * @param {Number} [bounds.maxWidth] maximum width value\r\n * @param {Number} [bounds.maxHeight] maximum height value\r\n * @param {Number} [bounds.minWidth] minimum width value\r\n * @param {Number} [bounds.minHeight] minimum height value\r\n * @param {Object} [style]\r\n * @param {String} value text content\r\n *\r\n * @return {DOMElement} The created content DOM element\r\n */\r\nTextBox.prototype.create = function(bounds, style, value, options) {\r\n  var self = this;\r\n\r\n  var parent = this.parent,\r\n      content = this.content,\r\n      container = this.container;\r\n\r\n  options = this.options = options || {};\r\n\r\n  style = this.style = style || {};\r\n\r\n  var parentStyle = pick(style, [\r\n    'width',\r\n    'height',\r\n    'maxWidth',\r\n    'maxHeight',\r\n    'minWidth',\r\n    'minHeight',\r\n    'left',\r\n    'top',\r\n    'backgroundColor',\r\n    'position',\r\n    'overflow',\r\n    'border',\r\n    'wordWrap',\r\n    'textAlign',\r\n    'outline',\r\n    'transform'\r\n  ]);\r\n\r\n  assign(parent.style, {\r\n    width: bounds.width + 'px',\r\n    height: bounds.height + 'px',\r\n    maxWidth: bounds.maxWidth + 'px',\r\n    maxHeight: bounds.maxHeight + 'px',\r\n    minWidth: bounds.minWidth + 'px',\r\n    minHeight: bounds.minHeight + 'px',\r\n    left: bounds.x + 'px',\r\n    top: bounds.y + 'px',\r\n    backgroundColor: '#ffffff',\r\n    position: 'absolute',\r\n    overflow: 'visible',\r\n    border: '1px solid #ccc',\r\n    wordWrap: 'normal',\r\n    textAlign: 'center',\r\n    outline: 'none'\r\n  }, parentStyle);\r\n\r\n  var contentStyle = pick(style, [\r\n    'fontSize',\r\n    'lineHeight',\r\n    'padding',\r\n    'paddingTop',\r\n    'paddingRight',\r\n    'paddingBottom',\r\n    'paddingLeft'\r\n  ]);\r\n\r\n  assign(content.style, {\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n    outline: 'none'\r\n  }, contentStyle);\r\n\r\n  if (options.centerVertically) {\r\n    assign(content.style, {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translate(0, -50%)'\r\n    }, contentStyle);\r\n  }\r\n\r\n  content.innerText = value;\r\n\r\n  domEvent.bind(content, 'keydown', this.keyHandler);\r\n  domEvent.bind(content, 'mousedown', stopPropagation);\r\n  domEvent.bind(content, 'paste', self.handlePaste);\r\n\r\n  if (options.autoResize) {\r\n    domEvent.bind(content, 'input', this.autoResize);\r\n  }\r\n\r\n  if (options.resizable) {\r\n    this.resizable(style);\r\n  }\r\n\r\n  container.appendChild(parent);\r\n\r\n  // set selection to end of text\r\n  this.setSelection(content.lastChild, content.lastChild && content.lastChild.length);\r\n\r\n  return parent;\r\n};\r\n\r\n/**\r\n * Intercept paste events to remove formatting from pasted text.\r\n */\r\nTextBox.prototype.handlePaste = function(e) {\r\n  var self = this;\r\n\r\n  var options = this.options,\r\n      style = this.style;\r\n\r\n  e.preventDefault();\r\n\r\n  var text;\r\n\r\n  if (e.clipboardData) {\r\n\r\n    // Chrome, Firefox, Safari\r\n    text = e.clipboardData.getData('text/plain');\r\n  } else {\r\n\r\n    // Internet Explorer\r\n    text = window.clipboardData.getData('Text');\r\n  }\r\n\r\n  // insertHTML command not supported by Internet Explorer\r\n  var success = document.execCommand('insertHTML', false, text);\r\n\r\n  if (!success) {\r\n\r\n    // Internet Explorer\r\n    var range = this.getSelection(),\r\n        startContainer = range.startContainer,\r\n        endContainer = range.endContainer,\r\n        startOffset = range.startOffset,\r\n        endOffset = range.endOffset,\r\n        commonAncestorContainer = range.commonAncestorContainer;\r\n\r\n    var childNodesArray = toArray(commonAncestorContainer.childNodes);\r\n\r\n    var container,\r\n        offset;\r\n\r\n    if (isTextNode(commonAncestorContainer)) {\r\n      var containerTextContent = startContainer.textContent;\r\n\r\n      startContainer.textContent =\r\n        containerTextContent.substring(0, startOffset)\r\n        + text\r\n        + containerTextContent.substring(endOffset);\r\n\r\n      container = startContainer;\r\n      offset = startOffset + text.length;\r\n\r\n    } else if (startContainer === this.content && endContainer === this.content) {\r\n      var textNode = document.createTextNode(text);\r\n\r\n      this.content.insertBefore(textNode, childNodesArray[startOffset]);\r\n\r\n      container = textNode;\r\n      offset = textNode.textContent.length;\r\n    } else {\r\n      var startContainerChildIndex = childNodesArray.indexOf(startContainer),\r\n          endContainerChildIndex = childNodesArray.indexOf(endContainer);\r\n\r\n      childNodesArray.forEach(function(childNode, index) {\r\n\r\n        if (index === startContainerChildIndex) {\r\n          childNode.textContent =\r\n            startContainer.textContent.substring(0, startOffset) +\r\n            text +\r\n            endContainer.textContent.substring(endOffset);\r\n        } else if (index > startContainerChildIndex && index <= endContainerChildIndex) {\r\n          domRemove(childNode);\r\n        }\r\n      });\r\n\r\n      container = startContainer;\r\n      offset = startOffset + text.length;\r\n    }\r\n\r\n    if (container && offset !== undefined) {\r\n\r\n      // is necessary in Internet Explorer\r\n      setTimeout(function() {\r\n        self.setSelection(container, offset);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (options.autoResize) {\r\n    var hasResized = this.autoResize(style);\r\n\r\n    if (hasResized) {\r\n      this.resizeHandler(hasResized);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Automatically resize element vertically to fit its content.\r\n */\r\nTextBox.prototype.autoResize = function() {\r\n  var parent = this.parent,\r\n      content = this.content;\r\n\r\n  var fontSize = parseInt(this.style.fontSize) || 12;\r\n\r\n  if (content.scrollHeight > parent.offsetHeight ||\r\n      content.scrollHeight < parent.offsetHeight - fontSize) {\r\n    var bounds = parent.getBoundingClientRect();\r\n\r\n    var height = content.scrollHeight;\r\n    parent.style.height = height + 'px';\r\n\r\n    this.resizeHandler({\r\n      width: bounds.width,\r\n      height: bounds.height,\r\n      dx: 0,\r\n      dy: height - bounds.height\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Make an element resizable by adding a resize handle.\r\n */\r\nTextBox.prototype.resizable = function() {\r\n  var self = this;\r\n\r\n  var parent = this.parent,\r\n      resizeHandle = this.resizeHandle;\r\n\r\n  var minWidth = parseInt(this.style.minWidth) || 0,\r\n      minHeight = parseInt(this.style.minHeight) || 0,\r\n      maxWidth = parseInt(this.style.maxWidth) || Infinity,\r\n      maxHeight = parseInt(this.style.maxHeight) || Infinity;\r\n\r\n  if (!resizeHandle) {\r\n    resizeHandle = this.resizeHandle = document.createElement('div');\r\n\r\n    domClasses(resizeHandle).add('djs-direct-editing-resize-handle');\r\n\r\n    var startX, startY, startWidth, startHeight;\r\n\r\n    var onMouseDown = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      startX = e.clientX;\r\n      startY = e.clientY;\r\n\r\n      var bounds = parent.getBoundingClientRect();\r\n\r\n      startWidth = bounds.width;\r\n      startHeight = bounds.height;\r\n\r\n      domEvent.bind(document, 'mousemove', onMouseMove);\r\n      domEvent.bind(document, 'mouseup', onMouseUp);\r\n    };\r\n\r\n    var onMouseMove = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      var newWidth = min(max(startWidth + e.clientX - startX, minWidth), maxWidth);\r\n      var newHeight = min(max(startHeight + e.clientY - startY, minHeight), maxHeight);\r\n\r\n      parent.style.width = newWidth + 'px';\r\n      parent.style.height = newHeight + 'px';\r\n\r\n      self.resizeHandler({\r\n        width: startWidth,\r\n        height: startHeight,\r\n        dx: e.clientX - startX,\r\n        dy: e.clientY - startY\r\n      });\r\n    };\r\n\r\n    var onMouseUp = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      domEvent.unbind(document,'mousemove', onMouseMove, false);\r\n      domEvent.unbind(document, 'mouseup', onMouseUp, false);\r\n    };\r\n\r\n    domEvent.bind(resizeHandle, 'mousedown', onMouseDown);\r\n  }\r\n\r\n  assign(resizeHandle.style, {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    right: '0px',\r\n    cursor: 'nwse-resize',\r\n    width: '0',\r\n    height: '0',\r\n    borderTop: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent',\r\n    borderRight: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\r\n    borderBottom: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\r\n    borderLeft: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent'\r\n  });\r\n\r\n  parent.appendChild(resizeHandle);\r\n};\r\n\r\n\r\n/**\r\n * Clear content and style of the textbox, unbind listeners and\r\n * reset CSS style.\r\n */\r\nTextBox.prototype.destroy = function() {\r\n  var parent = this.parent,\r\n      content = this.content,\r\n      resizeHandle = this.resizeHandle;\r\n\r\n  // clear content\r\n  content.innerText = '';\r\n\r\n  // clear styles\r\n  parent.removeAttribute('style');\r\n  content.removeAttribute('style');\r\n\r\n  domEvent.unbind(content, 'keydown', this.keyHandler);\r\n  domEvent.unbind(content, 'mousedown', stopPropagation);\r\n  domEvent.unbind(content, 'input', this.autoResize);\r\n  domEvent.unbind(content, 'paste', this.handlePaste);\r\n\r\n  if (resizeHandle) {\r\n    resizeHandle.removeAttribute('style');\r\n\r\n    domRemove(resizeHandle);\r\n  }\r\n\r\n  domRemove(parent);\r\n};\r\n\r\n\r\nTextBox.prototype.getValue = function() {\r\n  return this.content.innerText;\r\n};\r\n\r\n\r\nTextBox.prototype.getSelection = function() {\r\n  var selection = window.getSelection(),\r\n      range = selection.getRangeAt(0);\r\n\r\n  return range;\r\n};\r\n\r\n\r\nTextBox.prototype.setSelection = function(container, offset) {\r\n  var range = document.createRange();\r\n\r\n  if (container === null) {\r\n    range.selectNodeContents(this.content);\r\n  } else {\r\n    range.setStart(container, offset);\r\n    range.setEnd(container, offset);\r\n  }\r\n\r\n  var selection = window.getSelection();\r\n\r\n  selection.removeAllRanges();\r\n  selection.addRange(range);\r\n};\r\n","module.exports = require(118);","'use strict';\r\n\r\nvar di = require(282);\r\n\r\n\r\n/**\r\n * Bootstrap an injector from a list of modules, instantiating a number of default components\r\n *\r\n * @ignore\r\n * @param {Array<didi.Module>} bootstrapModules\r\n *\r\n * @return {didi.Injector} a injector to use to access the components\r\n */\r\nfunction bootstrap(bootstrapModules) {\r\n\r\n  var modules = [],\r\n      components = [];\r\n\r\n  function hasModule(m) {\r\n    return modules.indexOf(m) >= 0;\r\n  }\r\n\r\n  function addModule(m) {\r\n    modules.push(m);\r\n  }\r\n\r\n  function visit(m) {\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    (m.__depends__ || []).forEach(visit);\r\n\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    addModule(m);\r\n\r\n    (m.__init__ || []).forEach(function(c) {\r\n      components.push(c);\r\n    });\r\n  }\r\n\r\n  bootstrapModules.forEach(visit);\r\n\r\n  var injector = new di.Injector(modules);\r\n\r\n  components.forEach(function(c) {\r\n\r\n    try {\r\n      // eagerly resolve component (fn or string)\r\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\r\n    } catch (e) {\r\n      console.error('Failed to instantiate component');\r\n      console.error(e.stack);\r\n\r\n      throw e;\r\n    }\r\n  });\r\n\r\n  return injector;\r\n}\r\n\r\n/**\r\n * Creates an injector from passed options.\r\n *\r\n * @ignore\r\n * @param  {Object} options\r\n * @return {didi.Injector}\r\n */\r\nfunction createInjector(options) {\r\n\r\n  options = options || {};\r\n\r\n  var configModule = {\r\n    'config': ['value', options]\r\n  };\r\n\r\n  var coreModule = require(127);\r\n\r\n  var modules = [ configModule, coreModule ].concat(options.modules || []);\r\n\r\n  return bootstrap(modules);\r\n}\r\n\r\n\r\n/**\r\n * The main diagram-js entry point that bootstraps the diagram with the given\r\n * configuration.\r\n *\r\n * To register extensions with the diagram, pass them as Array<didi.Module> to the constructor.\r\n *\r\n * @class djs.Diagram\r\n * @memberOf djs\r\n * @constructor\r\n *\r\n * @example\r\n *\r\n * <caption>Creating a plug-in that logs whenever a shape is added to the canvas.</caption>\r\n *\r\n * // plug-in implemenentation\r\n * function MyLoggingPlugin(eventBus) {\r\n *   eventBus.on('shape.added', function(event) {\r\n *     console.log('shape ', event.shape, ' was added to the diagram');\r\n *   });\r\n * }\r\n *\r\n * // export as module\r\n * module.exports = {\r\n *   __init__: [ 'myLoggingPlugin' ],\r\n *     myLoggingPlugin: [ 'type', MyLoggingPlugin ]\r\n * };\r\n *\r\n *\r\n * // instantiate the diagram with the new plug-in\r\n *\r\n * var diagram = new Diagram({ modules: [ require('path-to-my-logging-plugin') ] });\r\n *\r\n * diagram.invoke([ 'canvas', function(canvas) {\r\n *   // add shape to drawing canvas\r\n *   canvas.addShape({ x: 10, y: 10 });\r\n * });\r\n *\r\n * // 'shape ... was added to the diagram' logged to console\r\n *\r\n * @param {Object} options\r\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the diagram\r\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the diagram with\r\n */\r\nfunction Diagram(options, injector) {\r\n\r\n  // create injector unless explicitly specified\r\n  this.injector = injector = injector || createInjector(options);\r\n\r\n  // API\r\n\r\n  /**\r\n   * Resolves a diagram service\r\n   *\r\n   * @method Diagram#get\r\n   *\r\n   * @param {String} name the name of the diagram service to be retrieved\r\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\r\n   */\r\n  this.get = injector.get;\r\n\r\n  /**\r\n   * Executes a function into which diagram services are injected\r\n   *\r\n   * @method Diagram#invoke\r\n   *\r\n   * @param {Function|Object[]} fn the function to resolve\r\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\r\n   */\r\n  this.invoke = injector.invoke;\r\n\r\n  // init\r\n\r\n  // indicate via event\r\n\r\n\r\n  /**\r\n   * An event indicating that all plug-ins are loaded.\r\n   *\r\n   * Use this event to fire other events to interested plug-ins\r\n   *\r\n   * @memberOf Diagram\r\n   *\r\n   * @event diagram.init\r\n   *\r\n   * @example\r\n   *\r\n   * eventBus.on('diagram.init', function() {\r\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\r\n   * });\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this.get('eventBus').fire('diagram.init');\r\n}\r\n\r\nmodule.exports = Diagram;\r\n\r\n\r\n/**\r\n * Destroys the diagram\r\n *\r\n * @method  Diagram#destroy\r\n */\r\nDiagram.prototype.destroy = function() {\r\n  this.get('eventBus').fire('diagram.destroy');\r\n};\r\n\r\n/**\r\n * Clear the diagram, removing all contents.\r\n */\r\nDiagram.prototype.clear = function() {\r\n  this.get('eventBus').fire('diagram.clear');\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    isFunction = require(423),\r\n    isArray = require(422),\r\n    isNumber = require(425);\r\n\r\n\r\nvar DEFAULT_PRIORITY = 1000;\r\n\r\n\r\nfunction isObject(element) {\r\n  return typeof element === 'object';\r\n}\r\n\r\n/**\r\n * A utility that can be used to plug-in into the command execution for\r\n * extension and/or validation.\r\n *\r\n * @param {EventBus} eventBus\r\n *\r\n * @example\r\n *\r\n * var inherits = require('inherits');\r\n *\r\n * var CommandInterceptor = require('diagram-js/lib/command/CommandInterceptor');\r\n *\r\n * function CommandLogger(eventBus) {\r\n *   CommandInterceptor.call(this, eventBus);\r\n *\r\n *   this.preExecute(function(event) {\r\n *     console.log('command pre-execute', event);\r\n *   });\r\n * }\r\n *\r\n * inherits(CommandLogger, CommandInterceptor);\r\n *\r\n */\r\nfunction CommandInterceptor(eventBus) {\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nCommandInterceptor.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = CommandInterceptor;\r\n\r\nfunction unwrapEvent(fn, that) {\r\n  return function(event) {\r\n    return fn.call(that || null, event.context, event.command, event);\r\n  };\r\n}\r\n\r\n/**\r\n * Register an interceptor for a command execution\r\n *\r\n * @param {String|Array<String>} [events] list of commands to register on\r\n * @param {String} [hook] command hook, i.e. preExecute, executed to listen on\r\n * @param {Number} [priority] the priority on which to hook into the execution\r\n * @param {Function} handlerFn interceptor to be invoked with (event)\r\n * @param {Boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\r\n *                          listener instead\r\n * @param {Object} [that] Pass context (`this`) to the handler function\r\n */\r\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\r\n\r\n  if (isFunction(hook) || isNumber(hook)) {\r\n    that = unwrap;\r\n    unwrap = handlerFn;\r\n    handlerFn = priority;\r\n    priority = hook;\r\n    hook = null;\r\n  }\r\n\r\n  if (isFunction(priority)) {\r\n    that = unwrap;\r\n    unwrap = handlerFn;\r\n    handlerFn = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (isObject(unwrap)) {\r\n    that = unwrap;\r\n    unwrap = false;\r\n  }\r\n\r\n  if (!isFunction(handlerFn)) {\r\n    throw new Error('handlerFn must be a function');\r\n  }\r\n\r\n  if (!isArray(events)) {\r\n    events = [ events ];\r\n  }\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  forEach(events, function(event) {\r\n    // concat commandStack(.event)?(.hook)?\r\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\r\n\r\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\r\n  });\r\n};\r\n\r\n\r\nvar hooks = [\r\n  'canExecute',\r\n  'preExecute',\r\n  'preExecuted',\r\n  'execute',\r\n  'executed',\r\n  'postExecute',\r\n  'postExecuted',\r\n  'revert',\r\n  'reverted'\r\n];\r\n\r\n/*\r\n * Install hook shortcuts\r\n *\r\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\r\n * which will in term forward to CommandInterceptor#on.\r\n */\r\nforEach(hooks, function(hook) {\r\n\r\n  /**\r\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\r\n   *\r\n   * A named hook for plugging into the command execution\r\n   *\r\n   * @param {String|Array<String>} [events] list of commands to register on\r\n   * @param {Number} [priority] the priority on which to hook into the execution\r\n   * @param {Function} handlerFn interceptor to be invoked with (event)\r\n   * @param {Boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\r\n   *                          listener instead\r\n   * @param {Object} [that] Pass context (`this`) to the handler function\r\n   */\r\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\r\n\r\n    if (isFunction(events) || isNumber(events)) {\r\n      that = unwrap;\r\n      unwrap = handlerFn;\r\n      handlerFn = priority;\r\n      priority = events;\r\n      events = null;\r\n    }\r\n\r\n    this.on(events, hook, priority, handlerFn, unwrap, that);\r\n  };\r\n});\r\n","'use strict';\r\n\r\nvar unique = require(296),\r\n    isArray = require(422),\r\n    assign = require(431);\r\n\r\nvar InternalEvent = require(125).Event;\r\n\r\n\r\n/**\r\n * A service that offers un- and redoable execution of commands.\r\n *\r\n * The command stack is responsible for executing modeling actions\r\n * in a un- and redoable manner. To do this it delegates the actual\r\n * command execution to {@link CommandHandler}s.\r\n *\r\n * Command handlers provide {@link CommandHandler#execute(ctx)} and\r\n * {@link CommandHandler#revert(ctx)} methods to un- and redo a command\r\n * identified by a command context.\r\n *\r\n *\r\n * ## Life-Cycle events\r\n *\r\n * In the process the command stack fires a number of life-cycle events\r\n * that other components to participate in the command execution.\r\n *\r\n *    * preExecute\r\n *    * preExecuted\r\n *    * execute\r\n *    * executed\r\n *    * postExecute\r\n *    * postExecuted\r\n *    * revert\r\n *    * reverted\r\n *\r\n * A special event is used for validating, whether a command can be\r\n * performed prior to its execution.\r\n *\r\n *    * canExecute\r\n *\r\n * Each of the events is fired as `commandStack.{eventName}` and\r\n * `commandStack.{commandName}.{eventName}`, respectively. This gives\r\n * components fine grained control on where to hook into.\r\n *\r\n * The event object fired transports `command`, the name of the\r\n * command and `context`, the command context.\r\n *\r\n *\r\n * ## Creating Command Handlers\r\n *\r\n * Command handlers should provide the {@link CommandHandler#execute(ctx)}\r\n * and {@link CommandHandler#revert(ctx)} methods to implement\r\n * redoing and undoing of a command.\r\n *\r\n * A command handler _must_ ensure undo is performed properly in order\r\n * not to break the undo chain. It must also return the shapes that\r\n * got changed during the `execute` and `revert` operations.\r\n *\r\n * Command handlers may execute other modeling operations (and thus\r\n * commands) in their `preExecute` and `postExecute` phases. The command\r\n * stack will properly group all commands together into a logical unit\r\n * that may be re- and undone atomically.\r\n *\r\n * Command handlers must not execute other commands from within their\r\n * core implementation (`execute`, `revert`).\r\n *\r\n *\r\n * ## Change Tracking\r\n *\r\n * During the execution of the CommandStack it will keep track of all\r\n * elements that have been touched during the command's execution.\r\n *\r\n * At the end of the CommandStack execution it will notify interested\r\n * components via an 'elements.changed' event with all the dirty\r\n * elements.\r\n *\r\n * The event can be picked up by components that are interested in the fact\r\n * that elements have been changed. One use case for this is updating\r\n * their graphical representation after moving / resizing or deletion.\r\n *\r\n * @see CommandHandler\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Injector} injector\r\n */\r\nfunction CommandStack(eventBus, injector) {\r\n\r\n  /**\r\n   * A map of all registered command handlers.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._handlerMap = {};\r\n\r\n  /**\r\n   * A stack containing all re/undoable actions on the diagram\r\n   *\r\n   * @type {Array<Object>}\r\n   */\r\n  this._stack = [];\r\n\r\n  /**\r\n   * The current index on the stack\r\n   *\r\n   * @type {Number}\r\n   */\r\n  this._stackIdx = -1;\r\n\r\n  /**\r\n   * Current active commandStack execution\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._currentExecution = {\r\n    actions: [],\r\n    dirty: []\r\n  };\r\n\r\n\r\n  this._injector = injector;\r\n  this._eventBus = eventBus;\r\n\r\n  this._uid = 1;\r\n\r\n  eventBus.on([ 'diagram.destroy', 'diagram.clear' ], this.clear, this);\r\n}\r\n\r\nCommandStack.$inject = [ 'eventBus', 'injector' ];\r\n\r\nmodule.exports = CommandStack;\r\n\r\n\r\n/**\r\n * Execute a command\r\n *\r\n * @param {String} command the command to execute\r\n * @param {Object} context the environment to execute the command in\r\n */\r\nCommandStack.prototype.execute = function(command, context) {\r\n  if (!command) {\r\n    throw new Error('command required');\r\n  }\r\n\r\n  var action = { command: command, context: context };\r\n\r\n  this._pushAction(action);\r\n  this._internalExecute(action);\r\n  this._popAction(action);\r\n};\r\n\r\n\r\n/**\r\n * Ask whether a given command can be executed.\r\n *\r\n * Implementors may hook into the mechanism on two ways:\r\n *\r\n *   * in event listeners:\r\n *\r\n *     Users may prevent the execution via an event listener.\r\n *     It must prevent the default action for `commandStack.(<command>.)canExecute` events.\r\n *\r\n *   * in command handlers:\r\n *\r\n *     If the method {@link CommandHandler#canExecute} is implemented in a handler\r\n *     it will be called to figure out whether the execution is allowed.\r\n *\r\n * @param  {String} command the command to execute\r\n * @param  {Object} context the environment to execute the command in\r\n *\r\n * @return {Boolean} true if the command can be executed\r\n */\r\nCommandStack.prototype.canExecute = function(command, context) {\r\n\r\n  var action = { command: command, context: context };\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  var result = this._fire(command, 'canExecute', action);\r\n\r\n  // handler#canExecute will only be called if no listener\r\n  // decided on a result already\r\n  if (result === undefined) {\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    if (handler.canExecute) {\r\n      result = handler.canExecute(context);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n\r\n/**\r\n * Clear the command stack, erasing all undo / redo history\r\n */\r\nCommandStack.prototype.clear = function() {\r\n  this._stack.length = 0;\r\n  this._stackIdx = -1;\r\n\r\n  this._fire('changed');\r\n};\r\n\r\n\r\n/**\r\n * Undo last command(s)\r\n */\r\nCommandStack.prototype.undo = function() {\r\n  var action = this._getUndoAction(),\r\n      next;\r\n\r\n  if (action) {\r\n    this._pushAction(action);\r\n\r\n    while (action) {\r\n      this._internalUndo(action);\r\n      next = this._getUndoAction();\r\n\r\n      if (!next || next.id !== action.id) {\r\n        break;\r\n      }\r\n\r\n      action = next;\r\n    }\r\n\r\n    this._popAction();\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Redo last command(s)\r\n */\r\nCommandStack.prototype.redo = function() {\r\n  var action = this._getRedoAction(),\r\n      next;\r\n\r\n  if (action) {\r\n    this._pushAction(action);\r\n\r\n    while (action) {\r\n      this._internalExecute(action, true);\r\n      next = this._getRedoAction();\r\n\r\n      if (!next || next.id !== action.id) {\r\n        break;\r\n      }\r\n\r\n      action = next;\r\n    }\r\n\r\n    this._popAction();\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Register a handler instance with the command stack\r\n *\r\n * @param {String} command\r\n * @param {CommandHandler} handler\r\n */\r\nCommandStack.prototype.register = function(command, handler) {\r\n  this._setHandler(command, handler);\r\n};\r\n\r\n\r\n/**\r\n * Register a handler type with the command stack\r\n * by instantiating it and injecting its dependencies.\r\n *\r\n * @param {String} command\r\n * @param {Function} a constructor for a {@link CommandHandler}\r\n */\r\nCommandStack.prototype.registerHandler = function(command, handlerCls) {\r\n\r\n  if (!command || !handlerCls) {\r\n    throw new Error('command and handlerCls must be defined');\r\n  }\r\n\r\n  var handler = this._injector.instantiate(handlerCls);\r\n  this.register(command, handler);\r\n};\r\n\r\nCommandStack.prototype.canUndo = function() {\r\n  return !!this._getUndoAction();\r\n};\r\n\r\nCommandStack.prototype.canRedo = function() {\r\n  return !!this._getRedoAction();\r\n};\r\n\r\n////// stack access  //////////////////////////////////////\r\n\r\nCommandStack.prototype._getRedoAction = function() {\r\n  return this._stack[this._stackIdx + 1];\r\n};\r\n\r\n\r\nCommandStack.prototype._getUndoAction = function() {\r\n  return this._stack[this._stackIdx];\r\n};\r\n\r\n\r\n////// internal functionality /////////////////////////////\r\n\r\nCommandStack.prototype._internalUndo = function(action) {\r\n  var self = this;\r\n\r\n  var command = action.command,\r\n      context = action.context;\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  // guard against illegal nested command stack invocations\r\n  this._atomicDo(function() {\r\n    self._fire(command, 'revert', action);\r\n\r\n    if (handler.revert) {\r\n      self._markDirty(handler.revert(context));\r\n    }\r\n\r\n    self._revertedAction(action);\r\n\r\n    self._fire(command, 'reverted', action);\r\n  });\r\n};\r\n\r\n\r\nCommandStack.prototype._fire = function(command, qualifier, event) {\r\n  if (arguments.length < 3) {\r\n    event = qualifier;\r\n    qualifier = null;\r\n  }\r\n\r\n  var names = qualifier ? [ command + '.' + qualifier, qualifier ] : [ command ],\r\n      i, name, result;\r\n\r\n  event = assign(new InternalEvent(), event);\r\n\r\n  for (i = 0; (name = names[i]); i++) {\r\n    result = this._eventBus.fire('commandStack.' + name, event);\r\n\r\n    if (event.cancelBubble) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nCommandStack.prototype._createId = function() {\r\n  return this._uid++;\r\n};\r\n\r\nCommandStack.prototype._atomicDo = function(fn) {\r\n\r\n  var execution = this._currentExecution;\r\n\r\n  execution.atomic = true;\r\n\r\n  try {\r\n    fn();\r\n  } finally {\r\n    execution.atomic = false;\r\n  }\r\n};\r\n\r\nCommandStack.prototype._internalExecute = function(action, redo) {\r\n  var self = this;\r\n\r\n  var command = action.command,\r\n      context = action.context;\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  if (!handler) {\r\n    throw new Error('no command handler registered for <' + command + '>');\r\n  }\r\n\r\n  this._pushAction(action);\r\n\r\n  if (!redo) {\r\n    this._fire(command, 'preExecute', action);\r\n\r\n    if (handler.preExecute) {\r\n      handler.preExecute(context);\r\n    }\r\n\r\n    this._fire(command, 'preExecuted', action);\r\n  }\r\n\r\n  // guard against illegal nested command stack invocations\r\n  this._atomicDo(function() {\r\n\r\n    self._fire(command, 'execute', action);\r\n\r\n    if (handler.execute) {\r\n      // actual execute + mark return results as dirty\r\n      self._markDirty(handler.execute(context));\r\n    }\r\n\r\n    // log to stack\r\n    self._executedAction(action, redo);\r\n\r\n    self._fire(command, 'executed', action);\r\n  });\r\n\r\n  if (!redo) {\r\n    this._fire(command, 'postExecute', action);\r\n\r\n    if (handler.postExecute) {\r\n      handler.postExecute(context);\r\n    }\r\n\r\n    this._fire(command, 'postExecuted', action);\r\n  }\r\n\r\n  this._popAction(action);\r\n};\r\n\r\n\r\nCommandStack.prototype._pushAction = function(action) {\r\n\r\n  var execution = this._currentExecution,\r\n      actions = execution.actions;\r\n\r\n  var baseAction = actions[0];\r\n\r\n  if (execution.atomic) {\r\n    throw new Error('illegal invocation in <execute> or <revert> phase (action: ' + action.command + ')');\r\n  }\r\n\r\n  if (!action.id) {\r\n    action.id = (baseAction && baseAction.id) || this._createId();\r\n  }\r\n\r\n  actions.push(action);\r\n};\r\n\r\n\r\nCommandStack.prototype._popAction = function() {\r\n  var execution = this._currentExecution,\r\n      actions = execution.actions,\r\n      dirty = execution.dirty;\r\n\r\n  actions.pop();\r\n\r\n  if (!actions.length) {\r\n    this._eventBus.fire('elements.changed', { elements: unique(dirty) });\r\n\r\n    dirty.length = 0;\r\n\r\n    this._fire('changed');\r\n  }\r\n};\r\n\r\n\r\nCommandStack.prototype._markDirty = function(elements) {\r\n  var execution = this._currentExecution;\r\n\r\n  if (!elements) {\r\n    return;\r\n  }\r\n\r\n  elements = isArray(elements) ? elements : [ elements ];\r\n\r\n  execution.dirty = execution.dirty.concat(elements);\r\n};\r\n\r\n\r\nCommandStack.prototype._executedAction = function(action, redo) {\r\n  var stackIdx = ++this._stackIdx;\r\n\r\n  if (!redo) {\r\n    this._stack.splice(stackIdx, this._stack.length, action);\r\n  }\r\n};\r\n\r\n\r\nCommandStack.prototype._revertedAction = function(action) {\r\n  this._stackIdx--;\r\n};\r\n\r\n\r\nCommandStack.prototype._getHandler = function(command) {\r\n  return this._handlerMap[command];\r\n};\r\n\r\nCommandStack.prototype._setHandler = function(command, handler) {\r\n  if (!command || !handler) {\r\n    throw new Error('command and handler required');\r\n  }\r\n\r\n  if (this._handlerMap[command]) {\r\n    throw new Error('overriding handler for command <' + command + '>');\r\n  }\r\n\r\n  this._handlerMap[command] = handler;\r\n};\r\n","module.exports = {\r\n  commandStack: [ 'type', require(120) ]\r\n};\r\n","'use strict';\r\n\r\nvar isNumber = require(425),\r\n    assign = require(431),\r\n    forEach = require(303),\r\n    every = require(300),\r\n    debounce = require(313);\r\n\r\nvar Collections = require(263),\r\n    Elements = require(266);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477),\r\n    svgTransform = require(481);\r\n\r\nvar createMatrix = require(478).createMatrix;\r\n\r\n\r\nfunction round(number, resolution) {\r\n  return Math.round(number * resolution) / resolution;\r\n}\r\n\r\nfunction ensurePx(number) {\r\n  return isNumber(number) ? number + 'px' : number;\r\n}\r\n\r\n/**\r\n * Creates a HTML container element for a SVG element with\r\n * the given configuration\r\n *\r\n * @param  {Object} options\r\n * @return {HTMLElement} the container element\r\n */\r\nfunction createContainer(options) {\r\n\r\n  options = assign({}, { width: '100%', height: '100%' }, options);\r\n\r\n  var container = options.container || document.body;\r\n\r\n  // create a <div> around the svg element with the respective size\r\n  // this way we can always get the correct container size\r\n  // (this is impossible for <svg> elements at the moment)\r\n  var parent = document.createElement('div');\r\n  parent.setAttribute('class', 'djs-container');\r\n\r\n  assign(parent.style, {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    width: ensurePx(options.width),\r\n    height: ensurePx(options.height)\r\n  });\r\n\r\n  container.appendChild(parent);\r\n\r\n  return parent;\r\n}\r\n\r\nfunction createGroup(parent, cls) {\r\n  var group = svgCreate('g');\r\n  svgClasses(group).add(cls);\r\n\r\n  svgAppend(parent, group);\r\n\r\n  return group;\r\n}\r\n\r\nvar BASE_LAYER = 'base';\r\n\r\n\r\nvar REQUIRED_MODEL_ATTRS = {\r\n  shape: [ 'x', 'y', 'width', 'height' ],\r\n  connection: [ 'waypoints' ]\r\n};\r\n\r\n/**\r\n * The main drawing canvas.\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @emits Canvas#canvas.init\r\n *\r\n * @param {Object} config\r\n * @param {EventBus} eventBus\r\n * @param {GraphicsFactory} graphicsFactory\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction Canvas(config, eventBus, graphicsFactory, elementRegistry) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n\r\n  this._init(config || {});\r\n}\r\n\r\nCanvas.$inject = [ 'config.canvas', 'eventBus', 'graphicsFactory', 'elementRegistry' ];\r\n\r\nmodule.exports = Canvas;\r\n\r\n\r\nCanvas.prototype._init = function(config) {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  // Creates a <svg> element that is wrapped into a <div>.\r\n  // This way we are always able to correctly figure out the size of the svg element\r\n  // by querying the parent node.\r\n  //\r\n  // (It is not possible to get the size of a svg element cross browser @ 2014-04-01)\r\n  //\r\n  // <div class=\"djs-container\" style=\"width: {desired-width}, height: {desired-height}\">\r\n  //   <svg width=\"100%\" height=\"100%\">\r\n  //    ...\r\n  //   </svg>\r\n  // </div>\r\n\r\n  // html container\r\n  var container = this._container = createContainer(config);\r\n\r\n  var svg = this._svg = svgCreate('svg');\r\n  svgAttr(svg, { width: '100%', height: '100%' });\r\n\r\n  svgAppend(container, svg);\r\n\r\n  var viewport = this._viewport = createGroup(svg, 'viewport');\r\n\r\n  this._layers = {};\r\n\r\n  // debounce canvas.viewbox.changed events\r\n  // for smoother diagram interaction\r\n  if (config.deferUpdate !== false) {\r\n    this._viewboxChanged = debounce(this._viewboxChanged, 300);\r\n  }\r\n\r\n  eventBus.on('diagram.init', function() {\r\n\r\n    /**\r\n     * An event indicating that the canvas is ready to be drawn on.\r\n     *\r\n     * @memberOf Canvas\r\n     *\r\n     * @event canvas.init\r\n     *\r\n     * @type {Object}\r\n     * @property {Snap<SVGSVGElement>} svg the created svg element\r\n     * @property {Snap<SVGGroup>} viewport the direct parent of diagram elements and shapes\r\n     */\r\n    eventBus.fire('canvas.init', {\r\n      svg: svg,\r\n      viewport: viewport\r\n    });\r\n\r\n    // fire this in order for certain components to check\r\n    // if they need to be adjusted due the canvas size\r\n    this.resized();\r\n\r\n  }, this);\r\n\r\n  eventBus.on('diagram.destroy', 500, this._destroy, this);\r\n  eventBus.on('diagram.clear', 500, this._clear, this);\r\n};\r\n\r\nCanvas.prototype._destroy = function(emit) {\r\n  this._eventBus.fire('canvas.destroy', {\r\n    svg: this._svg,\r\n    viewport: this._viewport\r\n  });\r\n\r\n  var parent = this._container.parentNode;\r\n\r\n  if (parent) {\r\n    parent.removeChild(this._container);\r\n  }\r\n\r\n  delete this._svg;\r\n  delete this._container;\r\n  delete this._layers;\r\n  delete this._rootElement;\r\n  delete this._viewport;\r\n};\r\n\r\nCanvas.prototype._clear = function() {\r\n\r\n  var self = this;\r\n\r\n  var allElements = this._elementRegistry.getAll();\r\n\r\n  // remove all elements\r\n  allElements.forEach(function(element) {\r\n    var type = Elements.getType(element);\r\n\r\n    if (type === 'root') {\r\n      self.setRootElement(null, true);\r\n    } else {\r\n      self._removeElement(element, type);\r\n    }\r\n  });\r\n\r\n  // force recomputation of view box\r\n  delete this._cachedViewbox;\r\n};\r\n\r\n/**\r\n * Returns the default layer on which\r\n * all elements are drawn.\r\n *\r\n * @returns {Snap<SVGGroup>}\r\n */\r\nCanvas.prototype.getDefaultLayer = function() {\r\n  return this.getLayer(BASE_LAYER);\r\n};\r\n\r\n/**\r\n * Returns a layer that is used to draw elements\r\n * or annotations on it.\r\n *\r\n * @param  {String} name\r\n *\r\n * @returns {Snap<SVGGroup>}\r\n */\r\nCanvas.prototype.getLayer = function(name) {\r\n\r\n  if (!name) {\r\n    throw new Error('must specify a name');\r\n  }\r\n\r\n  var layer = this._layers[name];\r\n  if (!layer) {\r\n    layer = this._layers[name] = createGroup(this._viewport, 'layer-' + name);\r\n  }\r\n\r\n  return layer;\r\n};\r\n\r\n\r\n/**\r\n * Returns the html element that encloses the\r\n * drawing canvas.\r\n *\r\n * @return {DOMNode}\r\n */\r\nCanvas.prototype.getContainer = function() {\r\n  return this._container;\r\n};\r\n\r\n\r\n/////////////// markers ///////////////////////////////////\r\n\r\nCanvas.prototype._updateMarker = function(element, marker, add) {\r\n  var container;\r\n\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  // we need to access all\r\n  container = this._elementRegistry._elements[element.id];\r\n\r\n  if (!container) {\r\n    return;\r\n  }\r\n\r\n  forEach([ container.gfx, container.secondaryGfx ], function(gfx) {\r\n    if (gfx) {\r\n      // invoke either addClass or removeClass based on mode\r\n      if (add) {\r\n        svgClasses(gfx).add(marker);\r\n      } else {\r\n        svgClasses(gfx).remove(marker);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * An event indicating that a marker has been updated for an element\r\n   *\r\n   * @event element.marker.update\r\n   * @type {Object}\r\n   * @property {djs.model.Element} element the shape\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   * @property {String} marker\r\n   * @property {Boolean} add true if the marker was added, false if it got removed\r\n   */\r\n  this._eventBus.fire('element.marker.update', { element: element, gfx: container.gfx, marker: marker, add: !!add });\r\n};\r\n\r\n\r\n/**\r\n * Adds a marker to an element (basically a css class).\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @example\r\n * canvas.addMarker('foo', 'some-marker');\r\n *\r\n * var fooGfx = canvas.getGraphics('foo');\r\n *\r\n * fooGfx; // <g class=\"... some-marker\"> ... </g>\r\n *\r\n * @param {String|djs.model.Base} element\r\n * @param {String} marker\r\n */\r\nCanvas.prototype.addMarker = function(element, marker) {\r\n  this._updateMarker(element, marker, true);\r\n};\r\n\r\n\r\n/**\r\n * Remove a marker from an element.\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.removeMarker = function(element, marker) {\r\n  this._updateMarker(element, marker, false);\r\n};\r\n\r\n/**\r\n * Check the existence of a marker on element.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.hasMarker = function(element, marker) {\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  var gfx = this.getGraphics(element);\r\n\r\n  return svgClasses(gfx).has(marker);\r\n};\r\n\r\n/**\r\n * Toggles a marker on an element.\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.toggleMarker = function(element, marker) {\r\n  if (this.hasMarker(element, marker)) {\r\n    this.removeMarker(element, marker);\r\n  } else {\r\n    this.addMarker(element, marker);\r\n  }\r\n};\r\n\r\nCanvas.prototype.getRootElement = function() {\r\n  if (!this._rootElement) {\r\n    this.setRootElement({ id: '__implicitroot', children: [] });\r\n  }\r\n\r\n  return this._rootElement;\r\n};\r\n\r\n\r\n\r\n//////////////// root element handling ///////////////////////////\r\n\r\n/**\r\n * Sets a given element as the new root element for the canvas\r\n * and returns the new root element.\r\n *\r\n * @param {Object|djs.model.Root} element\r\n * @param {Boolean} [override] whether to override the current root element, if any\r\n *\r\n * @return {Object|djs.model.Root} new root element\r\n */\r\nCanvas.prototype.setRootElement = function(element, override) {\r\n\r\n  if (element) {\r\n    this._ensureValid('root', element);\r\n  }\r\n\r\n  var currentRoot = this._rootElement,\r\n      elementRegistry = this._elementRegistry,\r\n      eventBus = this._eventBus;\r\n\r\n  if (currentRoot) {\r\n    if (!override) {\r\n      throw new Error('rootElement already set, need to specify override');\r\n    }\r\n\r\n    // simulate element remove event sequence\r\n    eventBus.fire('root.remove', { element: currentRoot });\r\n    eventBus.fire('root.removed', { element: currentRoot });\r\n\r\n    elementRegistry.remove(currentRoot);\r\n  }\r\n\r\n  if (element) {\r\n    var gfx = this.getDefaultLayer();\r\n\r\n    // resemble element add event sequence\r\n    eventBus.fire('root.add', { element: element });\r\n\r\n    elementRegistry.add(element, gfx, this._svg);\r\n\r\n    eventBus.fire('root.added', { element: element, gfx: gfx });\r\n  }\r\n\r\n  this._rootElement = element;\r\n\r\n  return element;\r\n};\r\n\r\n\r\n\r\n///////////// add functionality ///////////////////////////////\r\n\r\nCanvas.prototype._ensureValid = function(type, element) {\r\n  if (!element.id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (this._elementRegistry.get(element.id)) {\r\n    throw new Error('element with id ' + element.id + ' already exists');\r\n  }\r\n\r\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\r\n\r\n  var valid = every(requiredAttrs, function(attr) {\r\n    return typeof element[attr] !== 'undefined';\r\n  });\r\n\r\n  if (!valid) {\r\n    throw new Error(\r\n      'must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\r\n  }\r\n};\r\n\r\nCanvas.prototype._setParent = function(element, parent, parentIndex) {\r\n  Collections.add(parent.children, element, parentIndex);\r\n  element.parent = parent;\r\n};\r\n\r\n/**\r\n * Adds an element to the canvas.\r\n *\r\n * This wires the parent <-> child relationship between the element and\r\n * a explicitly specified parent or an implicit root element.\r\n *\r\n * During add it emits the events\r\n *\r\n *  * <{type}.add> (element, parent)\r\n *  * <{type}.added> (element, gfx)\r\n *\r\n * Extensions may hook into these events to perform their magic.\r\n *\r\n * @param {String} type\r\n * @param {Object|djs.model.Base} element\r\n * @param {Object|djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {Object|djs.model.Base} the added element\r\n */\r\nCanvas.prototype._addElement = function(type, element, parent, parentIndex) {\r\n\r\n  parent = parent || this.getRootElement();\r\n\r\n  var eventBus = this._eventBus,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  this._ensureValid(type, element);\r\n\r\n  eventBus.fire(type + '.add', { element: element, parent: parent });\r\n\r\n  this._setParent(element, parent, parentIndex);\r\n\r\n  // create graphics\r\n  var gfx = graphicsFactory.create(type, element);\r\n\r\n  this._elementRegistry.add(element, gfx);\r\n\r\n  // update its visual\r\n  graphicsFactory.update(type, element, gfx);\r\n\r\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Adds a shape to the canvas\r\n *\r\n * @param {Object|djs.model.Shape} shape to add to the diagram\r\n * @param {djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {djs.model.Shape} the added shape\r\n */\r\nCanvas.prototype.addShape = function(shape, parent, parentIndex) {\r\n  return this._addElement('shape', shape, parent, parentIndex);\r\n};\r\n\r\n/**\r\n * Adds a connection to the canvas\r\n *\r\n * @param {Object|djs.model.Connection} connection to add to the diagram\r\n * @param {djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {djs.model.Connection} the added connection\r\n */\r\nCanvas.prototype.addConnection = function(connection, parent, parentIndex) {\r\n  return this._addElement('connection', connection, parent, parentIndex);\r\n};\r\n\r\n\r\n/**\r\n * Internal remove element\r\n */\r\nCanvas.prototype._removeElement = function(element, type) {\r\n\r\n  var elementRegistry = this._elementRegistry,\r\n      graphicsFactory = this._graphicsFactory,\r\n      eventBus = this._eventBus;\r\n\r\n  element = elementRegistry.get(element.id || element);\r\n\r\n  if (!element) {\r\n    // element was removed already\r\n    return;\r\n  }\r\n\r\n  eventBus.fire(type + '.remove', { element: element });\r\n\r\n  graphicsFactory.remove(element);\r\n\r\n  // unset parent <-> child relationship\r\n  Collections.remove(element.parent && element.parent.children, element);\r\n  element.parent = null;\r\n\r\n  eventBus.fire(type + '.removed', { element: element });\r\n\r\n  elementRegistry.remove(element);\r\n\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Removes a shape from the canvas\r\n *\r\n * @param {String|djs.model.Shape} shape or shape id to be removed\r\n *\r\n * @return {djs.model.Shape} the removed shape\r\n */\r\nCanvas.prototype.removeShape = function(shape) {\r\n\r\n  /**\r\n   * An event indicating that a shape is about to be removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event shape.remove\r\n   * @type {Object}\r\n   * @property {djs.model.Shape} element the shape descriptor\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   */\r\n\r\n  /**\r\n   * An event indicating that a shape has been removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event shape.removed\r\n   * @type {Object}\r\n   * @property {djs.model.Shape} element the shape descriptor\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   */\r\n  return this._removeElement(shape, 'shape');\r\n};\r\n\r\n\r\n/**\r\n * Removes a connection from the canvas\r\n *\r\n * @param {String|djs.model.Connection} connection or connection id to be removed\r\n *\r\n * @return {djs.model.Connection} the removed connection\r\n */\r\nCanvas.prototype.removeConnection = function(connection) {\r\n\r\n  /**\r\n   * An event indicating that a connection is about to be removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event connection.remove\r\n   * @type {Object}\r\n   * @property {djs.model.Connection} element the connection descriptor\r\n   * @property {Object} gfx the graphical representation of the connection\r\n   */\r\n\r\n  /**\r\n   * An event indicating that a connection has been removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event connection.removed\r\n   * @type {Object}\r\n   * @property {djs.model.Connection} element the connection descriptor\r\n   * @property {Object} gfx the graphical representation of the connection\r\n   */\r\n  return this._removeElement(connection, 'connection');\r\n};\r\n\r\n\r\n/**\r\n * Return the graphical object underlaying a certain diagram element\r\n *\r\n * @param {String|djs.model.Base} element descriptor of the element\r\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\r\n *\r\n * @return {SVGElement}\r\n */\r\nCanvas.prototype.getGraphics = function(element, secondary) {\r\n  return this._elementRegistry.getGraphics(element, secondary);\r\n};\r\n\r\n\r\n/**\r\n * Perform a viewbox update via a given change function.\r\n *\r\n * @param {Function} changeFn\r\n */\r\nCanvas.prototype._changeViewbox = function(changeFn) {\r\n\r\n  // notify others of the upcoming viewbox change\r\n  this._eventBus.fire('canvas.viewbox.changing');\r\n\r\n  // perform actual change\r\n  changeFn.apply(this);\r\n\r\n  // reset the cached viewbox so that\r\n  // a new get operation on viewbox or zoom\r\n  // triggers a viewbox re-computation\r\n  this._cachedViewbox = null;\r\n\r\n  // notify others of the change; this step\r\n  // may or may not be debounced\r\n  this._viewboxChanged();\r\n};\r\n\r\nCanvas.prototype._viewboxChanged = function() {\r\n  this._eventBus.fire('canvas.viewbox.changed', { viewbox: this.viewbox() });\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the view box of the canvas, i.e. the\r\n * area that is currently displayed.\r\n *\r\n * The getter may return a cached viewbox (if it is currently\r\n * changing). To force a recomputation, pass `false` as the first argument.\r\n *\r\n * @example\r\n *\r\n * canvas.viewbox({ x: 100, y: 100, width: 500, height: 500 })\r\n *\r\n * // sets the visible area of the diagram to (100|100) -> (600|100)\r\n * // and and scales it according to the diagram width\r\n *\r\n * var viewbox = canvas.viewbox(); // pass `false` to force recomputing the box.\r\n *\r\n * console.log(viewbox);\r\n * // {\r\n * //   inner: Dimensions,\r\n * //   outer: Dimensions,\r\n * //   scale,\r\n * //   x, y,\r\n * //   width, height\r\n * // }\r\n *\r\n * // if the current diagram is zoomed and scrolled, you may reset it to the\r\n * // default zoom via this method, too:\r\n *\r\n * var zoomedAndScrolledViewbox = canvas.viewbox();\r\n *\r\n * canvas.viewbox({\r\n *   x: 0,\r\n *   y: 0,\r\n *   width: zoomedAndScrolledViewbox.outer.width,\r\n *   height: zoomedAndScrolledViewbox.outer.height\r\n * });\r\n *\r\n * @param  {Object} [box] the new view box to set\r\n * @param  {Number} box.x the top left X coordinate of the canvas visible in view box\r\n * @param  {Number} box.y the top left Y coordinate of the canvas visible in view box\r\n * @param  {Number} box.width the visible width\r\n * @param  {Number} box.height\r\n *\r\n * @return {Object} the current view box\r\n */\r\nCanvas.prototype.viewbox = function(box) {\r\n\r\n  if (box === undefined && this._cachedViewbox) {\r\n    return this._cachedViewbox;\r\n  }\r\n\r\n  var viewport = this._viewport,\r\n      innerBox,\r\n      outerBox = this.getSize(),\r\n      matrix,\r\n      scale,\r\n      x, y;\r\n\r\n  if (!box) {\r\n    // compute the inner box based on the\r\n    // diagrams default layer. This allows us to exclude\r\n    // external components, such as overlays\r\n    innerBox = this.getDefaultLayer().getBBox();\r\n\r\n    var transform = svgTransform(viewport);\r\n    matrix = transform ? transform.matrix : createMatrix();\r\n    scale = round(matrix.a, 1000);\r\n\r\n    x = round(-matrix.e || 0, 1000);\r\n    y = round(-matrix.f || 0, 1000);\r\n\r\n    box = this._cachedViewbox = {\r\n      x: x ? x / scale : 0,\r\n      y: y ? y / scale : 0,\r\n      width: outerBox.width / scale,\r\n      height: outerBox.height / scale,\r\n      scale: scale,\r\n      inner: {\r\n        width: innerBox.width,\r\n        height: innerBox.height,\r\n        x: innerBox.x,\r\n        y: innerBox.y\r\n      },\r\n      outer: outerBox\r\n    };\r\n\r\n    return box;\r\n  } else {\r\n\r\n    this._changeViewbox(function() {\r\n      scale = Math.min(outerBox.width / box.width, outerBox.height / box.height);\r\n\r\n      var matrix = this._svg.createSVGMatrix()\r\n        .scale(scale)\r\n        .translate(-box.x, -box.y);\r\n\r\n      svgTransform(viewport, matrix);\r\n    });\r\n  }\r\n\r\n  return box;\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the scroll of the canvas.\r\n *\r\n * @param {Object} [delta] the new scroll to apply.\r\n *\r\n * @param {Number} [delta.dx]\r\n * @param {Number} [delta.dy]\r\n */\r\nCanvas.prototype.scroll = function(delta) {\r\n\r\n  var node = this._viewport;\r\n  var matrix = node.getCTM();\r\n\r\n  if (delta) {\r\n    this._changeViewbox(function() {\r\n      delta = assign({ dx: 0, dy: 0 }, delta || {});\r\n\r\n      matrix = this._svg.createSVGMatrix().translate(delta.dx, delta.dy).multiply(matrix);\r\n\r\n      setCTM(node, matrix);\r\n    });\r\n  }\r\n\r\n  return { x: matrix.e, y: matrix.f };\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the current zoom of the canvas, optionally zooming\r\n * to the specified position.\r\n *\r\n * The getter may return a cached zoom level. Call it with `false` as\r\n * the first argument to force recomputation of the current level.\r\n *\r\n * @param {String|Number} [newScale] the new zoom level, either a number, i.e. 0.9,\r\n *                                   or `fit-viewport` to adjust the size to fit the current viewport\r\n * @param {String|Point} [center] the reference point { x: .., y: ..} to zoom to, 'auto' to zoom into mid or null\r\n *\r\n * @return {Number} the current scale\r\n */\r\nCanvas.prototype.zoom = function(newScale, center) {\r\n\r\n  if (!newScale) {\r\n    return this.viewbox(newScale).scale;\r\n  }\r\n\r\n  if (newScale === 'fit-viewport') {\r\n    return this._fitViewport(center);\r\n  }\r\n\r\n  var outer,\r\n      matrix;\r\n\r\n  this._changeViewbox(function() {\r\n\r\n    if (typeof center !== 'object') {\r\n      outer = this.viewbox().outer;\r\n\r\n      center = {\r\n        x: outer.width / 2,\r\n        y: outer.height / 2\r\n      };\r\n    }\r\n\r\n    matrix = this._setZoom(newScale, center);\r\n  });\r\n\r\n  return round(matrix.a, 1000);\r\n};\r\n\r\nfunction setCTM(node, m) {\r\n  var mstr = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n  node.setAttribute('transform', mstr);\r\n}\r\n\r\nCanvas.prototype._fitViewport = function(center) {\r\n\r\n  var vbox = this.viewbox(),\r\n      outer = vbox.outer,\r\n      inner = vbox.inner,\r\n      newScale,\r\n      newViewbox;\r\n\r\n  // display the complete diagram without zooming in.\r\n  // instead of relying on internal zoom, we perform a\r\n  // hard reset on the canvas viewbox to realize this\r\n  //\r\n  // if diagram does not need to be zoomed in, we focus it around\r\n  // the diagram origin instead\r\n\r\n  if (inner.x >= 0 &&\r\n      inner.y >= 0 &&\r\n      inner.x + inner.width <= outer.width &&\r\n      inner.y + inner.height <= outer.height &&\r\n      !center) {\r\n\r\n    newViewbox = {\r\n      x: 0,\r\n      y: 0,\r\n      width: Math.max(inner.width + inner.x, outer.width),\r\n      height: Math.max(inner.height + inner.y, outer.height)\r\n    };\r\n  } else {\r\n\r\n    newScale = Math.min(1, outer.width / inner.width, outer.height / inner.height);\r\n    newViewbox = {\r\n      x: inner.x + (center ? inner.width / 2 - outer.width / newScale / 2 : 0),\r\n      y: inner.y + (center ? inner.height / 2 - outer.height / newScale / 2 : 0),\r\n      width: outer.width / newScale,\r\n      height: outer.height / newScale\r\n    };\r\n  }\r\n\r\n  this.viewbox(newViewbox);\r\n\r\n  return this.viewbox(false).scale;\r\n};\r\n\r\n\r\nCanvas.prototype._setZoom = function(scale, center) {\r\n\r\n  var svg = this._svg,\r\n      viewport = this._viewport;\r\n\r\n  var matrix = svg.createSVGMatrix();\r\n  var point = svg.createSVGPoint();\r\n\r\n  var centerPoint,\r\n      originalPoint,\r\n      currentMatrix,\r\n      scaleMatrix,\r\n      newMatrix;\r\n\r\n  currentMatrix = viewport.getCTM();\r\n\r\n  var currentScale = currentMatrix.a;\r\n\r\n  if (center) {\r\n    centerPoint = assign(point, center);\r\n\r\n    // revert applied viewport transformations\r\n    originalPoint = centerPoint.matrixTransform(currentMatrix.inverse());\r\n\r\n    // create scale matrix\r\n    scaleMatrix = matrix\r\n                    .translate(originalPoint.x, originalPoint.y)\r\n                    .scale(1 / currentScale * scale)\r\n                    .translate(-originalPoint.x, -originalPoint.y);\r\n\r\n    newMatrix = currentMatrix.multiply(scaleMatrix);\r\n  } else {\r\n    newMatrix = matrix.scale(scale);\r\n  }\r\n\r\n  setCTM(this._viewport, newMatrix);\r\n\r\n  return newMatrix;\r\n};\r\n\r\n\r\n/**\r\n * Returns the size of the canvas\r\n *\r\n * @return {Dimensions}\r\n */\r\nCanvas.prototype.getSize = function() {\r\n  return {\r\n    width: this._container.clientWidth,\r\n    height: this._container.clientHeight\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Return the absolute bounding box for the given element\r\n *\r\n * The absolute bounding box may be used to display overlays in the\r\n * callers (browser) coordinate system rather than the zoomed in/out\r\n * canvas coordinates.\r\n *\r\n * @param  {ElementDescriptor} element\r\n * @return {Bounds} the absolute bounding box\r\n */\r\nCanvas.prototype.getAbsoluteBBox = function(element) {\r\n  var vbox = this.viewbox();\r\n  var bbox;\r\n\r\n  // connection\r\n  // use svg bbox\r\n  if (element.waypoints) {\r\n    var gfx = this.getGraphics(element);\r\n\r\n    bbox = gfx.getBBox();\r\n  }\r\n  // shapes\r\n  // use data\r\n  else {\r\n    bbox = element;\r\n  }\r\n\r\n  var x = bbox.x * vbox.scale - vbox.x * vbox.scale;\r\n  var y = bbox.y * vbox.scale - vbox.y * vbox.scale;\r\n\r\n  var width = bbox.width * vbox.scale;\r\n  var height = bbox.height * vbox.scale;\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    width: width,\r\n    height: height\r\n  };\r\n};\r\n\r\n/**\r\n * Fires an event in order other modules can react to the\r\n * canvas resizing\r\n */\r\nCanvas.prototype.resized = function() {\r\n\r\n  // force recomputation of view box\r\n  delete this._cachedViewbox;\r\n\r\n  this._eventBus.fire('canvas.resized');\r\n};\r\n","'use strict';\r\n\r\nvar Model = require(254);\r\n\r\nvar assign = require(431);\r\n\r\n/**\r\n * A factory for diagram-js shapes\r\n */\r\nfunction ElementFactory() {\r\n  this._uid = 12;\r\n}\r\n\r\nmodule.exports = ElementFactory;\r\n\r\n\r\nElementFactory.prototype.createRoot = function(attrs) {\r\n  return this.create('root', attrs);\r\n};\r\n\r\nElementFactory.prototype.createLabel = function(attrs) {\r\n  return this.create('label', attrs);\r\n};\r\n\r\nElementFactory.prototype.createShape = function(attrs) {\r\n  return this.create('shape', attrs);\r\n};\r\n\r\nElementFactory.prototype.createConnection = function(attrs) {\r\n  return this.create('connection', attrs);\r\n};\r\n\r\n/**\r\n * Create a model element with the given type and\r\n * a number of pre-set attributes.\r\n *\r\n * @param  {String} type\r\n * @param  {Object} attrs\r\n * @return {djs.model.Base} the newly created model instance\r\n */\r\nElementFactory.prototype.create = function(type, attrs) {\r\n\r\n  attrs = assign({}, attrs || {});\r\n\r\n  if (!attrs.id) {\r\n    attrs.id = type + '_' + (this._uid++);\r\n  }\r\n\r\n  return Model.create(type, attrs);\r\n};","'use strict';\r\n\r\nvar ELEMENT_ID = 'data-element-id';\r\n\r\nvar svgAttr = require(473);\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A registry that keeps track of all shapes in the diagram.\r\n */\r\nfunction ElementRegistry(eventBus) {\r\n  this._elements = {};\r\n\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nElementRegistry.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = ElementRegistry;\r\n\r\n/**\r\n * Register a pair of (element, gfx, (secondaryGfx)).\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} gfx\r\n * @param {SVGElement} [secondaryGfx] optional other element to register, too\r\n */\r\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\r\n\r\n  var id = element.id;\r\n\r\n  this._validateId(id);\r\n\r\n  // associate dom node with element\r\n  svgAttr(gfx, ELEMENT_ID, id);\r\n\r\n  if (secondaryGfx) {\r\n    svgAttr(secondaryGfx, ELEMENT_ID, id);\r\n  }\r\n\r\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\r\n};\r\n\r\n/**\r\n * Removes an element from the registry.\r\n *\r\n * @param {djs.model.Base} element\r\n */\r\nElementRegistry.prototype.remove = function(element) {\r\n  var elements = this._elements,\r\n      id = element.id || element,\r\n      container = id && elements[id];\r\n\r\n  if (container) {\r\n\r\n    // unset element id on gfx\r\n    svgAttr(container.gfx, ELEMENT_ID, '');\r\n\r\n    if (container.secondaryGfx) {\r\n      svgAttr(container.secondaryGfx, ELEMENT_ID, '');\r\n    }\r\n\r\n    delete elements[id];\r\n  }\r\n};\r\n\r\n/**\r\n * Update the id of an element\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {String} newId\r\n */\r\nElementRegistry.prototype.updateId = function(element, newId) {\r\n\r\n  this._validateId(newId);\r\n\r\n  if (typeof element === 'string') {\r\n    element = this.get(element);\r\n  }\r\n\r\n  this._eventBus.fire('element.updateId', {\r\n    element: element,\r\n    newId: newId\r\n  });\r\n\r\n  var gfx = this.getGraphics(element),\r\n      secondaryGfx = this.getGraphics(element, true);\r\n\r\n  this.remove(element);\r\n\r\n  element.id = newId;\r\n\r\n  this.add(element, gfx, secondaryGfx);\r\n};\r\n\r\n/**\r\n * Return the model element for a given id or graphics.\r\n *\r\n * @example\r\n *\r\n * elementRegistry.get('SomeElementId_1');\r\n * elementRegistry.get(gfx);\r\n *\r\n *\r\n * @param {String|SVGElement} filter for selecting the element\r\n *\r\n * @return {djs.model.Base}\r\n */\r\nElementRegistry.prototype.get = function(filter) {\r\n  var id;\r\n\r\n  if (typeof filter === 'string') {\r\n    id = filter;\r\n  } else {\r\n    id = filter && svgAttr(filter, ELEMENT_ID);\r\n  }\r\n\r\n  var container = this._elements[id];\r\n  return container && container.element;\r\n};\r\n\r\n/**\r\n * Return all elements that match a given filter function.\r\n *\r\n * @param {Function} fn\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.filter = function(fn) {\r\n\r\n  var filtered = [];\r\n\r\n  this.forEach(function(element, gfx) {\r\n    if (fn(element, gfx)) {\r\n      filtered.push(element);\r\n    }\r\n  });\r\n\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Return all rendered model elements.\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.getAll = function() {\r\n  return this.filter(function(e) { return e; });\r\n};\r\n\r\n/**\r\n * Iterate over all diagram elements.\r\n *\r\n * @param {Function} fn\r\n */\r\nElementRegistry.prototype.forEach = function(fn) {\r\n\r\n  var map = this._elements;\r\n\r\n  Object.keys(map).forEach(function(id) {\r\n    var container = map[id],\r\n        element = container.element,\r\n        gfx = container.gfx;\r\n\r\n    return fn(element, gfx);\r\n  });\r\n};\r\n\r\n/**\r\n * Return the graphical representation of an element or its id.\r\n *\r\n * @example\r\n * elementRegistry.getGraphics('SomeElementId_1');\r\n * elementRegistry.getGraphics(rootElement); // <g ...>\r\n *\r\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\r\n *\r\n *\r\n * @param {String|djs.model.Base} filter\r\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\r\n *\r\n * @return {SVGElement}\r\n */\r\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\r\n  var id = filter.id || filter;\r\n\r\n  var container = this._elements[id];\r\n  return container && (secondary ? container.secondaryGfx : container.gfx);\r\n};\r\n\r\n/**\r\n * Validate the suitability of the given id and signals a problem\r\n * with an exception.\r\n *\r\n * @param {String} id\r\n *\r\n * @throws {Error} if id is empty or already assigned\r\n */\r\nElementRegistry.prototype._validateId = function(id) {\r\n  if (!id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (this._elements[id]) {\r\n    throw new Error('element with id ' + id + ' already added');\r\n  }\r\n};\r\n","'use strict';\r\n\r\nvar isFunction = require(423),\r\n    isArray = require(422),\r\n    isNumber = require(425),\r\n    bind = require(312),\r\n    assign = require(431);\r\n\r\nvar FN_REF = '__fn';\r\n\r\nvar DEFAULT_PRIORITY = 1000;\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\n/**\r\n * A general purpose event bus.\r\n *\r\n * This component is used to communicate across a diagram instance.\r\n * Other parts of a diagram can use it to listen to and broadcast events.\r\n *\r\n *\r\n * ## Registering for Events\r\n *\r\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\r\n * methods to register for events. {@link EventBus#off} can be used to\r\n * remove event registrations. Listeners receive an instance of {@link Event}\r\n * as the first argument. It allows them to hook into the event execution.\r\n *\r\n * ```javascript\r\n *\r\n * // listen for event\r\n * eventBus.on('foo', function(event) {\r\n *\r\n *   // access event type\r\n *   event.type; // 'foo'\r\n *\r\n *   // stop propagation to other listeners\r\n *   event.stopPropagation();\r\n *\r\n *   // prevent event default\r\n *   event.preventDefault();\r\n * });\r\n *\r\n * // listen for event with custom payload\r\n * eventBus.on('bar', function(event, payload) {\r\n *   console.log(payload);\r\n * });\r\n *\r\n * // listen for event returning value\r\n * eventBus.on('foobar', function(event) {\r\n *\r\n *   // stop event propagation + prevent default\r\n *   return false;\r\n *\r\n *   // stop event propagation + return custom result\r\n *   return {\r\n *     complex: 'listening result'\r\n *   };\r\n * });\r\n *\r\n *\r\n * // listen with custom priority (default=1000, higher is better)\r\n * eventBus.on('priorityfoo', 1500, function(event) {\r\n *   console.log('invoked first!');\r\n * });\r\n *\r\n *\r\n * // listen for event and pass the context (`this`)\r\n * eventBus.on('foobar', function(event) {\r\n *   this.foo();\r\n * }, this);\r\n * ```\r\n *\r\n *\r\n * ## Emitting Events\r\n *\r\n * Events can be emitted via the event bus using {@link EventBus#fire}.\r\n *\r\n * ```javascript\r\n *\r\n * // false indicates that the default action\r\n * // was prevented by listeners\r\n * if (eventBus.fire('foo') === false) {\r\n *   console.log('default has been prevented!');\r\n * };\r\n *\r\n *\r\n * // custom args + return value listener\r\n * eventBus.on('sum', function(event, a, b) {\r\n *   return a + b;\r\n * });\r\n *\r\n * // you can pass custom arguments + retrieve result values.\r\n * var sum = eventBus.fire('sum', 1, 2);\r\n * console.log(sum); // 3\r\n * ```\r\n */\r\nfunction EventBus() {\r\n  this._listeners = {};\r\n\r\n  // cleanup on destroy on lowest priority to allow\r\n  // message passing until the bitter end\r\n  this.on('diagram.destroy', 1, this._destroy, this);\r\n}\r\n\r\nmodule.exports = EventBus;\r\n\r\n\r\n/**\r\n * Register an event listener for events with the given name.\r\n *\r\n * The callback will be invoked with `event, ...additionalArguments`\r\n * that have been passed to {@link EventBus#fire}.\r\n *\r\n * Returning false from a listener will prevent the events default action\r\n * (if any is specified). To stop an event from being processed further in\r\n * other listeners execute {@link Event#stopPropagation}.\r\n *\r\n * Returning anything but `undefined` from a listener will stop the listener propagation.\r\n *\r\n * @param {String|Array<String>} events\r\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\r\n * @param {Function} callback\r\n * @param {Object} [that] Pass context (`this`) to the callback\r\n */\r\nEventBus.prototype.on = function(events, priority, callback, that) {\r\n\r\n  events = isArray(events) ? events : [ events ];\r\n\r\n  if (isFunction(priority)) {\r\n    that = callback;\r\n    callback = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (!isNumber(priority)) {\r\n    throw new Error('priority must be a number');\r\n  }\r\n\r\n  var actualCallback = callback;\r\n\r\n  if (that) {\r\n    actualCallback = bind(callback, that);\r\n\r\n    // make sure we remember and are able to remove\r\n    // bound callbacks via {@link #off} using the original\r\n    // callback\r\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\r\n  }\r\n\r\n  var self = this,\r\n      listener = { priority: priority, callback: actualCallback };\r\n\r\n  events.forEach(function(e) {\r\n    self._addListener(e, listener);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Register an event listener that is executed only once.\r\n *\r\n * @param {String} event the event name to register for\r\n * @param {Function} callback the callback to execute\r\n * @param {Object} [that] Pass context (`this`) to the callback\r\n */\r\nEventBus.prototype.once = function(event, priority, callback, that) {\r\n  var self = this;\r\n\r\n  if (isFunction(priority)) {\r\n    that = callback;\r\n    callback = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (!isNumber(priority)) {\r\n    throw new Error('priority must be a number');\r\n  }\r\n\r\n  function wrappedCallback() {\r\n    self.off(event, wrappedCallback);\r\n    return callback.apply(that, arguments);\r\n  }\r\n\r\n  // make sure we remember and are able to remove\r\n  // bound callbacks via {@link #off} using the original\r\n  // callback\r\n  wrappedCallback[FN_REF] = callback;\r\n\r\n  this.on(event, priority, wrappedCallback);\r\n};\r\n\r\n\r\n/**\r\n * Removes event listeners by event and callback.\r\n *\r\n * If no callback is given, all listeners for a given event name are being removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} [callback]\r\n */\r\nEventBus.prototype.off = function(event, callback) {\r\n  var listeners = this._getListeners(event),\r\n      listener,\r\n      listenerCallback,\r\n      idx;\r\n\r\n  if (callback) {\r\n\r\n    // move through listeners from back to front\r\n    // and remove matching listeners\r\n    for (idx = listeners.length - 1; (listener = listeners[idx]); idx--) {\r\n      listenerCallback = listener.callback;\r\n\r\n      if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\r\n        listeners.splice(idx, 1);\r\n      }\r\n    }\r\n  } else {\r\n    // clear listeners\r\n    listeners.length = 0;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Fires a named event.\r\n *\r\n * @example\r\n *\r\n * // fire event by name\r\n * events.fire('foo');\r\n *\r\n * // fire event object with nested type\r\n * var event = { type: 'foo' };\r\n * events.fire(event);\r\n *\r\n * // fire event with explicit type\r\n * var event = { x: 10, y: 20 };\r\n * events.fire('element.moved', event);\r\n *\r\n * // pass additional arguments to the event\r\n * events.on('foo', function(event, bar) {\r\n *   alert(bar);\r\n * });\r\n *\r\n * events.fire({ type: 'foo' }, 'I am bar!');\r\n *\r\n * @param {String} [name] the optional event name\r\n * @param {Object} [event] the event object\r\n * @param {...Object} additional arguments to be passed to the callback functions\r\n *\r\n * @return {Boolean} the events return value, if specified or false if the\r\n *                   default action was prevented by listeners\r\n */\r\nEventBus.prototype.fire = function(type, data) {\r\n\r\n  var event,\r\n      listeners,\r\n      returnValue,\r\n      args;\r\n\r\n  args = slice.call(arguments);\r\n\r\n  if (typeof type === 'object') {\r\n    event = type;\r\n    type = event.type;\r\n  }\r\n\r\n  if (!type) {\r\n    throw new Error('no event type specified');\r\n  }\r\n\r\n  listeners = this._listeners[type];\r\n\r\n  if (!listeners) {\r\n    return;\r\n  }\r\n\r\n  // we make sure we fire instances of our home made\r\n  // events here. We wrap them only once, though\r\n  if (data instanceof Event) {\r\n    // we are fine, we alread have an event\r\n    event = data;\r\n  } else {\r\n    event = new Event();\r\n    event.init(data);\r\n  }\r\n\r\n  // ensure we pass the event as the first parameter\r\n  args[0] = event;\r\n\r\n  // original event type (in case we delegate)\r\n  var originalType = event.type;\r\n\r\n  // update event type before delegation\r\n  if (type !== originalType) {\r\n    event.type = type;\r\n  }\r\n\r\n  try {\r\n    returnValue = this._invokeListeners(event, args, listeners);\r\n  } finally {\r\n    // reset event type after delegation\r\n    if (type !== originalType) {\r\n      event.type = originalType;\r\n    }\r\n  }\r\n\r\n  // set the return value to false if the event default\r\n  // got prevented and no other return value exists\r\n  if (returnValue === undefined && event.defaultPrevented) {\r\n    returnValue = false;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\n\r\nEventBus.prototype.handleError = function(error) {\r\n  return this.fire('error', { error: error }) === false;\r\n};\r\n\r\n\r\nEventBus.prototype._destroy = function() {\r\n  this._listeners = {};\r\n};\r\n\r\nEventBus.prototype._invokeListeners = function(event, args, listeners) {\r\n\r\n  var idx,\r\n      listener,\r\n      returnValue;\r\n\r\n  for (idx = 0; (listener = listeners[idx]); idx++) {\r\n\r\n    // handle stopped propagation\r\n    if (event.cancelBubble) {\r\n      break;\r\n    }\r\n\r\n    returnValue = this._invokeListener(event, args, listener);\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\nEventBus.prototype._invokeListener = function(event, args, listener) {\r\n\r\n  var returnValue;\r\n\r\n  try {\r\n    // returning false prevents the default action\r\n    returnValue = invokeFunction(listener.callback, args);\r\n\r\n    // stop propagation on return value\r\n    if (returnValue !== undefined) {\r\n      event.returnValue = returnValue;\r\n      event.stopPropagation();\r\n    }\r\n\r\n    // prevent default on return false\r\n    if (returnValue === false) {\r\n      event.preventDefault();\r\n    }\r\n  } catch (e) {\r\n    if (!this.handleError(e)) {\r\n      console.error('unhandled error in event listener');\r\n      console.error(e.stack);\r\n\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\n/*\r\n * Add new listener with a certain priority to the list\r\n * of listeners (for the given event).\r\n *\r\n * The semantics of listener registration / listener execution are\r\n * first register, first serve: New listeners will always be inserted\r\n * after existing listeners with the same priority.\r\n *\r\n * Example: Inserting two listeners with priority 1000 and 1300\r\n *\r\n *    * before: [ 1500, 1500, 1000, 1000 ]\r\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\r\n *\r\n * @param {String} event\r\n * @param {Object} listener { priority, callback }\r\n */\r\nEventBus.prototype._addListener = function(event, newListener) {\r\n\r\n  var listeners = this._getListeners(event),\r\n      existingListener,\r\n      idx;\r\n\r\n  // ensure we order listeners by priority from\r\n  // 0 (high) to n > 0 (low)\r\n  for (idx = 0; (existingListener = listeners[idx]); idx++) {\r\n    if (existingListener.priority < newListener.priority) {\r\n\r\n      // prepend newListener at before existingListener\r\n      listeners.splice(idx, 0, newListener);\r\n      return;\r\n    }\r\n  }\r\n\r\n  listeners.push(newListener);\r\n};\r\n\r\n\r\nEventBus.prototype._getListeners = function(name) {\r\n  var listeners = this._listeners[name];\r\n\r\n  if (!listeners) {\r\n    this._listeners[name] = listeners = [];\r\n  }\r\n\r\n  return listeners;\r\n};\r\n\r\n\r\n/**\r\n * A event that is emitted via the event bus.\r\n */\r\nfunction Event() { }\r\n\r\nmodule.exports.Event = Event;\r\n\r\nEvent.prototype.stopPropagation = function() {\r\n  this.cancelBubble = true;\r\n};\r\n\r\nEvent.prototype.preventDefault = function() {\r\n  this.defaultPrevented = true;\r\n};\r\n\r\nEvent.prototype.init = function(data) {\r\n  assign(this, data || {});\r\n};\r\n\r\n\r\n/**\r\n * Invoke function. Be fast...\r\n *\r\n * @param {Function} fn\r\n * @param {Array<Object>} args\r\n *\r\n * @return {Any}\r\n */\r\nfunction invokeFunction(fn, args) {\r\n  return fn.apply(null, args);\r\n}\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    reduce = require(306);\r\n\r\nvar GraphicsUtil = require(269);\r\n\r\nvar translate = require(279).translate;\r\n\r\nvar domClear = require(446);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\n\r\n/**\r\n * A factory that creates graphical elements\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction GraphicsFactory(eventBus, elementRegistry) {\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\r\n\r\nmodule.exports = GraphicsFactory;\r\n\r\n\r\nGraphicsFactory.prototype._getChildren = function(element) {\r\n\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  var childrenGfx;\r\n\r\n  // root element\r\n  if (!element.parent) {\r\n    childrenGfx = gfx;\r\n  } else {\r\n    childrenGfx = GraphicsUtil.getChildren(gfx);\r\n    if (!childrenGfx) {\r\n      childrenGfx = svgCreate('g');\r\n      svgClasses(childrenGfx).add('djs-children');\r\n\r\n      svgAppend(gfx.parentNode, childrenGfx);\r\n    }\r\n  }\r\n\r\n  return childrenGfx;\r\n};\r\n\r\n/**\r\n * Clears the graphical representation of the element and returns the\r\n * cleared visual (the <g class=\"djs-visual\" /> element).\r\n */\r\nGraphicsFactory.prototype._clear = function(gfx) {\r\n  var visual = GraphicsUtil.getVisual(gfx);\r\n\r\n  domClear(visual);\r\n\r\n  return visual;\r\n};\r\n\r\n/**\r\n * Creates a gfx container for shapes and connections\r\n *\r\n * The layout is as follows:\r\n *\r\n * <g class=\"djs-group\">\r\n *\r\n *   <!-- the gfx -->\r\n *   <g class=\"djs-element djs-(shape|connection)\">\r\n *     <g class=\"djs-visual\">\r\n *       <!-- the renderer draws in here -->\r\n *     </g>\r\n *\r\n *     <!-- extensions (overlays, click box, ...) goes here\r\n *   </g>\r\n *\r\n *   <!-- the gfx child nodes -->\r\n *   <g class=\"djs-children\"></g>\r\n * </g>\r\n *\r\n * @param {Object} parent\r\n * @param {String} type the type of the element, i.e. shape | connection\r\n */\r\nGraphicsFactory.prototype._createContainer = function(type, parentGfx) {\r\n  var outerGfx = svgCreate('g');\r\n  svgClasses(outerGfx).add('djs-group');\r\n\r\n  svgAppend(parentGfx, outerGfx);\r\n\r\n  var gfx = svgCreate('g');\r\n  svgClasses(gfx).add('djs-element');\r\n  svgClasses(gfx).add('djs-' + type);\r\n\r\n  svgAppend(outerGfx, gfx);\r\n\r\n  // create visual\r\n  var visual = svgCreate('g');\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(gfx, visual);\r\n\r\n  return gfx;\r\n};\r\n\r\nGraphicsFactory.prototype.create = function(type, element) {\r\n  var childrenGfx = this._getChildren(element.parent);\r\n  return this._createContainer(type, childrenGfx);\r\n};\r\n\r\nGraphicsFactory.prototype.updateContainments = function(elements) {\r\n\r\n  var self = this,\r\n      elementRegistry = this._elementRegistry,\r\n      parents;\r\n\r\n  parents = reduce(elements, function(map, e) {\r\n\r\n    if (e.parent) {\r\n      map[e.parent.id] = e.parent;\r\n    }\r\n\r\n    return map;\r\n  }, {});\r\n\r\n  // update all parents of changed and reorganized their children\r\n  // in the correct order (as indicated in our model)\r\n  forEach(parents, function(parent) {\r\n\r\n    var childGfx = self._getChildren(parent),\r\n        children = parent.children;\r\n\r\n    if (!children) {\r\n      return;\r\n    }\r\n\r\n    forEach(children.slice().reverse(), function(c) {\r\n      var gfx = elementRegistry.getGraphics(c);\r\n\r\n      prependTo(gfx.parentNode, childGfx);\r\n    });\r\n  });\r\n};\r\n\r\nGraphicsFactory.prototype.drawShape = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getShapePath = function(element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getShapePath', element);\r\n};\r\n\r\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getConnectionPath', waypoints);\r\n};\r\n\r\nGraphicsFactory.prototype.update = function(type, element, gfx) {\r\n  // Do not update root element\r\n  if (!element.parent) {\r\n    return;\r\n  }\r\n\r\n  var visual = this._clear(gfx);\r\n\r\n  // redraw\r\n  if (type === 'shape') {\r\n    this.drawShape(visual, element);\r\n\r\n    // update positioning\r\n    translate(gfx, element.x, element.y);\r\n  } else\r\n  if (type === 'connection') {\r\n    this.drawConnection(visual, element);\r\n  } else {\r\n    throw new Error('unknown type: ' + type);\r\n  }\r\n\r\n  if (element.hidden) {\r\n    svgAttr(gfx, 'display', 'none');\r\n  } else {\r\n    svgAttr(gfx, 'display', 'block');\r\n  }\r\n};\r\n\r\nGraphicsFactory.prototype.remove = function(element) {\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  // remove\r\n  svgRemove(gfx.parentNode);\r\n};\r\n\r\n////////// helpers ///////////\r\n\r\nfunction prependTo(newNode, parentNode) {\r\n  parentNode.insertBefore(newNode, parentNode.firstChild);\r\n}\r\n","module.exports = {\r\n  __depends__: [ require(131) ],\r\n  __init__: [ 'canvas' ],\r\n  canvas: [ 'type', require(122) ],\r\n  elementRegistry: [ 'type', require(124) ],\r\n  elementFactory: [ 'type', require(123) ],\r\n  eventBus: [ 'type', require(125) ],\r\n  graphicsFactory: [ 'type', require(126) ]\r\n};","'use strict';\r\n\r\nvar DEFAULT_RENDER_PRIORITY = 1000;\r\n\r\n/**\r\n * The base implementation of shape and connection renderers.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Number} [renderPriority=1000]\r\n */\r\nfunction BaseRenderer(eventBus, renderPriority) {\r\n  var self = this;\r\n\r\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\r\n\r\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\r\n    var type = evt.type,\r\n        element = context.element,\r\n        visuals = context.gfx;\r\n\r\n    if (self.canRender(element)) {\r\n      if (type === 'render.shape') {\r\n        return self.drawShape(visuals, element);\r\n      } else {\r\n        return self.drawConnection(visuals, element);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath'], renderPriority, function(evt, element) {\r\n    if (self.canRender(element)) {\r\n      if (evt.type === 'render.getShapePath') {\r\n        return self.getShapePath(element);\r\n      } else {\r\n        return self.getConnectionPath(element);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Should check whether *this* renderer can render\r\n * the element/connection.\r\n *\r\n * @param {element} element\r\n *\r\n * @returns {Boolean}\r\n */\r\nBaseRenderer.prototype.canRender = function() {};\r\n\r\n/**\r\n * Provides the shape's snap svg element to be drawn on the `canvas`.\r\n *\r\n * @param {djs.Graphics} visuals\r\n * @param {Shape} shape\r\n *\r\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\r\n */\r\nBaseRenderer.prototype.drawShape = function() {};\r\n\r\n/**\r\n * Provides the shape's snap svg element to be drawn on the `canvas`.\r\n *\r\n * @param {djs.Graphics} visuals\r\n * @param {Connection} connection\r\n *\r\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\r\n */\r\nBaseRenderer.prototype.drawConnection = function() {};\r\n\r\n/**\r\n * Gets the SVG path of a shape that represents it's visual bounds.\r\n *\r\n * @param {Shape} shape\r\n *\r\n * @return {string} svg path\r\n */\r\nBaseRenderer.prototype.getShapePath = function() {};\r\n\r\n/**\r\n * Gets the SVG path of a connection that represents it's visual bounds.\r\n *\r\n * @param {Connection} connection\r\n *\r\n * @return {string} svg path\r\n */\r\nBaseRenderer.prototype.getConnectionPath = function() {};\r\n\r\nmodule.exports = BaseRenderer;\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar BaseRenderer = require(128);\r\n\r\nvar renderUtil = require(278);\r\n\r\nvar componentsToPath = renderUtil.componentsToPath,\r\n    createLine = renderUtil.createLine;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477);\r\n\r\n// apply default renderer with lowest possible priority\r\n// so that it only kicks in if noone else could render\r\nvar DEFAULT_RENDER_PRIORITY = 1;\r\n\r\n/**\r\n * The default renderer used for shapes and connections.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n */\r\nfunction DefaultRenderer(eventBus, styles) {\r\n  //\r\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\r\n\r\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\r\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\r\n}\r\n\r\ninherits(DefaultRenderer, BaseRenderer);\r\n\r\n\r\nDefaultRenderer.prototype.canRender = function() {\r\n  return true;\r\n};\r\n\r\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element) {\r\n\r\n  var rect = svgCreate('rect');\r\n  svgAttr(rect, {\r\n    x: 0,\r\n    y: 0,\r\n    width: element.width || 0,\r\n    height: element.height || 0\r\n  });\r\n  svgAttr(rect, this.SHAPE_STYLE);\r\n\r\n  svgAppend(visuals, rect);\r\n\r\n  return rect;\r\n};\r\n\r\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection) {\r\n\r\n  var line = createLine(connection.waypoints, this.CONNECTION_STYLE);\r\n  svgAppend(visuals, line);\r\n\r\n  return line;\r\n};\r\n\r\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\r\n\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var shapePath = [\r\n    ['M', x, y],\r\n    ['l', width, 0],\r\n    ['l', 0, height],\r\n    ['l', -width, 0],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(shapePath);\r\n};\r\n\r\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\r\n  var waypoints = connection.waypoints;\r\n\r\n  var idx, point, connectionPath = [];\r\n\r\n  for (idx = 0; (point = waypoints[idx]); idx++) {\r\n\r\n    // take invisible docking into account\r\n    // when creating the path\r\n    point = point.original || point;\r\n\r\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\r\n  }\r\n\r\n  return componentsToPath(connectionPath);\r\n};\r\n\r\n\r\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\r\n\r\nmodule.exports = DefaultRenderer;\r\n","'use strict';\r\n\r\nvar isArray = require(422),\r\n    assign = require(431),\r\n    reduce = require(306);\r\n\r\n\r\n/**\r\n * A component that manages shape styles\r\n */\r\nfunction Styles() {\r\n\r\n  var defaultTraits = {\r\n\r\n    'no-fill': {\r\n      fill: 'none'\r\n    },\r\n    'no-border': {\r\n      strokeOpacity: 0.0\r\n    },\r\n    'no-events': {\r\n      pointerEvents: 'none'\r\n    }\r\n  };\r\n\r\n  var self = this;\r\n\r\n  /**\r\n   * Builds a style definition from a className, a list of traits and an object of additional attributes.\r\n   *\r\n   * @param  {String} className\r\n   * @param  {Array<String>} traits\r\n   * @param  {Object} additionalAttrs\r\n   *\r\n   * @return {Object} the style defintion\r\n   */\r\n  this.cls = function(className, traits, additionalAttrs) {\r\n    var attrs = this.style(traits, additionalAttrs);\r\n\r\n    return assign(attrs, { 'class': className });\r\n  };\r\n\r\n  /**\r\n   * Builds a style definition from a list of traits and an object of additional attributes.\r\n   *\r\n   * @param  {Array<String>} traits\r\n   * @param  {Object} additionalAttrs\r\n   *\r\n   * @return {Object} the style defintion\r\n   */\r\n  this.style = function(traits, additionalAttrs) {\r\n\r\n    if (!isArray(traits) && !additionalAttrs) {\r\n      additionalAttrs = traits;\r\n      traits = [];\r\n    }\r\n\r\n    var attrs = reduce(traits, function(attrs, t) {\r\n      return assign(attrs, defaultTraits[t] || {});\r\n    }, {});\r\n\r\n    return additionalAttrs ? assign(attrs, additionalAttrs) : attrs;\r\n  };\r\n\r\n  this.computeStyle = function(custom, traits, defaultStyles) {\r\n    if (!isArray(traits)) {\r\n      defaultStyles = traits;\r\n      traits = [];\r\n    }\r\n\r\n    return self.style(traits || [], assign({}, defaultStyles, custom || {}));\r\n  };\r\n}\r\n\r\nmodule.exports = Styles;\r\n","module.exports = {\r\n  __init__: [ 'defaultRenderer' ],\r\n  defaultRenderer: [ 'type', require(129) ],\r\n  styles: [ 'type', require(130) ]\r\n};\r\n","'use strict';\r\n\r\nvar filter = require(301),\r\n    forEach = require(303),\r\n    sortBy = require(310);\r\n\r\nfunction last(arr) {\r\n  return arr && arr[arr.length - 1];\r\n}\r\n\r\nfunction sortTopOrMiddle(element) {\r\n  return element.y;\r\n}\r\n\r\nfunction sortLeftOrCenter(element) {\r\n  return element.x;\r\n}\r\n\r\n/**\r\n * Sorting functions for different types of alignment\r\n *\r\n * @type {Object}\r\n *\r\n * @return {Function}\r\n */\r\nvar ALIGNMENT_SORTING = {\r\n  left: sortLeftOrCenter,\r\n  center: sortLeftOrCenter,\r\n  right: function(element) {\r\n    return element.x + element.width;\r\n  },\r\n  top: sortTopOrMiddle,\r\n  middle: sortTopOrMiddle,\r\n  bottom: function(element) {\r\n    return element.y + element.height;\r\n  }\r\n};\r\n\r\n\r\nfunction AlignElements(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nmodule.exports = AlignElements;\r\n\r\nAlignElements.$inject = [ 'modeling' ];\r\n\r\n\r\n/**\r\n * Get the relevant \"axis\" and \"dimension\" related to the current type of alignment\r\n *\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n *\r\n * @return {Object} { axis, dimension }\r\n */\r\nAlignElements.prototype._getOrientationDetails = function(type) {\r\n  var vertical = [ 'top', 'bottom', 'middle' ],\r\n      axis = 'x',\r\n      dimension = 'width';\r\n\r\n  if (vertical.indexOf(type) !== -1) {\r\n    axis = 'y';\r\n    dimension = 'height';\r\n  }\r\n\r\n  return {\r\n    axis: axis,\r\n    dimension: dimension\r\n  };\r\n};\r\n\r\nAlignElements.prototype._isType = function(type, types) {\r\n  return types.indexOf(type) !== -1;\r\n};\r\n\r\n/**\r\n * Get a point on the relevant axis where elements should align to\r\n *\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n * @param  {Array} sortedElements\r\n *\r\n * @return {Object}\r\n */\r\nAlignElements.prototype._alignmentPosition = function(type, sortedElements) {\r\n  var orientation = this._getOrientationDetails(type),\r\n      axis = orientation.axis,\r\n      dimension = orientation.dimension,\r\n      alignment = {},\r\n      centers = {},\r\n      hasSharedCenters = false,\r\n      centeredElements,\r\n      firstElement,\r\n      lastElement;\r\n\r\n  function getMiddleOrTop(first, last) {\r\n    return Math.round((first[axis] + last[axis] + last[dimension]) / 2);\r\n  }\r\n\r\n  if (this._isType(type, [ 'left', 'top' ])) {\r\n    alignment[type] = sortedElements[0][axis];\r\n\r\n  } else if (this._isType(type, [ 'right', 'bottom' ])) {\r\n    lastElement = last(sortedElements);\r\n\r\n    alignment[type] = lastElement[axis] + lastElement[dimension];\r\n\r\n  } else if (this._isType(type, [ 'center', 'middle' ])) {\r\n\r\n    // check if there is a center shared by more than one shape\r\n    // if not, just take the middle of the range\r\n    forEach(sortedElements, function(element) {\r\n      var center = element[axis] + Math.round(element[dimension] / 2);\r\n\r\n      if (centers[center]) {\r\n        centers[center].elements.push(element);\r\n      } else {\r\n        centers[center] = {\r\n          elements: [ element ],\r\n          center: center\r\n        };\r\n      }\r\n    });\r\n\r\n    centeredElements = sortBy(centers, function(center) {\r\n      if (center.elements.length > 1) {\r\n        hasSharedCenters = true;\r\n      }\r\n\r\n      return center.elements.length;\r\n    });\r\n\r\n    if (hasSharedCenters) {\r\n      alignment[type] = last(centeredElements).center;\r\n\r\n      return alignment;\r\n    }\r\n\r\n    firstElement = sortedElements[0];\r\n\r\n    sortedElements = sortBy(sortedElements, function(element) {\r\n      return element[axis] + element[dimension];\r\n    });\r\n\r\n    lastElement = last(sortedElements);\r\n\r\n    alignment[type] = getMiddleOrTop(firstElement, lastElement);\r\n  }\r\n\r\n  return alignment;\r\n};\r\n\r\n/**\r\n * Executes the alignment of a selection of elements\r\n *\r\n * @param  {Array} elements [description]\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n */\r\nAlignElements.prototype.trigger = function(elements, type) {\r\n  var modeling = this._modeling;\r\n\r\n  var filteredElements = filter(elements, function(element) {\r\n    return !(element.waypoints || element.host || element.labelTarget);\r\n  });\r\n\r\n  var sortFn = ALIGNMENT_SORTING[type];\r\n\r\n  var sortedElements = sortBy(filteredElements, sortFn);\r\n\r\n  var alignment = this._alignmentPosition(type, sortedElements);\r\n\r\n  modeling.alignElements(sortedElements, alignment);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'alignElements' ],\r\n  alignElements: [ 'type', require(132) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    flatten = require(291),\r\n    union = require(294),\r\n    filter = require(301),\r\n    groupBy = require(304),\r\n    map = require(305);\r\n\r\nvar saveClear = require(277).saveClear,\r\n    Collections = require(263);\r\n\r\nvar getNewAttachShapeDelta = require(261).getNewAttachShapeDelta;\r\n\r\nvar inherits = require(289);\r\n\r\nvar HIGH_PRIORITY = 1500;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\nfunction AttachSupport(eventBus, modeling, movePreview, rules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  // remove all the attached elements from the shapes to be validated\r\n  // add all the attached shapes to the overall list of moved shapes\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        validatedShapes = context.validatedShapes;\r\n\r\n    context.shapes = addAttached(shapes);\r\n\r\n    context.validatedShapes = removeAttached(validatedShapes);\r\n  });\r\n\r\n\r\n  // move all attachments after the other shapes are done moving\r\n  this.postExecuted([ 'elements.move' ], function(event) {\r\n\r\n    var context = event.context,\r\n        delta = context.delta,\r\n        newParent = context.newParent,\r\n        closure = context.closure,\r\n        enclosedElements = closure.enclosedElements,\r\n        attachers = getAttachers(enclosedElements);\r\n\r\n    // ensure we move all attachers with their hosts\r\n    // if they have not been moved already\r\n    forEach(attachers, function(attacher) {\r\n      if (!enclosedElements[attacher.id]) {\r\n        modeling.moveShape(attacher, delta, newParent);\r\n\r\n        if (attacher.label) {\r\n          modeling.moveShape(attacher.label, delta, newParent);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // perform the attaching after shapes are done moving\r\n  this.postExecuted([ 'elements.move' ], function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        newHost = context.newHost,\r\n        attachers;\r\n\r\n    // we only support attachment / detachment of one element\r\n    if (shapes.length > 1) {\r\n      return;\r\n    }\r\n\r\n    if (newHost) {\r\n\r\n      attachers = shapes;\r\n    } else {\r\n\r\n      attachers = filter(shapes, function(s) {\r\n        return !!s.host;\r\n      });\r\n    }\r\n\r\n    forEach(attachers, function(attacher) {\r\n      modeling.updateAttachment(attacher, newHost);\r\n    });\r\n  });\r\n\r\n  // ensure invalid attachment connections are removed\r\n  this.postExecuted([ 'elements.move' ], function(e) {\r\n\r\n    var shapes = e.context.shapes;\r\n\r\n    forEach(shapes, function(shape) {\r\n\r\n      forEach(shape.attachers, function(attacher) {\r\n\r\n        // remove invalid outgoing connections\r\n        forEach(attacher.outgoing.slice(), function(connection) {\r\n          var allowed = rules.allowed('connection.reconnectStart', {\r\n            connection: connection,\r\n            source: connection.source,\r\n            target: connection.target\r\n          });\r\n\r\n          if (!allowed) {\r\n            modeling.removeConnection(connection);\r\n          }\r\n        });\r\n\r\n        // remove invalid incoming connections\r\n        forEach(attacher.incoming.slice(), function(connection) {\r\n          var allowed = rules.allowed('connection.reconnectEnd', {\r\n            connection: connection,\r\n            source: connection.source,\r\n            target: connection.target\r\n          });\r\n\r\n          if (!allowed) {\r\n            modeling.removeConnection(connection);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  this.postExecute([ 'shape.create' ], function(e) {\r\n    var context = e.context,\r\n        shape = context.shape,\r\n        host = context.host;\r\n\r\n    if (host) {\r\n      modeling.updateAttachment(shape, host);\r\n    }\r\n  });\r\n\r\n  // update attachments if the host is replaced\r\n  this.postExecute([ 'shape.replace' ], function(e) {\r\n\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape;\r\n\r\n    // move the attachers to the new host\r\n    saveClear(oldShape.attachers, function(attacher) {\r\n      var allowed = rules.allowed('elements.move', {\r\n        target: newShape,\r\n        shapes: [attacher]\r\n      });\r\n\r\n      if (allowed === 'attach') {\r\n        modeling.updateAttachment(attacher, newShape);\r\n      } else {\r\n        modeling.removeShape(attacher);\r\n      }\r\n    });\r\n\r\n    // move attachers if new host has different size\r\n    if (newShape.attachers.length) {\r\n\r\n      forEach(newShape.attachers, function(attacher) {\r\n        var delta = getNewAttachShapeDelta(attacher, oldShape, newShape);\r\n        modeling.moveShape(attacher, delta, attacher.parent);\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  // move shape on host resize\r\n  this.postExecute([ 'shape.resize' ], function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        oldBounds = context.oldBounds,\r\n        newBounds = context.newBounds,\r\n        attachers = shape.attachers;\r\n\r\n    if (!attachers.length) {\r\n      return;\r\n    }\r\n\r\n    forEach(attachers, function(attacher) {\r\n      var delta = getNewAttachShapeDelta(attacher, oldBounds, newBounds);\r\n\r\n      modeling.moveShape(attacher, delta, attacher.parent);\r\n\r\n      if (attacher.label) {\r\n        modeling.moveShape(attacher.label, delta, attacher.label.parent);\r\n      }\r\n    });\r\n  });\r\n\r\n  // remove attachments\r\n  this.preExecute([ 'shape.delete' ], function(event) {\r\n\r\n    var shape = event.context.shape;\r\n\r\n    saveClear(shape.attachers, function(attacher) {\r\n      modeling.removeShape(attacher);\r\n    });\r\n\r\n    if (shape.host) {\r\n      modeling.updateAttachment(shape, null);\r\n    }\r\n  });\r\n\r\n\r\n  // Prevent attachers and their labels from moving, when the space tool is performed.\r\n  // Otherwise the attachers and their labels would be moved twice.\r\n  eventBus.on('spaceTool.move', function(event) {\r\n\r\n    var movingShapes = event.context.movingShapes;\r\n\r\n    // Collect all attachers which would be moved using the space tool\r\n    var movingAttachers = filter(movingShapes, function(shape) {\r\n      return shape.host && shape.host.id;\r\n    });\r\n\r\n    forEach(movingAttachers, function(shape) {\r\n      // Remove all attachers and their labels from the movingShapes, because they\r\n      // already will be moved along with the host.\r\n      Collections.remove(movingShapes, shape);\r\n      if (shape.label) {\r\n        Collections.remove(movingShapes, shape.label);\r\n      }\r\n    });\r\n\r\n  });\r\n}\r\n\r\ninherits(AttachSupport, CommandInterceptor);\r\n\r\nAttachSupport.$inject = [ 'eventBus', 'modeling', 'movePreview', 'rules' ];\r\n\r\nmodule.exports = AttachSupport;\r\n\r\n\r\n/**\r\n * Return attachers of the given shapes\r\n *\r\n * @param {Array<djs.model.Base>} shapes\r\n * @return {Array<djs.model.Base>}\r\n */\r\nfunction getAttachers(shapes) {\r\n  return flatten(map(shapes, function(s) {\r\n    return s.attachers || [];\r\n  }));\r\n}\r\n\r\n/**\r\n * Return a combined list of elements and\r\n * attachers.\r\n *\r\n * @param {Array<djs.model.Base>} elements\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction addAttached(elements) {\r\n  var attachers = getAttachers(elements);\r\n\r\n  return union(elements, attachers);\r\n}\r\n\r\n/**\r\n * Return a filtered list of elements that do not\r\n * contain attached elements with hosts being part\r\n * of the selection.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeAttached(elements) {\r\n\r\n  var ids = groupBy(elements, 'id');\r\n\r\n  return filter(elements, function(element) {\r\n    while (element) {\r\n\r\n      // host in selection\r\n      if (element.host && ids[element.host.id]) {\r\n        return false;\r\n      }\r\n\r\n      element = element.parent;\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(206),\r\n    require(174)\r\n  ],\r\n  __init__: [ 'attachSupport'],\r\n  attachSupport: [ 'type', require(134) ]\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar getBoundingBox = require(266).getBBox;\r\n\r\nvar asTRBL = require(252).asTRBL,\r\n    asBounds = require(252).asBounds;\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    values = require(440),\r\n    flatten = require(291),\r\n    groupBy = require(304);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\n/**\r\n * An auto resize component that takes care of expanding a parent element\r\n * if child elements are created or moved close the parents edge.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Modeling} modeling\r\n * @param {Rules} rules\r\n */\r\nfunction AutoResize(eventBus, elementRegistry, modeling, rules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n\r\n  var self = this;\r\n\r\n  this.postExecuted([ 'shape.create' ], function(event) {\r\n\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape,\r\n        parent = context.parent || context.newParent;\r\n\r\n    if (hints && hints.root === false) {\r\n      return;\r\n    }\r\n\r\n    self._expand([ shape ], parent);\r\n  });\r\n\r\n  this.postExecuted([ 'elements.move' ], function(event) {\r\n\r\n    var context = event.context,\r\n        elements = flatten(values(context.closure.topLevel)),\r\n        hints = context.hints;\r\n\r\n    if (hints && hints.autoResize === false) {\r\n      return;\r\n    }\r\n\r\n    var expandings = groupBy(elements, function(element) {\r\n      return element.parent.id;\r\n    });\r\n\r\n    forEach(expandings, function(elements, parentId) {\r\n      self._expand(elements, parentId);\r\n    });\r\n  });\r\n}\r\n\r\nAutoResize.$inject = [ 'eventBus', 'elementRegistry', 'modeling', 'rules' ];\r\n\r\ninherits(AutoResize, CommandInterceptor);\r\n\r\nmodule.exports = AutoResize;\r\n\r\n\r\n/**\r\n * Calculate the new bounds of the target shape, given\r\n * a number of elements have been moved or added into the parent.\r\n *\r\n * This method considers the current size, the added elements as well as\r\n * the provided padding for the new bounds.\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n * @param {djs.model.Shape} target\r\n */\r\nAutoResize.prototype._getOptimalBounds = function(elements, target) {\r\n\r\n  var offset = this.getOffset(target),\r\n      padding = this.getPadding(target);\r\n\r\n  var elementsTrbl = asTRBL(getBoundingBox(elements)),\r\n      targetTrbl = asTRBL(target);\r\n\r\n  var newTrbl = {};\r\n\r\n  if (elementsTrbl.top - targetTrbl.top < padding.top) {\r\n    newTrbl.top = elementsTrbl.top - offset.top;\r\n  }\r\n\r\n  if (elementsTrbl.left - targetTrbl.left < padding.left) {\r\n    newTrbl.left = elementsTrbl.left - offset.left;\r\n  }\r\n\r\n  if (targetTrbl.right - elementsTrbl.right < padding.right) {\r\n    newTrbl.right = elementsTrbl.right + offset.right;\r\n  }\r\n\r\n  if (targetTrbl.bottom - elementsTrbl.bottom < padding.bottom) {\r\n    newTrbl.bottom = elementsTrbl.bottom + offset.bottom;\r\n  }\r\n\r\n  return asBounds(assign({}, targetTrbl, newTrbl));\r\n};\r\n\r\n\r\n/**\r\n * Expand the target shape respecting rules, offset and padding\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n * @param {djs.model.Shape|String} target|targetId\r\n */\r\nAutoResize.prototype._expand = function(elements, target) {\r\n\r\n  if (typeof target === 'string') {\r\n    target = this._elementRegistry.get(target);\r\n  }\r\n\r\n  var allowed = this._rules.allowed('element.autoResize', {\r\n    elements: elements,\r\n    target: target\r\n  });\r\n\r\n  if (!allowed) {\r\n    return;\r\n  }\r\n\r\n  // calculate the new bounds\r\n  var newBounds = this._getOptimalBounds(elements, target);\r\n\r\n  if (!boundsChanged(newBounds, target)) {\r\n    return;\r\n  }\r\n\r\n  // resize the parent shape\r\n  this.resize(target, newBounds);\r\n\r\n  var parent = target.parent;\r\n\r\n  // recursively expand parent elements\r\n  if (parent) {\r\n    this._expand([ target ], parent);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Get the amount to expand the given shape in each direction.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Object} {top, bottom, left, right}\r\n */\r\nAutoResize.prototype.getOffset = function(shape) {\r\n  return { top: 60, bottom: 60, left: 100, right: 100 };\r\n};\r\n\r\n\r\n/**\r\n * Get the activation threshold for each side for which\r\n * resize triggers.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Object} {top, bottom, left, right}\r\n */\r\nAutoResize.prototype.getPadding = function(shape) {\r\n  return { top: 2, bottom: 2, left: 15, right: 15 };\r\n};\r\n\r\n\r\n/**\r\n * Perform the actual resize operation.\r\n *\r\n * @param {djs.model.Shape} target\r\n * @param {Object} newBounds\r\n */\r\nAutoResize.prototype.resize = function(target, newBounds) {\r\n  this._modeling.resizeShape(target, newBounds);\r\n};\r\n\r\n\r\nfunction boundsChanged(newBounds, oldBounds) {\r\n  return (\r\n    newBounds.x !== oldBounds.x ||\r\n    newBounds.y !== oldBounds.y ||\r\n    newBounds.width !== oldBounds.width ||\r\n    newBounds.height !== oldBounds.height\r\n  );\r\n}","var RuleProvider = require(225);\r\n\r\nvar inherits = require(289);\r\n\r\n/**\r\n * This is a base rule provider for the element.autoResize rule.\r\n */\r\nfunction AutoResizeProvider(eventBus) {\r\n\r\n  RuleProvider.call(this, eventBus);\r\n\r\n  var self = this;\r\n\r\n  this.addRule('element.autoResize', function(context) {\r\n    return self.canResize(context.elements, context.target);\r\n  });\r\n}\r\n\r\nAutoResizeProvider.$inject = [ 'eventBus' ];\r\n\r\ninherits(AutoResizeProvider, RuleProvider);\r\n\r\nmodule.exports = AutoResizeProvider;\r\n\r\n/**\r\n * Needs to be implemented by sub classes to allow actual auto resize\r\n *\r\n * @param  {Array<djs.model.Shape>} elements\r\n * @param  {djs.model.Shape} target\r\n *\r\n * @return {Boolean}\r\n */\r\nAutoResizeProvider.prototype.canResize = function(elements, target) {\r\n  return false;\r\n};","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\nvar EventUtil = require(267);\r\n\r\n\r\n/**\r\n * Initiates canvas scrolling if current cursor point is close to a border.\r\n * Cancelled when current point moves back inside the scrolling borders\r\n * or cancelled manually.\r\n *\r\n * Default options :\r\n *   scrollThresholdIn: [ 20, 20, 20, 20 ],\r\n *   scrollThresholdOut: [ 0, 0, 0, 0 ],\r\n *   scrollRepeatTimeout: 15,\r\n *   scrollStep: 10\r\n *\r\n * Threshold order:\r\n *   [ left, top, right, bottom ]\r\n */\r\nfunction AutoScroll(config, eventBus, canvas, mouseTracking) {\r\n\r\n  this._canvas = canvas;\r\n  this._mouseTracking = mouseTracking;\r\n\r\n  this._opts = assign({\r\n    scrollThresholdIn: [ 20, 20, 20, 20 ],\r\n    scrollThresholdOut: [ 0, 0, 0, 0 ],\r\n    scrollRepeatTimeout: 15,\r\n    scrollStep: 10\r\n  }, config);\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('drag.move', function(e) {\r\n    var point = self._toBorderPoint(e);\r\n\r\n    self.startScroll(point);\r\n  });\r\n\r\n  eventBus.on([ 'drag.cleanup' ], function() {\r\n    self.stopScroll();\r\n  });\r\n}\r\n\r\nAutoScroll.$inject = [ 'config.autoScroll', 'eventBus', 'canvas', 'mouseTracking'];\r\n\r\nmodule.exports = AutoScroll;\r\n\r\n\r\n/**\r\n * Starts scrolling loop.\r\n * Point is given in global scale in canvas container box plane.\r\n *\r\n * @param  {Object} point { x: X, y: Y }\r\n */\r\nAutoScroll.prototype.startScroll = function(point) {\r\n\r\n  var canvas = this._canvas;\r\n  var opts = this._opts;\r\n  var self = this;\r\n\r\n  var clientRect = canvas.getContainer().getBoundingClientRect();\r\n\r\n  var diff = [\r\n    point.x,\r\n    point.y,\r\n    clientRect.width - point.x,\r\n    clientRect.height - point.y\r\n  ];\r\n\r\n  this.stopScroll();\r\n\r\n  var dx = 0,\r\n      dy = 0;\r\n\r\n  for (var i = 0; i < 4; i++) {\r\n    if (between(diff[i], opts.scrollThresholdOut[i], opts.scrollThresholdIn[i])) {\r\n      if (i === 0) {\r\n        dx = opts.scrollStep;\r\n      } else if (i == 1) {\r\n        dy = opts.scrollStep;\r\n      } else if (i == 2) {\r\n        dx = -opts.scrollStep;\r\n      } else if (i == 3) {\r\n        dy = -opts.scrollStep;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dx !== 0 || dy !== 0) {\r\n    canvas.scroll({ dx: dx, dy: dy });\r\n\r\n    this._scrolling = setTimeout(function() {\r\n      self.startScroll(point);\r\n    }, opts.scrollRepeatTimeout);\r\n  }\r\n};\r\n\r\nfunction between(val, start, end) {\r\n  if (start < val && val < end) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Stops scrolling loop.\r\n */\r\nAutoScroll.prototype.stopScroll = function() {\r\n  clearTimeout(this._scrolling);\r\n};\r\n\r\n\r\n/**\r\n * Overrides defaults options.\r\n *\r\n * @param  {Object} options\r\n */\r\nAutoScroll.prototype.setOptions = function(options) {\r\n  this._opts = assign({}, this._opts, options);\r\n};\r\n\r\n\r\n/**\r\n * Converts event to a point in canvas container plane in global scale.\r\n *\r\n * @param  {Event} event\r\n * @return {Point}\r\n */\r\nAutoScroll.prototype._toBorderPoint = function(event) {\r\n  var clientRect = this._canvas._container.getBoundingClientRect();\r\n\r\n  var globalPosition = EventUtil.toPoint(event.originalEvent);\r\n\r\n  return {\r\n    x: globalPosition.x - clientRect.left,\r\n    y: globalPosition.y - clientRect.top\r\n  };\r\n};","module.exports = {\r\n  __depends__: [\r\n    require(162),\r\n    require(203)\r\n  ],\r\n  __init__: [ 'autoScroll' ],\r\n  autoScroll: [ 'type', require(138) ]\r\n};","'use strict';\r\n\r\nvar Geometry = require(268),\r\n    BendpointUtil = require(142);\r\n\r\nvar MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok',\r\n    MARKER_CONNECT_HOVER = 'connect-hover',\r\n    MARKER_CONNECT_UPDATING = 'djs-updating';\r\n\r\nvar COMMAND_BENDPOINT_UPDATE = 'connection.updateWaypoints',\r\n    COMMAND_RECONNECT_START = 'connection.reconnectStart',\r\n    COMMAND_RECONNECT_END = 'connection.reconnectEnd';\r\n\r\nvar round = Math.round;\r\n\r\nvar svgClasses = require(474),\r\n    svgRemove = require(480);\r\n\r\nvar translate = require(279).translate;\r\n\r\n\r\n/**\r\n * A component that implements moving of bendpoints\r\n */\r\nfunction BendpointMove(injector, eventBus, canvas, dragging, graphicsFactory, rules, modeling) {\r\n\r\n  // optional connection docking integration\r\n  var connectionDocking = injector.get('connectionDocking', false);\r\n\r\n\r\n  // API\r\n\r\n  this.start = function(event, connection, bendpointIndex, insert) {\r\n\r\n    var type,\r\n        context,\r\n        waypoints = connection.waypoints,\r\n        gfx = canvas.getGraphics(connection);\r\n\r\n    if (!insert && bendpointIndex === 0) {\r\n      type = COMMAND_RECONNECT_START;\r\n    } else\r\n    if (!insert && bendpointIndex === waypoints.length - 1) {\r\n      type = COMMAND_RECONNECT_END;\r\n    } else {\r\n      type = COMMAND_BENDPOINT_UPDATE;\r\n    }\r\n\r\n    context = {\r\n      connection: connection,\r\n      bendpointIndex: bendpointIndex,\r\n      insert: insert,\r\n      type: type\r\n    };\r\n\r\n    dragging.init(event, 'bendpoint.move', {\r\n      data: {\r\n        connection: connection,\r\n        connectionGfx: gfx,\r\n        context: context\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  // DRAGGING IMPLEMENTATION\r\n\r\n\r\n  function redrawConnection(data) {\r\n    graphicsFactory.update('connection', data.connection, data.connectionGfx);\r\n  }\r\n\r\n  function filterRedundantWaypoints(waypoints) {\r\n\r\n    // alter copy of waypoints, not original\r\n    waypoints = waypoints.slice();\r\n\r\n    var idx = 0,\r\n        point,\r\n        previousPoint,\r\n        nextPoint;\r\n\r\n    while (waypoints[idx]) {\r\n      point = waypoints[idx];\r\n      previousPoint = waypoints[idx - 1];\r\n      nextPoint = waypoints[idx + 1];\r\n\r\n      if (Geometry.pointDistance(point, nextPoint) === 0 ||\r\n          Geometry.pointsOnLine(previousPoint, nextPoint, point)) {\r\n\r\n        // remove point, if overlapping with {nextPoint}\r\n        // or on line with {previousPoint} -> {point} -> {nextPoint}\r\n        waypoints.splice(idx, 1);\r\n      } else {\r\n        idx++;\r\n      }\r\n    }\r\n\r\n    return waypoints;\r\n  }\r\n\r\n  eventBus.on('bendpoint.move.start', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        originalWaypoints = connection.waypoints,\r\n        waypoints = originalWaypoints.slice(),\r\n        insert = context.insert,\r\n        idx = context.bendpointIndex;\r\n\r\n    context.originalWaypoints = originalWaypoints;\r\n\r\n    if (insert) {\r\n      // insert placeholder for bendpoint to-be-added\r\n      waypoints.splice(idx, 0, null);\r\n    }\r\n\r\n    connection.waypoints = waypoints;\r\n\r\n    // add dragger gfx\r\n    context.draggerGfx = BendpointUtil.addBendpoint(canvas.getLayer('overlays'));\r\n    svgClasses(context.draggerGfx).add('djs-dragging');\r\n\r\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.hover', function(e) {\r\n\r\n    e.context.hover = e.hover;\r\n    canvas.addMarker(e.hover, MARKER_CONNECT_HOVER);\r\n  });\r\n\r\n  eventBus.on([\r\n    'bendpoint.move.out',\r\n    'bendpoint.move.cleanup'\r\n  ], function(e) {\r\n\r\n    // remove connect marker\r\n    // if it was added\r\n    var hover = e.context.hover;\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\r\n      canvas.removeMarker(hover, e.context.target ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.move', function(e) {\r\n\r\n    var context = e.context,\r\n        moveType = context.type,\r\n        connection = e.connection,\r\n        source, target;\r\n\r\n    connection.waypoints[context.bendpointIndex] = { x: e.x, y: e.y };\r\n\r\n    if (connectionDocking) {\r\n\r\n      if (context.hover) {\r\n        if (moveType === COMMAND_RECONNECT_START) {\r\n          source = context.hover;\r\n        }\r\n\r\n        if (moveType === COMMAND_RECONNECT_END) {\r\n          target = context.hover;\r\n        }\r\n      }\r\n\r\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection, source, target);\r\n    }\r\n\r\n    // asks whether reconnect / bendpoint move / bendpoint add\r\n    // is allowed at the given position\r\n    var allowed = context.allowed = rules.allowed(context.type, context);\r\n\r\n    if (allowed) {\r\n\r\n      if (context.hover) {\r\n        canvas.removeMarker(context.hover, MARKER_NOT_OK);\r\n        canvas.addMarker(context.hover, MARKER_OK);\r\n\r\n        context.target = context.hover;\r\n      }\r\n    } else\r\n    if (allowed === false) {\r\n      if (context.hover) {\r\n        canvas.removeMarker(context.hover, MARKER_OK);\r\n        canvas.addMarker(context.hover, MARKER_NOT_OK);\r\n\r\n        context.target = null;\r\n      }\r\n    }\r\n\r\n    // add dragger gfx\r\n    translate(context.draggerGfx, e.x, e.y);\r\n\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on([\r\n    'bendpoint.move.end',\r\n    'bendpoint.move.cancel'\r\n  ], function(e) {\r\n\r\n    var context = e.context,\r\n        hover = context.hover,\r\n        connection = context.connection;\r\n\r\n    // remove dragger gfx\r\n    svgRemove(context.draggerGfx);\r\n    context.newWaypoints = connection.waypoints.slice();\r\n    connection.waypoints = context.originalWaypoints;\r\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_OK);\r\n      canvas.removeMarker(hover, MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.end', function(e) {\r\n\r\n    var context = e.context,\r\n        waypoints = context.newWaypoints,\r\n        bendpointIndex = context.bendpointIndex,\r\n        bendpoint = waypoints[bendpointIndex],\r\n        allowed = context.allowed,\r\n        hints;\r\n\r\n    // ensure we have actual pixel values bendpoint\r\n    // coordinates (important when zoom level was > 1 during move)\r\n    bendpoint.x = round(bendpoint.x);\r\n    bendpoint.y = round(bendpoint.y);\r\n\r\n    if (allowed && context.type === COMMAND_RECONNECT_START) {\r\n      modeling.reconnectStart(context.connection, context.target, bendpoint);\r\n    } else\r\n    if (allowed && context.type === COMMAND_RECONNECT_END) {\r\n      modeling.reconnectEnd(context.connection, context.target, bendpoint);\r\n    } else\r\n    if (allowed !== false && context.type === COMMAND_BENDPOINT_UPDATE) {\r\n\r\n      // pass hints on the actual moved bendpoint\r\n      // this is useful for connection and label layouting\r\n      hints = {\r\n        bendpointMove: {\r\n          insert: e.context.insert,\r\n          bendpointIndex: bendpointIndex\r\n        }\r\n      };\r\n\r\n      modeling.updateWaypoints(context.connection, filterRedundantWaypoints(waypoints), hints);\r\n    } else {\r\n      redrawConnection(e);\r\n\r\n      return false;\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.cancel', function(e) {\r\n    redrawConnection(e);\r\n  });\r\n}\r\n\r\nBendpointMove.$inject = [ 'injector', 'eventBus', 'canvas', 'dragging', 'graphicsFactory', 'rules', 'modeling' ];\r\n\r\nmodule.exports = BendpointMove;\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    isArray = require(422);\r\n\r\nvar abs= Math.abs,\r\n    round = Math.round;\r\n\r\nvar TOLERANCE = 10;\r\n\r\n\r\nfunction BendpointSnapping(eventBus) {\r\n\r\n  function snapTo(values, value) {\r\n\r\n    if (isArray(values)) {\r\n      var i = values.length;\r\n\r\n      while (i--) if (abs(values[i] - value) <= TOLERANCE) {\r\n        return values[i];\r\n      }\r\n    } else {\r\n      values = +values;\r\n      var rem = value % values;\r\n\r\n      if (rem < TOLERANCE) {\r\n        return value - rem;\r\n      }\r\n\r\n      if (rem > values - TOLERANCE) {\r\n        return value - rem + values;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function mid(element) {\r\n    if (element.width) {\r\n      return {\r\n        x: round(element.width / 2 + element.x),\r\n        y: round(element.height / 2 + element.y)\r\n      };\r\n    }\r\n  }\r\n\r\n  ////////// connection segment snapping //////////////////////////////////////\r\n\r\n  function getConnectionSegmentSnaps(context) {\r\n\r\n    var snapPoints = context.snapPoints,\r\n        connection = context.connection,\r\n        waypoints = connection.waypoints,\r\n        segmentStart = context.segmentStart,\r\n        segmentStartIndex = context.segmentStartIndex,\r\n        segmentEnd = context.segmentEnd,\r\n        segmentEndIndex = context.segmentEndIndex,\r\n        axis = context.axis;\r\n\r\n    if (snapPoints) {\r\n      return snapPoints;\r\n    }\r\n\r\n    var referenceWaypoints = [\r\n      waypoints[segmentStartIndex - 1],\r\n      segmentStart,\r\n      segmentEnd,\r\n      waypoints[segmentEndIndex + 1]\r\n    ];\r\n\r\n    if (segmentStartIndex < 2) {\r\n      referenceWaypoints.unshift(mid(connection.source));\r\n    }\r\n\r\n    if (segmentEndIndex > waypoints.length - 3) {\r\n      referenceWaypoints.unshift(mid(connection.target));\r\n    }\r\n\r\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\r\n\r\n    forEach(referenceWaypoints, function(p) {\r\n      // we snap on existing bendpoints only,\r\n      // not placeholders that are inserted during add\r\n      if (p) {\r\n        p = p.original || p;\r\n\r\n        if (axis === 'y') {\r\n          snapPoints.horizontal.push(p.y);\r\n        }\r\n\r\n        if (axis === 'x') {\r\n          snapPoints.vertical.push(p.x);\r\n        }\r\n      }\r\n    });\r\n\r\n    return snapPoints;\r\n  }\r\n\r\n  eventBus.on('connectionSegment.move.move', 1500, function(event) {\r\n    var context = event.context,\r\n        snapPoints = getConnectionSegmentSnaps(context),\r\n        x = event.x,\r\n        y = event.y,\r\n        sx, sy;\r\n\r\n    if (!snapPoints) {\r\n      return;\r\n    }\r\n\r\n    // snap\r\n    sx = snapTo(snapPoints.vertical, x);\r\n    sy = snapTo(snapPoints.horizontal, y);\r\n\r\n\r\n    // correction x/y\r\n    var cx = (x - sx),\r\n        cy = (y - sy);\r\n\r\n    // update delta\r\n    assign(event, {\r\n      dx: event.dx - cx,\r\n      dy: event.dy - cy,\r\n      x: sx,\r\n      y: sy\r\n    });\r\n  });\r\n\r\n\r\n  ///////// bendpoint snapping /////////////////////////////\r\n\r\n  function getBendpointSnaps(context) {\r\n\r\n    var snapPoints = context.snapPoints,\r\n        waypoints = context.connection.waypoints,\r\n        bendpointIndex = context.bendpointIndex;\r\n\r\n    if (snapPoints) {\r\n      return snapPoints;\r\n    }\r\n\r\n    var referenceWaypoints = [ waypoints[bendpointIndex - 1], waypoints[bendpointIndex + 1] ];\r\n\r\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\r\n\r\n    forEach(referenceWaypoints, function(p) {\r\n      // we snap on existing bendpoints only,\r\n      // not placeholders that are inserted during add\r\n      if (p) {\r\n        p = p.original || p;\r\n\r\n        snapPoints.horizontal.push(p.y);\r\n        snapPoints.vertical.push(p.x);\r\n      }\r\n    });\r\n\r\n    return snapPoints;\r\n  }\r\n\r\n\r\n  eventBus.on('bendpoint.move.move', 1500, function(event) {\r\n\r\n    var context = event.context,\r\n        snapPoints = getBendpointSnaps(context),\r\n        target = context.target,\r\n        targetMid = target && mid(target),\r\n        x = event.x,\r\n        y = event.y,\r\n        sx, sy;\r\n\r\n    if (!snapPoints) {\r\n      return;\r\n    }\r\n\r\n    // snap\r\n    sx = snapTo(targetMid ? snapPoints.vertical.concat([ targetMid.x ]) : snapPoints.vertical, x);\r\n    sy = snapTo(targetMid ? snapPoints.horizontal.concat([ targetMid.y ]) : snapPoints.horizontal, y);\r\n\r\n\r\n    // correction x/y\r\n    var cx = (x - sx),\r\n        cy = (y - sy);\r\n\r\n    // update delta\r\n    assign(event, {\r\n      dx: event.dx - cx,\r\n      dy: event.dy - cy,\r\n      x: event.x - cx,\r\n      y: event.y - cy\r\n    });\r\n  });\r\n}\r\n\r\n\r\nBendpointSnapping.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = BendpointSnapping;\r\n","'use strict';\r\n\r\nvar Events = require(267),\r\n    Geometry = require(268);\r\n\r\nvar BENDPOINT_CLS = module.exports.BENDPOINT_CLS = 'djs-bendpoint';\r\nvar SEGMENT_DRAGGER_CLS = module.exports.SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477);\r\n\r\nvar rotate = require(279).rotate,\r\n    translate = require(279).translate;\r\n\r\n\r\nmodule.exports.toCanvasCoordinates = function(canvas, event) {\r\n\r\n  var position = Events.toPoint(event),\r\n      clientRect = canvas._container.getBoundingClientRect(),\r\n      offset;\r\n\r\n  // canvas relative position\r\n\r\n  offset = {\r\n    x: clientRect.left,\r\n    y: clientRect.top\r\n  };\r\n\r\n  // update actual event payload with canvas relative measures\r\n\r\n  var viewbox = canvas.viewbox();\r\n\r\n  return {\r\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\r\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\r\n  };\r\n};\r\n\r\nmodule.exports.addBendpoint = function(parentGfx, cls) {\r\n  var groupGfx = svgCreate('g');\r\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\r\n\r\n  svgAppend(parentGfx, groupGfx);\r\n\r\n  var visual = svgCreate('circle');\r\n  svgAttr(visual, {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 4\r\n  });\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(groupGfx, visual);\r\n\r\n  var hit = svgCreate('circle');\r\n  svgAttr(hit, {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 10\r\n  });\r\n  svgClasses(hit).add('djs-hit');\r\n\r\n  svgAppend(groupGfx, hit);\r\n\r\n  if (cls) {\r\n    svgClasses(groupGfx).add(cls);\r\n  }\r\n\r\n  return groupGfx;\r\n};\r\n\r\nfunction createParallelDragger(parentGfx, position, alignment) {\r\n  var draggerGfx = svgCreate('g');\r\n\r\n  svgAppend(parentGfx, draggerGfx);\r\n\r\n  var width = 14,\r\n      height = 3,\r\n      padding = 6,\r\n      hitWidth = width + padding,\r\n      hitHeight = height + padding;\r\n\r\n  var visual = svgCreate('rect');\r\n  svgAttr(visual, {\r\n    x: -width / 2,\r\n    y: -height / 2,\r\n    width: width,\r\n    height: height\r\n  });\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(draggerGfx, visual);\r\n\r\n  var hit = svgCreate('rect');\r\n  svgAttr(hit, {\r\n    x: -hitWidth / 2,\r\n    y: -hitHeight / 2,\r\n    width: hitWidth,\r\n    height: hitHeight\r\n  });\r\n  svgClasses(hit).add('djs-hit');\r\n\r\n  svgAppend(draggerGfx, hit);\r\n\r\n  rotate(draggerGfx, alignment === 'h' ? 90 : 0, 0, 0);\r\n\r\n  return draggerGfx;\r\n}\r\n\r\n\r\nmodule.exports.addSegmentDragger = function(parentGfx, segmentStart, segmentEnd) {\r\n\r\n  var groupGfx = svgCreate('g'),\r\n      mid = Geometry.getMidPoint(segmentStart, segmentEnd),\r\n      alignment = Geometry.pointsAligned(segmentStart, segmentEnd);\r\n\r\n  svgAppend(parentGfx, groupGfx);\r\n\r\n  createParallelDragger(groupGfx, mid, alignment);\r\n\r\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\r\n  svgClasses(groupGfx).add(alignment === 'h' ? 'vertical' : 'horizontal');\r\n\r\n  translate(groupGfx, mid.x, mid.y);\r\n\r\n  return groupGfx;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar domEvent = require(450),\r\n    domQuery = require(452),\r\n    BendpointUtil = require(142);\r\n\r\nvar pointsAligned = require(268).pointsAligned,\r\n    getMidPoint = require(268).getMidPoint;\r\n\r\nvar BENDPOINT_CLS = BendpointUtil.BENDPOINT_CLS,\r\n    SEGMENT_DRAGGER_CLS = BendpointUtil.SEGMENT_DRAGGER_CLS;\r\n\r\nvar getApproxIntersection = require(272).getApproxIntersection;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar translate = require(279).translate;\r\n\r\n\r\n/**\r\n * A service that adds editable bendpoints to connections.\r\n */\r\nfunction Bendpoints(eventBus, canvas, interactionEvents,\r\n                    bendpointMove, connectionSegmentMove) {\r\n\r\n  function getConnectionIntersection(waypoints, event) {\r\n    var localPosition = BendpointUtil.toCanvasCoordinates(canvas, event),\r\n        intersection = getApproxIntersection(waypoints, localPosition);\r\n\r\n    return intersection;\r\n  }\r\n\r\n  function isIntersectionMiddle(intersection, waypoints, treshold) {\r\n    var idx = intersection.index,\r\n        p = intersection.point,\r\n        p0, p1, mid, aligned, xDelta, yDelta;\r\n\r\n    if (idx <= 0 || intersection.bendpoint) {\r\n      return false;\r\n    }\r\n\r\n    p0 = waypoints[idx - 1];\r\n    p1 = waypoints[idx];\r\n    mid = getMidPoint(p0, p1),\r\n    aligned = pointsAligned(p0, p1);\r\n    xDelta = Math.abs(p.x - mid.x);\r\n    yDelta = Math.abs(p.y - mid.y);\r\n\r\n    return aligned && xDelta <= treshold && yDelta <= treshold;\r\n  }\r\n\r\n  function activateBendpointMove(event, connection) {\r\n    var waypoints = connection.waypoints,\r\n        intersection = getConnectionIntersection(waypoints, event);\r\n\r\n    if (!intersection) {\r\n      return;\r\n    }\r\n\r\n    if (isIntersectionMiddle(intersection, waypoints, 10)) {\r\n      connectionSegmentMove.start(event, connection, intersection.index);\r\n    } else {\r\n      bendpointMove.start(event, connection, intersection.index, !intersection.bendpoint);\r\n    }\r\n  }\r\n\r\n  function bindInteractionEvents(node, eventName, element) {\r\n\r\n    domEvent.bind(node, eventName, function(event) {\r\n      interactionEvents.triggerMouseEvent(eventName, event, element);\r\n      event.stopPropagation();\r\n    });\r\n  }\r\n\r\n  function getBendpointsContainer(element, create) {\r\n\r\n    var layer = canvas.getLayer('overlays'),\r\n        gfx = domQuery('.djs-bendpoints[data-element-id=' + element.id + ']', layer);\r\n\r\n    if (!gfx && create) {\r\n      gfx = svgCreate('g');\r\n      svgAttr(gfx, { 'data-element-id': element.id });\r\n      svgClasses(gfx).add('djs-bendpoints');\r\n\r\n      svgAppend(layer, gfx);\r\n\r\n      bindInteractionEvents(gfx, 'mousedown', element);\r\n      bindInteractionEvents(gfx, 'click', element);\r\n      bindInteractionEvents(gfx, 'dblclick', element);\r\n    }\r\n\r\n    return gfx;\r\n  }\r\n\r\n  function createBendpoints(gfx, connection) {\r\n    connection.waypoints.forEach(function(p, idx) {\r\n      var bendpoint = BendpointUtil.addBendpoint(gfx);\r\n\r\n      svgAppend(gfx, bendpoint);\r\n\r\n      translate(bendpoint, p.x, p.y);\r\n    });\r\n\r\n    // add floating bendpoint\r\n    BendpointUtil.addBendpoint(gfx, 'floating');\r\n  }\r\n\r\n  function createSegmentDraggers(gfx, connection) {\r\n\r\n    var waypoints = connection.waypoints;\r\n\r\n    var segmentStart,\r\n        segmentEnd;\r\n\r\n    for (var i = 1; i < waypoints.length; i++) {\r\n\r\n      segmentStart = waypoints[i - 1];\r\n      segmentEnd = waypoints[i];\r\n\r\n      if (pointsAligned(segmentStart, segmentEnd)) {\r\n        BendpointUtil.addSegmentDragger(gfx, segmentStart, segmentEnd);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearBendpoints(gfx) {\r\n    forEach(domQuery.all('.' + BENDPOINT_CLS, gfx), function(node) {\r\n      svgRemove(node);\r\n    });\r\n  }\r\n\r\n  function clearSegmentDraggers(gfx) {\r\n    forEach(domQuery.all('.' + SEGMENT_DRAGGER_CLS, gfx), function(node) {\r\n      svgRemove(node);\r\n    });\r\n  }\r\n\r\n  function addHandles(connection) {\r\n\r\n    var gfx = getBendpointsContainer(connection);\r\n\r\n    if (!gfx) {\r\n      gfx = getBendpointsContainer(connection, true);\r\n\r\n      createBendpoints(gfx, connection);\r\n      createSegmentDraggers(gfx, connection);\r\n    }\r\n\r\n    return gfx;\r\n  }\r\n\r\n  function updateHandles(connection) {\r\n\r\n    var gfx = getBendpointsContainer(connection);\r\n\r\n    if (gfx) {\r\n      clearSegmentDraggers(gfx);\r\n      clearBendpoints(gfx);\r\n      createSegmentDraggers(gfx, connection);\r\n      createBendpoints(gfx, connection);\r\n    }\r\n  }\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n    updateHandles(event.element);\r\n  });\r\n\r\n  eventBus.on('connection.remove', function(event) {\r\n    var gfx = getBendpointsContainer(event.element);\r\n\r\n    if (gfx) {\r\n      svgRemove(gfx);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.marker.update', function(event) {\r\n\r\n    var element = event.element,\r\n        bendpointsGfx;\r\n\r\n    if (!element.waypoints) {\r\n      return;\r\n    }\r\n\r\n    bendpointsGfx = addHandles(element);\r\n\r\n    if (event.add) {\r\n      svgClasses(bendpointsGfx).add(event.marker);\r\n    } else {\r\n      svgClasses(bendpointsGfx).remove(event.marker);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.mousemove', function(event) {\r\n\r\n    var element = event.element,\r\n        waypoints = element.waypoints,\r\n        bendpointsGfx,\r\n        floating,\r\n        intersection;\r\n\r\n    if (waypoints) {\r\n      bendpointsGfx = getBendpointsContainer(element, true);\r\n      floating = domQuery('.floating', bendpointsGfx);\r\n\r\n      if (!floating) {\r\n        return;\r\n      }\r\n\r\n      intersection = getConnectionIntersection(waypoints, event.originalEvent);\r\n\r\n      if (intersection) {\r\n        translate(floating, intersection.point.x, intersection.point.y);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.mousedown', function(event) {\r\n\r\n    var originalEvent = event.originalEvent,\r\n        element = event.element,\r\n        waypoints = element.waypoints;\r\n\r\n    if (!waypoints) {\r\n      return;\r\n    }\r\n\r\n    activateBendpointMove(originalEvent, element, waypoints);\r\n  });\r\n\r\n  eventBus.on('selection.changed', function(event) {\r\n    var newSelection = event.newSelection,\r\n        primary = newSelection[0];\r\n\r\n    if (primary && primary.waypoints) {\r\n      addHandles(primary);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.hover', function(event) {\r\n    var element = event.element;\r\n\r\n    if (element.waypoints) {\r\n      addHandles(element);\r\n      interactionEvents.registerEvent(event.gfx, 'mousemove', 'element.mousemove');\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.out', function(event) {\r\n    interactionEvents.unregisterEvent(event.gfx, 'mousemove', 'element.mousemove');\r\n  });\r\n\r\n  // update bendpoint container data attribute on element ID change\r\n  eventBus.on('element.updateId', function(context) {\r\n    var element = context.element,\r\n        newId = context.newId;\r\n\r\n    if (element.waypoints) {\r\n      var bendpointContainer = getBendpointsContainer(element);\r\n\r\n      if (bendpointContainer) {\r\n        svgAttr(bendpointContainer, { 'data-element-id': newId });\r\n      }\r\n    }\r\n  });\r\n\r\n  // API\r\n\r\n  this.addHandles = addHandles;\r\n  this.updateHandles = updateHandles;\r\n  this.getBendpointsContainer = getBendpointsContainer;\r\n}\r\n\r\nBendpoints.$inject = [\r\n  'eventBus', 'canvas', 'interactionEvents',\r\n  'bendpointMove', 'connectionSegmentMove'\r\n];\r\n\r\nmodule.exports = Bendpoints;\r\n","'use strict';\r\n\r\nvar Geometry = require(268),\r\n    BendpointUtil = require(142),\r\n    LayoutUtil = require(252);\r\n\r\nvar MARKER_CONNECT_HOVER = 'connect-hover',\r\n    MARKER_CONNECT_UPDATING = 'djs-updating';\r\n\r\nvar svgClasses = require(474),\r\n    svgRemove = require(480);\r\n\r\nvar translate = require(279).translate;\r\n\r\n\r\nfunction axisAdd(point, axis, delta) {\r\n  return axisSet(point, axis, point[axis] + delta);\r\n}\r\n\r\nfunction axisSet(point, axis, value) {\r\n  return {\r\n    x: (axis === 'x' ? value : point.x),\r\n    y: (axis === 'y' ? value : point.y)\r\n  };\r\n}\r\n\r\nfunction axisFenced(position, segmentStart, segmentEnd, axis) {\r\n\r\n  var maxValue = Math.max(segmentStart[axis], segmentEnd[axis]),\r\n      minValue = Math.min(segmentStart[axis], segmentEnd[axis]);\r\n\r\n  var padding = 20;\r\n\r\n  var fencedValue = Math.min(Math.max(minValue + padding, position[axis]), maxValue - padding);\r\n\r\n  return axisSet(segmentStart, axis, fencedValue);\r\n}\r\n\r\nfunction flipAxis(axis) {\r\n  return axis === 'x' ? 'y' : 'x';\r\n}\r\n\r\n/**\r\n * Get the docking point on the given element.\r\n *\r\n * Compute a reasonable docking, if non exists.\r\n *\r\n * @param  {Point} point\r\n * @param  {djs.model.Shape} referenceElement\r\n * @param  {String} moveAxis (x|y)\r\n *\r\n * @return {Point}\r\n */\r\nfunction getDocking(point, referenceElement, moveAxis) {\r\n\r\n  var referenceMid,\r\n      inverseAxis;\r\n\r\n  if (point.original) {\r\n    return point.original;\r\n  } else {\r\n    referenceMid = LayoutUtil.getMid(referenceElement);\r\n    inverseAxis = flipAxis(moveAxis);\r\n\r\n    return axisSet(point, inverseAxis, referenceMid[inverseAxis]);\r\n  }\r\n}\r\n\r\n/**\r\n * A component that implements moving of bendpoints\r\n */\r\nfunction ConnectionSegmentMove(injector, eventBus, canvas, dragging, graphicsFactory, rules, modeling) {\r\n\r\n  // optional connection docking integration\r\n  var connectionDocking = injector.get('connectionDocking', false);\r\n\r\n\r\n  // API\r\n\r\n  this.start = function(event, connection, idx) {\r\n\r\n    var context,\r\n        gfx = canvas.getGraphics(connection),\r\n        segmentStartIndex = idx - 1,\r\n        segmentEndIndex = idx,\r\n        waypoints = connection.waypoints,\r\n        segmentStart = waypoints[segmentStartIndex],\r\n        segmentEnd = waypoints[segmentEndIndex],\r\n        direction,\r\n        axis;\r\n\r\n    direction = Geometry.pointsAligned(segmentStart, segmentEnd);\r\n\r\n    // do not move diagonal connection\r\n    if (!direction) {\r\n      return;\r\n    }\r\n\r\n    // the axis where we are going to move things\r\n    axis = direction === 'v' ? 'y' : 'x';\r\n\r\n    if (segmentStartIndex === 0) {\r\n      segmentStart = getDocking(segmentStart, connection.source, axis);\r\n    }\r\n\r\n    if (segmentEndIndex === waypoints.length - 1) {\r\n      segmentEnd = getDocking(segmentEnd, connection.target, axis);\r\n    }\r\n\r\n    context = {\r\n      connection: connection,\r\n      segmentStartIndex: segmentStartIndex,\r\n      segmentEndIndex: segmentEndIndex,\r\n      segmentStart: segmentStart,\r\n      segmentEnd: segmentEnd,\r\n      axis: axis\r\n    };\r\n\r\n    dragging.init(event, {\r\n      x: (segmentStart.x + segmentEnd.x)/2,\r\n      y: (segmentStart.y + segmentEnd.y)/2\r\n    }, 'connectionSegment.move', {\r\n      cursor: axis === 'x' ? 'resize-ew' : 'resize-ns',\r\n      data: {\r\n        connection: connection,\r\n        connectionGfx: gfx,\r\n        context: context\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Crop connection if connection cropping is provided.\r\n   *\r\n   * @param {Connection} connection\r\n   * @param {Array<Point>} newWaypoints\r\n   *\r\n   * @return {Array<Point>} cropped connection waypoints\r\n   */\r\n  function cropConnection(connection, newWaypoints) {\r\n\r\n    // crop connection, if docking service is provided only\r\n    if (!connectionDocking) {\r\n      return newWaypoints;\r\n    }\r\n\r\n    var oldWaypoints = connection.waypoints,\r\n        croppedWaypoints;\r\n\r\n    // temporary set new waypoints\r\n    connection.waypoints = newWaypoints;\r\n\r\n    croppedWaypoints = connectionDocking.getCroppedWaypoints(connection);\r\n\r\n    // restore old waypoints\r\n    connection.waypoints = oldWaypoints;\r\n\r\n    return croppedWaypoints;\r\n  }\r\n\r\n  // DRAGGING IMPLEMENTATION\r\n\r\n  function redrawConnection(data) {\r\n    graphicsFactory.update('connection', data.connection, data.connectionGfx);\r\n  }\r\n\r\n  function updateDragger(context, segmentOffset, event) {\r\n\r\n    var newWaypoints = context.newWaypoints,\r\n        segmentStartIndex = context.segmentStartIndex + segmentOffset,\r\n        segmentStart = newWaypoints[segmentStartIndex],\r\n        segmentEndIndex = context.segmentEndIndex + segmentOffset,\r\n        segmentEnd = newWaypoints[segmentEndIndex],\r\n        axis = flipAxis(context.axis);\r\n\r\n    // make sure the dragger does not move\r\n    // outside the connection\r\n    var draggerPosition = axisFenced(event, segmentStart, segmentEnd, axis);\r\n\r\n    // update dragger\r\n    translate(context.draggerGfx, draggerPosition.x, draggerPosition.y);\r\n  }\r\n\r\n  /**\r\n   * Filter waypoints for redundant ones (i.e. on the same axis).\r\n   * Returns the filtered waypoints and the offset related to the segment move.\r\n   *\r\n   * @param {Array<Point>} waypoints\r\n   * @param {Integer} segmentStartIndex of moved segment start\r\n   *\r\n   * @return {Object} { filteredWaypoints, segmentOffset }\r\n   */\r\n  function filterRedundantWaypoints(waypoints, segmentStartIndex) {\r\n\r\n    var segmentOffset = 0;\r\n\r\n    var filteredWaypoints = waypoints.filter(function(r, idx) {\r\n      if (Geometry.pointsOnLine(waypoints[idx - 1], waypoints[idx + 1], r)) {\r\n\r\n        // remove point and increment offset\r\n        segmentOffset = idx <= segmentStartIndex ? segmentOffset - 1 : segmentOffset;\r\n        return false;\r\n      }\r\n\r\n      // dont remove point\r\n      return true;\r\n    });\r\n\r\n    return {\r\n      waypoints: filteredWaypoints,\r\n      segmentOffset: segmentOffset\r\n    };\r\n  }\r\n\r\n  eventBus.on('connectionSegment.move.start', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = e.connection,\r\n        layer = canvas.getLayer('overlays');\r\n\r\n    context.originalWaypoints = connection.waypoints.slice();\r\n\r\n    // add dragger gfx\r\n    context.draggerGfx = BendpointUtil.addSegmentDragger(layer, context.segmentStart, context.segmentEnd);\r\n    svgClasses(context.draggerGfx).add('djs-dragging');\r\n\r\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.move', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        segmentStartIndex = context.segmentStartIndex,\r\n        segmentEndIndex = context.segmentEndIndex,\r\n        segmentStart = context.segmentStart,\r\n        segmentEnd = context.segmentEnd,\r\n        axis = context.axis;\r\n\r\n    var newWaypoints = context.originalWaypoints.slice(),\r\n        newSegmentStart = axisAdd(segmentStart, axis, e['d' + axis]),\r\n        newSegmentEnd = axisAdd(segmentEnd, axis, e['d' + axis]);\r\n\r\n    // original waypoint count and added / removed\r\n    // from start waypoint delta. We use the later\r\n    // to retrieve the updated segmentStartIndex / segmentEndIndex\r\n    var waypointCount = newWaypoints.length,\r\n        segmentOffset = 0;\r\n\r\n    // move segment start / end by axis delta\r\n    newWaypoints[segmentStartIndex] = newSegmentStart;\r\n    newWaypoints[segmentEndIndex] = newSegmentEnd;\r\n\r\n    var sourceToSegmentOrientation,\r\n        targetToSegmentOrientation;\r\n\r\n    // handle first segment\r\n    if (segmentStartIndex < 2) {\r\n      sourceToSegmentOrientation = LayoutUtil.getOrientation(connection.source, newSegmentStart);\r\n\r\n      // first bendpoint, remove first segment if intersecting\r\n      if (segmentStartIndex === 1) {\r\n\r\n        if (sourceToSegmentOrientation === 'intersect') {\r\n          newWaypoints.shift();\r\n          newWaypoints[0] = newSegmentStart;\r\n          segmentOffset--;\r\n        }\r\n      }\r\n\r\n      // docking point, add segment if not intersecting anymore\r\n      else {\r\n        if (sourceToSegmentOrientation !== 'intersect') {\r\n          newWaypoints.unshift(segmentStart);\r\n          segmentOffset++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // handle last segment\r\n    if (segmentEndIndex > waypointCount - 3) {\r\n      targetToSegmentOrientation = LayoutUtil.getOrientation(connection.target, newSegmentEnd);\r\n\r\n      // last bendpoint, remove last segment if intersecting\r\n      if (segmentEndIndex === waypointCount - 2) {\r\n\r\n        if (targetToSegmentOrientation === 'intersect') {\r\n          newWaypoints.pop();\r\n          newWaypoints[newWaypoints.length - 1] = newSegmentEnd;\r\n        }\r\n      }\r\n\r\n      // last bendpoint, remove last segment if intersecting\r\n      else {\r\n        if (targetToSegmentOrientation !== 'intersect') {\r\n          newWaypoints.push(segmentEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    // update connection waypoints\r\n    context.newWaypoints = connection.waypoints = cropConnection(connection, newWaypoints);\r\n\r\n    // update dragger position\r\n    updateDragger(context, segmentOffset, e);\r\n\r\n    // save segmentOffset in context\r\n    context.newSegmentStartIndex = segmentStartIndex + segmentOffset;\r\n\r\n    // redraw connection\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.hover', function(e) {\r\n\r\n    e.context.hover = e.hover;\r\n    canvas.addMarker(e.hover, MARKER_CONNECT_HOVER);\r\n  });\r\n\r\n  eventBus.on([\r\n    'connectionSegment.move.out',\r\n    'connectionSegment.move.cleanup'\r\n  ], function(e) {\r\n\r\n    // remove connect marker\r\n    // if it was added\r\n    var hover = e.context.hover;\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.cleanup', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection;\r\n\r\n    // remove dragger gfx\r\n    if (context.draggerGfx) {\r\n      svgRemove(context.draggerGfx);\r\n    }\r\n\r\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on([\r\n    'connectionSegment.move.cancel',\r\n    'connectionSegment.move.end'\r\n  ], function(e) {\r\n    var context = e.context,\r\n        connection = context.connection;\r\n\r\n    connection.waypoints = context.originalWaypoints;\r\n\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.end', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        newWaypoints = context.newWaypoints,\r\n        newSegmentStartIndex = context.newSegmentStartIndex;\r\n\r\n    // ensure we have actual pixel values bendpoint\r\n    // coordinates (important when zoom level was > 1 during move)\r\n    newWaypoints = newWaypoints.map(function(p) {\r\n      return {\r\n        original: p.original,\r\n        x: Math.round(p.x),\r\n        y: Math.round(p.y)\r\n      };\r\n    });\r\n\r\n    // apply filter redunant waypoints\r\n    var filtered = filterRedundantWaypoints(newWaypoints, newSegmentStartIndex);\r\n\r\n    // get filtered waypoints\r\n    var filteredWaypoints = filtered.waypoints,\r\n        croppedWaypoints = cropConnection(connection, filteredWaypoints),\r\n        segmentOffset = filtered.segmentOffset;\r\n\r\n    var hints = {\r\n      segmentMove: {\r\n        segmentStartIndex: context.segmentStartIndex,\r\n        newSegmentStartIndex: newSegmentStartIndex + segmentOffset\r\n      }\r\n    };\r\n\r\n    modeling.updateWaypoints(connection, croppedWaypoints, hints);\r\n  });\r\n}\r\n\r\nConnectionSegmentMove.$inject = [\r\n  'injector', 'eventBus', 'canvas',\r\n  'dragging', 'graphicsFactory', 'rules',\r\n  'modeling'\r\n];\r\n\r\nmodule.exports = ConnectionSegmentMove;\r\n","module.exports = {\r\n  __depends__: [ require(162), require(227) ],\r\n  __init__: [ 'bendpoints', 'bendpointSnapping' ],\r\n  bendpoints: [ 'type', require(143) ],\r\n  bendpointMove: [ 'type', require(140) ],\r\n  connectionSegmentMove: [ 'type', require(144) ],\r\n  bendpointSnapping: [ 'type', require(141) ]\r\n};\r\n","'use strict';\r\n\r\nvar getElementType = require(266).getType;\r\n\r\n/**\r\n * Adds change support to the diagram, including\r\n *\r\n * <ul>\r\n *   <li>redrawing shapes and connections on change</li>\r\n * </ul>\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {GraphicsFactory} graphicsFactory\r\n */\r\nfunction ChangeSupport(eventBus, canvas, elementRegistry, graphicsFactory) {\r\n\r\n  // redraw shapes / connections on change\r\n\r\n  eventBus.on('element.changed', function(event) {\r\n\r\n    var element = event.element;\r\n\r\n    // element might have been deleted and replaced by new element with same ID\r\n    // thus check for parent of element except for root element\r\n    if (element.parent || element === canvas.getRootElement()) {\r\n      event.gfx = elementRegistry.getGraphics(element);\r\n    }\r\n\r\n    // shape + gfx may have been deleted\r\n    if (!event.gfx) {\r\n      return;\r\n    }\r\n\r\n    eventBus.fire(getElementType(element) + '.changed', event);\r\n  });\r\n\r\n  eventBus.on('elements.changed', function(event) {\r\n\r\n    var elements = event.elements;\r\n\r\n    elements.forEach(function(e) {\r\n      eventBus.fire('element.changed', { element: e });\r\n    });\r\n\r\n    graphicsFactory.updateContainments(elements);\r\n  });\r\n\r\n  eventBus.on('shape.changed', function(event) {\r\n    graphicsFactory.update('shape', event.element, event.gfx);\r\n  });\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n    graphicsFactory.update('connection', event.element, event.gfx);\r\n  });\r\n}\r\n\r\nChangeSupport.$inject = [ 'eventBus', 'canvas', 'elementRegistry', 'graphicsFactory' ];\r\n\r\nmodule.exports = ChangeSupport;\r\n","module.exports = {\r\n  __init__: [ 'changeSupport'],\r\n  changeSupport: [ 'type', require(146) ]\r\n};","'use strict';\r\n\r\n/**\r\n * A clip board stub\r\n */\r\nfunction Clipboard() {}\r\n\r\nmodule.exports = Clipboard;\r\n\r\n\r\nClipboard.prototype.get = function() {\r\n  return this._data;\r\n};\r\n\r\nClipboard.prototype.set = function(data) {\r\n  this._data = data;\r\n};\r\n\r\nClipboard.prototype.clear = function() {\r\n  var data = this._data;\r\n\r\n  delete this._data;\r\n\r\n  return data;\r\n};\r\n\r\nClipboard.prototype.isEmpty = function() {\r\n  return !this._data;\r\n};","module.exports = {\r\n  clipboard: [ 'type', require(148) ]\r\n};\r\n","'use strict';\r\n\r\nvar LayoutUtil = require(252);\r\n\r\nvar MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok';\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\n\r\nfunction Connect(eventBus, dragging, modeling, rules, canvas, graphicsFactory) {\r\n\r\n  // TODO(nre): separate UI and events\r\n\r\n  // rules\r\n\r\n  function canConnect(source, target) {\r\n    return rules.allowed('connection.create', {\r\n      source: source,\r\n      target: target\r\n    });\r\n  }\r\n\r\n\r\n  // layouting\r\n\r\n  function crop(start, end, source, target) {\r\n\r\n    var sourcePath = graphicsFactory.getShapePath(source),\r\n        targetPath = target && graphicsFactory.getShapePath(target),\r\n        connectionPath = graphicsFactory.getConnectionPath({ waypoints: [ start, end ] });\r\n\r\n    start = LayoutUtil.getElementLineIntersection(sourcePath, connectionPath, true) || start;\r\n    end = (target && LayoutUtil.getElementLineIntersection(targetPath, connectionPath, false)) || end;\r\n\r\n    return [ start, end ];\r\n  }\r\n\r\n\r\n  // event handlers\r\n\r\n  eventBus.on('connect.move', function(event) {\r\n\r\n    var context = event.context,\r\n        source = context.source,\r\n        target = context.target,\r\n        visual = context.visual,\r\n        sourcePosition = context.sourcePosition,\r\n        endPosition,\r\n        waypoints;\r\n\r\n    // update connection visuals during drag\r\n\r\n    endPosition = {\r\n      x: event.x,\r\n      y: event.y\r\n    };\r\n\r\n    waypoints = crop(sourcePosition, endPosition, source, target);\r\n\r\n    svgAttr(visual, { 'points': [ waypoints[0].x, waypoints[0].y, waypoints[1].x, waypoints[1].y ] });\r\n  });\r\n\r\n  eventBus.on('connect.hover', function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        hover = event.hover,\r\n        canExecute;\r\n\r\n    canExecute = context.canExecute = canConnect(source, hover);\r\n\r\n    // simply ignore hover\r\n    if (canExecute === null) {\r\n      return;\r\n    }\r\n\r\n    context.target = hover;\r\n\r\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n  });\r\n\r\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.target) {\r\n      canvas.removeMarker(context.target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n\r\n    context.target = null;\r\n  });\r\n\r\n  eventBus.on('connect.cleanup', function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.visual) {\r\n      svgRemove(context.visual);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connect.start', function(event) {\r\n    var context = event.context,\r\n        visual;\r\n\r\n    visual = svgCreate('polyline');\r\n    svgAttr(visual, {\r\n      'stroke': '#333',\r\n      'strokeDasharray': [ 1 ],\r\n      'strokeWidth': 2,\r\n      'pointer-events': 'none'\r\n    });\r\n\r\n    svgAppend(canvas.getDefaultLayer(), visual);\r\n\r\n    context.visual = visual;\r\n  });\r\n\r\n  eventBus.on('connect.end', function(event) {\r\n\r\n    var context = event.context,\r\n        source = context.source,\r\n        sourcePosition = context.sourcePosition,\r\n        target = context.target,\r\n        targetPosition = {\r\n          x: event.x,\r\n          y: event.y\r\n        },\r\n        canExecute = context.canExecute || canConnect(source, target);\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    var attrs = null,\r\n        hints = {\r\n          connectionStart: sourcePosition,\r\n          connectionEnd: targetPosition\r\n        };\r\n\r\n    if (typeof canExecute === 'object') {\r\n      attrs = canExecute;\r\n    }\r\n\r\n    modeling.connect(source, target, attrs, hints);\r\n  });\r\n\r\n\r\n  // API\r\n\r\n  /**\r\n   * Start connect operation.\r\n   *\r\n   * @param {DOMEvent} event\r\n   * @param {djs.model.Base} source\r\n   * @param {Point} [sourcePosition]\r\n   * @param {Boolean} [autoActivate=false]\r\n   */\r\n  this.start = function(event, source, sourcePosition, autoActivate) {\r\n\r\n    if (typeof sourcePosition !== 'object') {\r\n      autoActivate = sourcePosition;\r\n      sourcePosition = LayoutUtil.getMid(source);\r\n    }\r\n\r\n    dragging.init(event, 'connect', {\r\n      autoActivate: autoActivate,\r\n      data: {\r\n        shape: source,\r\n        context: {\r\n          source: source,\r\n          sourcePosition: sourcePosition\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nConnect.$inject = [ 'eventBus', 'dragging', 'modeling', 'rules', 'canvas', 'graphicsFactory' ];\r\n\r\nmodule.exports = Connect;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(233),\r\n    require(227),\r\n    require(162)\r\n  ],\r\n  connect: [ 'type', require(150) ]\r\n};\r\n","'use strict';\r\n\r\nvar isFunction = require(423),\r\n    isArray = require(422),\r\n    forEach = require(303),\r\n\r\n    domDelegate = require(448),\r\n    domEvent = require(450),\r\n    domAttr = require(444),\r\n    domQuery = require(452),\r\n    domClasses = require(445),\r\n    domify = require(449);\r\n\r\n\r\nvar entrySelector = '.entry';\r\n\r\n\r\n/**\r\n * A context pad that displays element specific, contextual actions next\r\n * to a diagram element.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Overlays} overlays\r\n */\r\nfunction ContextPad(eventBus, overlays) {\r\n\r\n  this._providers = [];\r\n\r\n  this._eventBus = eventBus;\r\n  this._overlays = overlays;\r\n\r\n  this._current = null;\r\n\r\n  this._init();\r\n}\r\n\r\nContextPad.$inject = [ 'eventBus', 'overlays' ];\r\n\r\nmodule.exports = ContextPad;\r\n\r\n\r\n/**\r\n * Registers events needed for interaction with other components\r\n */\r\nContextPad.prototype._init = function() {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('selection.changed', function(e) {\r\n\r\n    var selection = e.newSelection;\r\n\r\n    if (selection.length === 1) {\r\n      self.open(selection[0]);\r\n    } else {\r\n      self.close();\r\n    }\r\n  });\r\n\r\n  eventBus.on('elements.delete', function(event) {\r\n    var elements = event.elements;\r\n\r\n    forEach(elements, function(e) {\r\n      if (self.isOpen(e)) {\r\n        self.close();\r\n      }\r\n    });\r\n  });\r\n\r\n  eventBus.on('element.changed', function(event) {\r\n    var element = event.element,\r\n        current = self._current;\r\n\r\n    // force reopen if element for which we are currently opened changed\r\n    if (current && current.element === element) {\r\n      self.open(element, true);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Register a provider with the context pad\r\n *\r\n * @param  {ContextPadProvider} provider\r\n */\r\nContextPad.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n};\r\n\r\n\r\n/**\r\n * Returns the context pad entries for a given element\r\n *\r\n * @param {djs.element.Base} element\r\n *\r\n * @return {Array<ContextPadEntryDescriptor>} list of entries\r\n */\r\nContextPad.prototype.getEntries = function(element) {\r\n  var entries = {};\r\n\r\n  // loop through all providers and their entries.\r\n  // group entries by id so that overriding an entry is possible\r\n  forEach(this._providers, function(provider) {\r\n    var e = provider.getContextPadEntries(element);\r\n\r\n    forEach(e, function(entry, id) {\r\n      entries[id] = entry;\r\n    });\r\n  });\r\n\r\n  return entries;\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action available on the opened context pad\r\n *\r\n * @param  {String} action\r\n * @param  {Event} event\r\n * @param  {Boolean} [autoActivate=false]\r\n */\r\nContextPad.prototype.trigger = function(action, event, autoActivate) {\r\n\r\n  var element = this._current.element,\r\n      entries = this._current.entries,\r\n      entry,\r\n      handler,\r\n      originalEvent,\r\n      button = event.delegateTarget || event.target;\r\n\r\n  if (!button) {\r\n    return event.preventDefault();\r\n  }\r\n\r\n  entry = entries[domAttr(button, 'data-action')];\r\n  handler = entry.action;\r\n\r\n  originalEvent = event.originalEvent || event;\r\n\r\n  // simple action (via callback function)\r\n  if (isFunction(handler)) {\r\n    if (action === 'click') {\r\n      return handler(originalEvent, element, autoActivate);\r\n    }\r\n  } else {\r\n    if (handler[action]) {\r\n      return handler[action](originalEvent, element, autoActivate);\r\n    }\r\n  }\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n};\r\n\r\n\r\n/**\r\n * Open the context pad for the given element\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Boolean} force if true, force reopening the context pad\r\n */\r\nContextPad.prototype.open = function(element, force) {\r\n  if (!force && this.isOpen(element)) {\r\n    return;\r\n  }\r\n\r\n  this.close();\r\n  this._updateAndOpen(element);\r\n};\r\n\r\n\r\nContextPad.prototype._updateAndOpen = function(element) {\r\n\r\n  var entries = this.getEntries(element),\r\n      pad = this.getPad(element),\r\n      html = pad.html;\r\n\r\n  forEach(entries, function(entry, id) {\r\n    var grouping = entry.group || 'default',\r\n        control = domify(entry.html || '<div class=\"entry\" draggable=\"true\"></div>'),\r\n        container;\r\n\r\n    domAttr(control, 'data-action', id);\r\n\r\n    container = domQuery('[data-group=' + grouping + ']', html);\r\n    if (!container) {\r\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\r\n      html.appendChild(container);\r\n    }\r\n\r\n    container.appendChild(control);\r\n\r\n    if (entry.className) {\r\n      addClasses(control, entry.className);\r\n    }\r\n\r\n    if (entry.title) {\r\n      domAttr(control, 'title', entry.title);\r\n    }\r\n\r\n    if (entry.imageUrl) {\r\n      control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\r\n    }\r\n  });\r\n\r\n  domClasses(html).add('open');\r\n\r\n  this._current = {\r\n    element: element,\r\n    pad: pad,\r\n    entries: entries\r\n  };\r\n\r\n  this._eventBus.fire('contextPad.open', { current: this._current });\r\n};\r\n\r\n\r\nContextPad.prototype.getPad = function(element) {\r\n  if (this.isOpen()) {\r\n    return this._current.pad;\r\n  }\r\n\r\n  var self = this;\r\n\r\n  var overlays = this._overlays;\r\n\r\n  var html = domify('<div class=\"djs-context-pad\"></div>');\r\n\r\n  domDelegate.bind(html, entrySelector, 'click', function(event) {\r\n    self.trigger('click', event);\r\n  });\r\n\r\n  domDelegate.bind(html, entrySelector, 'dragstart', function(event) {\r\n    self.trigger('dragstart', event);\r\n  });\r\n\r\n  // stop propagation of mouse events\r\n  domEvent.bind(html, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  this._overlayId = overlays.add(element, 'context-pad', {\r\n    position: {\r\n      right: -9,\r\n      top: -6\r\n    },\r\n    html: html\r\n  });\r\n\r\n  var pad = overlays.get(this._overlayId);\r\n\r\n  this._eventBus.fire('contextPad.create', { element: element, pad: pad });\r\n\r\n  return pad;\r\n};\r\n\r\n\r\n/**\r\n * Close the context pad\r\n */\r\nContextPad.prototype.close = function() {\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._overlays.remove(this._overlayId);\r\n\r\n  this._overlayId = null;\r\n\r\n  this._eventBus.fire('contextPad.close', { current: this._current });\r\n\r\n  this._current = null;\r\n};\r\n\r\n/**\r\n * Check if pad is open. If element is given, will check\r\n * if pad is opened with given element.\r\n *\r\n * @param {Element} element\r\n * @return {Boolean}\r\n */\r\nContextPad.prototype.isOpen = function(element) {\r\n  return !!this._current && (!element ? true : this._current.element === element);\r\n};\r\n\r\n\r\n\r\n\r\n////////// helpers /////////////////////////////\r\n\r\nfunction addClasses(element, classNames) {\r\n\r\n  var classes = domClasses(element);\r\n\r\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(//s+/g);\r\n  actualClassNames.forEach(function(cls) {\r\n    classes.add(cls);\r\n  });\r\n}","module.exports = {\r\n  __depends__: [\r\n    require(170),\r\n    require(211)\r\n  ],\r\n  contextPad: [ 'type', require(152) ]\r\n};","'use strict';\r\n\r\nvar isArray = require(422),\r\n    forEach = require(303),\r\n    map = require(305),\r\n    find = require(302),\r\n    findIndex = require(290),\r\n    sortBy = require(310),\r\n    reduce = require(306);\r\n\r\nvar getBBox = require(266).getBBox;\r\n\r\nvar PositionUtil = require(276);\r\n\r\nvar CopyPasteUtil = require(264),\r\n    ElementsUtil = require(266);\r\n\r\n\r\n\r\nfunction CopyPaste(eventBus, modeling, elementFactory, rules, clipboard, canvas) {\r\n  this._eventBus = eventBus;\r\n  this._modeling = modeling;\r\n  this._elementFactory = elementFactory;\r\n  this._rules = rules;\r\n  this._canvas = canvas;\r\n\r\n  this._clipboard = clipboard;\r\n\r\n  this._descriptors = [];\r\n\r\n\r\n  // Element creation priorities:\r\n  // - 1: Independent shapes\r\n  // - 2: Attached shapes\r\n  // - 3: Connections\r\n  // - 4: labels\r\n  this.registerDescriptor(function(element, descriptor) {\r\n    // Base priority\r\n    descriptor.priority = 1;\r\n\r\n    descriptor.id = element.id;\r\n\r\n    if (element.parent) {\r\n      descriptor.parent = element.parent.id;\r\n    }\r\n\r\n    if (element.labelTarget) {\r\n      // Labels priority\r\n      descriptor.priority = 4;\r\n      descriptor.labelTarget = element.labelTarget.id;\r\n    }\r\n\r\n    if (element.host) {\r\n      // Attached shapes priority\r\n      descriptor.priority = 2;\r\n      descriptor.host = element.host.id;\r\n    }\r\n\r\n    if (typeof element.x === 'number') {\r\n      descriptor.x = element.x;\r\n      descriptor.y = element.y;\r\n    }\r\n\r\n    if (element.width) {\r\n      descriptor.width = element.width;\r\n      descriptor.height = element.height;\r\n    }\r\n\r\n    if (element.waypoints) {\r\n      // Connections priority\r\n      descriptor.priority = 3;\r\n      descriptor.waypoints = [];\r\n\r\n      forEach(element.waypoints, function(waypoint) {\r\n        var wp = {\r\n          x: waypoint.x,\r\n          y: waypoint.y\r\n        };\r\n\r\n        if (waypoint.original) {\r\n          wp.original = {\r\n            x: waypoint.original.x,\r\n            y: waypoint.original.y\r\n          };\r\n        }\r\n\r\n        descriptor.waypoints.push(wp);\r\n      });\r\n    }\r\n\r\n    if (element.source && element.target) {\r\n      descriptor.source = element.source.id;\r\n      descriptor.target = element.target.id;\r\n    }\r\n\r\n    return descriptor;\r\n  });\r\n}\r\n\r\nCopyPaste.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'elementFactory',\r\n  'rules',\r\n  'clipboard',\r\n  'canvas'\r\n];\r\n\r\nmodule.exports = CopyPaste;\r\n\r\n/**\r\n * Copy a number of elements.\r\n *\r\n * @param {djs.model.Base} selectedElements\r\n *\r\n * @return {Object} the copied tree\r\n */\r\nCopyPaste.prototype.copy = function(selectedElements) {\r\n  var clipboard = this._clipboard,\r\n      tree, bbox;\r\n\r\n  if (!isArray(selectedElements)) {\r\n    selectedElements = selectedElements ? [ selectedElements ] : [];\r\n  }\r\n\r\n  if (!selectedElements.length) {\r\n    return;\r\n  }\r\n\r\n  tree = this.createTree(selectedElements);\r\n\r\n  bbox = this._bbox = PositionUtil.center(getBBox(tree.allShapes));\r\n\r\n  // not needed after computing the center position of the copied elements\r\n  delete tree.allShapes;\r\n\r\n  forEach(tree, function(elements) {\r\n\r\n    forEach(elements, function(element) {\r\n      var delta, labelTarget;\r\n\r\n      // set label's relative position to their label target\r\n      if (element.labelTarget) {\r\n        labelTarget = find(elements, { id: element.labelTarget });\r\n\r\n        // just grab the delta from the first waypoint\r\n        if (labelTarget.waypoints) {\r\n          delta = PositionUtil.delta(element, labelTarget.waypoints[0]);\r\n        } else {\r\n          delta = PositionUtil.delta(element, labelTarget);\r\n        }\r\n\r\n      } else\r\n      if (element.priority === 3) {\r\n        // connections have priority 3\r\n        delta = [];\r\n\r\n        forEach(element.waypoints, function(waypoint) {\r\n          var waypointDelta = PositionUtil.delta(waypoint, bbox);\r\n\r\n          delta.push(waypointDelta);\r\n        }, this);\r\n      } else {\r\n        delta = PositionUtil.delta(element, bbox);\r\n      }\r\n\r\n      element.delta = delta;\r\n    });\r\n  });\r\n\r\n  this._eventBus.fire('elements.copy', { context: { tree: tree } });\r\n\r\n  // if tree is empty, means that nothing can be or is allowed to be copied\r\n  if (Object.keys(tree).length === 0) {\r\n    clipboard.clear();\r\n  } else {\r\n    clipboard.set(tree);\r\n  }\r\n\r\n  this._eventBus.fire('elements.copied', { context: { tree: tree } });\r\n\r\n  return tree;\r\n};\r\n\r\n\r\n// Allow pasting under the cursor\r\nCopyPaste.prototype.paste = function(context) {\r\n  var clipboard = this._clipboard,\r\n      modeling = this._modeling,\r\n      eventBus = this._eventBus,\r\n      rules = this._rules;\r\n\r\n  var tree = clipboard.get(),\r\n      topParent = context.element,\r\n      position = context.point,\r\n      newTree, canPaste;\r\n\r\n  if (clipboard.isEmpty()) {\r\n    return;\r\n  }\r\n\r\n  newTree = reduce(tree, function(pasteTree, elements, depthStr) {\r\n    var depth = parseInt(depthStr, 10);\r\n\r\n    if (isNaN(depth)) {\r\n      return pasteTree;\r\n    }\r\n\r\n    pasteTree[depth] = elements;\r\n\r\n    return pasteTree;\r\n  }, {}, this);\r\n\r\n\r\n  canPaste = rules.allowed('elements.paste', {\r\n    tree: newTree,\r\n    target: topParent\r\n  });\r\n\r\n  if (!canPaste) {\r\n    eventBus.fire('elements.paste.rejected', {\r\n      context: {\r\n        tree: newTree,\r\n        position: position,\r\n        target: topParent\r\n      }\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  modeling.pasteElements(newTree, topParent, position);\r\n};\r\n\r\n\r\nCopyPaste.prototype._computeDelta = function(elements, element) {\r\n  var bbox = this._bbox,\r\n      delta = {};\r\n\r\n  // set label's relative position to their label target\r\n  if (element.labelTarget) {\r\n    return PositionUtil.delta(element, element.labelTarget);\r\n  }\r\n\r\n  // connections have prority 3\r\n  if (element.priority === 3) {\r\n    delta = [];\r\n\r\n    forEach(element.waypoints, function(waypoint) {\r\n      var waypointDelta = PositionUtil.delta(waypoint, bbox);\r\n\r\n      delta.push(waypointDelta);\r\n    }, this);\r\n  } else {\r\n    delta = PositionUtil.delta(element, bbox);\r\n  }\r\n\r\n  return delta;\r\n};\r\n\r\n\r\n/**\r\n * Checks if the element in question has a relations to other elements.\r\n * Possible dependants: connections, labels, attachers\r\n *\r\n * @param  {Array} elements\r\n * @param  {Object} element\r\n *\r\n * @return {Boolean}\r\n */\r\nCopyPaste.prototype.hasRelations = function(elements, element) {\r\n  var source, target, labelTarget;\r\n\r\n  if (element.waypoints) {\r\n    source = find(elements, { id: element.source.id });\r\n    target = find(elements, { id: element.target.id });\r\n\r\n    if (!source || !target) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (element.labelTarget) {\r\n    labelTarget = find(elements, { id: element.labelTarget.id });\r\n\r\n    if (!labelTarget) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\nCopyPaste.prototype.registerDescriptor = function(descriptor) {\r\n  if (typeof descriptor !== 'function') {\r\n    throw new Error('the descriptor must be a function');\r\n  }\r\n\r\n  if (this._descriptors.indexOf(descriptor) !== -1) {\r\n    throw new Error('this descriptor is already registered');\r\n  }\r\n\r\n  this._descriptors.push(descriptor);\r\n};\r\n\r\n\r\nCopyPaste.prototype._executeDescriptors = function(data) {\r\n  if (!data.descriptor) {\r\n    data.descriptor = {};\r\n  }\r\n\r\n  forEach(this._descriptors, function(descriptor) {\r\n    data.descriptor = descriptor(data.element, data.descriptor);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Creates a tree like structure from an arbitrary collection of elements\r\n *\r\n * @example\r\n * tree: {\r\n *\t0: [\r\n *\t\t{ id: 'shape_12da', priority: 1, ... },\r\n *\t\t{ id: 'shape_01bj', priority: 1, ... },\r\n *\t\t{ id: 'connection_79fa', source: 'shape_12da', target: 'shape_01bj', priority: 3, ... },\r\n *\t],\r\n *\t1: [ ... ]\r\n * };\r\n *\r\n * @param  {Array} elements\r\n * @return {Object}\r\n */\r\nCopyPaste.prototype.createTree = function(elements) {\r\n  var rules = this._rules;\r\n\r\n  var tree = {},\r\n      includedElements = [],\r\n      _elements;\r\n\r\n  var topLevel = CopyPasteUtil.getTopLevel(elements);\r\n\r\n  tree.allShapes = [];\r\n\r\n  function canCopy(collection, element) {\r\n    return rules.allowed('element.copy', {\r\n      collection: collection,\r\n      element: element\r\n    });\r\n  }\r\n\r\n  function includeElement(data) {\r\n    var idx = findIndex(includedElements, { element: data.element }),\r\n        element;\r\n\r\n    if (idx !== -1) {\r\n      element = includedElements[idx];\r\n    } else {\r\n      return includedElements.push(data);\r\n    }\r\n\r\n    // makes sure that it has the correct depth\r\n    if (element.depth < data.depth) {\r\n      includedElements.splice(idx, 1);\r\n\r\n      includedElements.push(data);\r\n    }\r\n  }\r\n\r\n\r\n  ElementsUtil.eachElement(topLevel, function(element, i, depth) {\r\n    var nestedChildren = element.children;\r\n\r\n    // don't add labels directly\r\n    if (element.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    function getNested(lists) {\r\n      forEach(lists, function(list) {\r\n        if (list && list.length) {\r\n\r\n          forEach(list, function(elem) {\r\n            // fetch element's label\r\n            if (elem.label) {\r\n              includeElement({\r\n                element: elem.label,\r\n                depth: depth\r\n              });\r\n            }\r\n\r\n            includeElement({\r\n              element: elem,\r\n              depth: depth\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // fetch element's label\r\n    if (element.label) {\r\n      includeElement({\r\n        element: element.label,\r\n        depth: depth\r\n      });\r\n    }\r\n\r\n    getNested([ element.attachers, element.incoming, element.outgoing ]);\r\n\r\n    includeElement({\r\n      element: element,\r\n      depth: depth\r\n    });\r\n\r\n    if (nestedChildren) {\r\n      return nestedChildren;\r\n    }\r\n  });\r\n\r\n  includedElements = map(includedElements, function(data) {\r\n    // this is where other registered descriptors hook in\r\n    return this._executeDescriptors(data);\r\n  }, this);\r\n\r\n  // order the elements to check if the ones dependant on others (by relationship)\r\n  // can be copied. f.ex: label needs it's label target\r\n  includedElements = sortBy(includedElements, function(data) {\r\n    return data.descriptor.priority;\r\n  });\r\n\r\n  _elements = map(includedElements, function(data) {\r\n    return data.element;\r\n  });\r\n\r\n  forEach(includedElements, function(data) {\r\n    var depth = data.depth;\r\n\r\n    if (!this.hasRelations(tree.allShapes, data.element)) {\r\n      return;\r\n    }\r\n\r\n    if (!canCopy(_elements, data.element)) {\r\n      return;\r\n    }\r\n\r\n    tree.allShapes.push(data.element);\r\n\r\n    // create depth branches\r\n    if (!tree[depth]) {\r\n      tree[depth] = [];\r\n    }\r\n\r\n    tree[depth].push(data.descriptor);\r\n  }, this);\r\n\r\n  return tree;\r\n};\r\n","module.exports = {\r\n  __depends__: [\r\n    require(149),\r\n    require(227),\r\n    require(203)\r\n  ],\r\n  __init__: [ 'copyPaste' ],\r\n  copyPaste: [ 'type', require(154) ]\r\n};\r\n","'use strict';\r\n\r\nvar LOW_PRIORITY = 750;\r\n\r\nvar MARKER_OK = 'drop-ok',\r\n    MARKER_NOT_OK = 'drop-not-ok',\r\n    MARKER_ATTACH = 'attach-ok',\r\n    MARKER_NEW_PARENT = 'new-parent';\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar translate = require(279).translate;\r\n\r\n\r\nfunction Create(eventBus, dragging, rules, modeling, canvas, styles, graphicsFactory) {\r\n\r\n  // rules\r\n\r\n  function canCreate(shape, target, source, position) {\r\n\r\n    if (source) {\r\n      return rules.allowed('shape.append', {\r\n        source: source,\r\n        shape: shape,\r\n        target: target,\r\n        position: position\r\n      });\r\n    } else {\r\n      return rules.allowed('shape.create', {\r\n        shape: shape,\r\n        target: target,\r\n        position: position\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /** set drop marker on an element */\r\n  function setMarker(element, marker) {\r\n\r\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\r\n\r\n      if (m === marker) {\r\n        canvas.addMarker(element, m);\r\n      } else {\r\n        canvas.removeMarker(element, m);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // visual helpers\r\n\r\n  function createVisual(shape) {\r\n    var group, preview, visual;\r\n\r\n    group = svgCreate('g');\r\n    svgAttr(group, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n    svgAppend(canvas.getDefaultLayer(), group);\r\n\r\n    preview = svgCreate('g');\r\n    svgClasses(preview).add('djs-dragger');\r\n\r\n    svgAppend(group, preview);\r\n\r\n    translate(preview, shape.width / -2, shape.height / -2);\r\n\r\n    var visualGroup = svgCreate('g');\r\n    svgClasses(visualGroup).add('djs-visual');\r\n\r\n    svgAppend(preview, visualGroup);\r\n\r\n    visual = visualGroup;\r\n\r\n    // hijack renderer to draw preview\r\n    graphicsFactory.drawShape(visual, shape);\r\n\r\n    return group;\r\n  }\r\n\r\n\r\n  // event handlers\r\n\r\n  eventBus.on('create.move', function(event) {\r\n\r\n    var context = event.context,\r\n        hover = event.hover,\r\n        canExecute;\r\n\r\n    var position = {\r\n      x: event.x,\r\n      y: event.y\r\n    };\r\n\r\n    canExecute = context.canExecute = hover && canCreate(context.shape, hover, context.source, position);\r\n\r\n    // ignore hover visually if canExecute is null\r\n    if (hover && canExecute !== null) {\r\n      context.target = hover;\r\n\r\n      if (canExecute === 'attach') {\r\n        setMarker(hover, MARKER_ATTACH);\r\n      } else {\r\n        setMarker(hover, context.canExecute ? MARKER_NEW_PARENT : MARKER_NOT_OK);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        visual = context.visual;\r\n\r\n    // lazy init drag visual once we received the first real\r\n    // drag move event (this allows us to get the proper canvas local coordinates)\r\n    if (!visual) {\r\n      visual = context.visual = createVisual(shape);\r\n    }\r\n\r\n    translate(visual, event.x, event.y);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'create.end', 'create.out', 'create.cleanup' ], function(event) {\r\n    var context = event.context,\r\n        target = context.target;\r\n\r\n    if (target) {\r\n      setMarker(target, null);\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.end', function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        shape = context.shape,\r\n        target = context.target,\r\n        canExecute = context.canExecute,\r\n        isAttach,\r\n        position = {\r\n          x: event.x,\r\n          y: event.y\r\n        };\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    if (source) {\r\n      shape = modeling.appendShape(source, shape, position, target);\r\n    } else {\r\n      isAttach = canExecute === 'attach';\r\n\r\n      shape = modeling.createShape(shape, position, target, isAttach);\r\n    }\r\n\r\n    // make sure we provide the actual attached\r\n    // shape with the context so that selection and\r\n    // other components can use it right after the create\r\n    // operation ends\r\n    context.shape = shape;\r\n  });\r\n\r\n\r\n  eventBus.on('create.cleanup', function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.visual) {\r\n      svgRemove(context.visual);\r\n    }\r\n  });\r\n\r\n  // API\r\n\r\n  this.start = function(event, shape, source) {\r\n\r\n    dragging.init(event, 'create', {\r\n      cursor: 'grabbing',\r\n      autoActivate: true,\r\n      data: {\r\n        shape: shape,\r\n        context: {\r\n          shape: shape,\r\n          source: source\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nCreate.$inject = [ 'eventBus', 'dragging', 'rules', 'modeling', 'canvas', 'styles', 'graphicsFactory' ];\r\n\r\nmodule.exports = Create;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(162),\r\n    require(233),\r\n    require(227)\r\n  ],\r\n  create: [ 'type', require(156) ]\r\n};\r\n","'use strict';\r\n\r\nvar sortBy = require(310),\r\n    forEach = require(303),\r\n    filter = require(301);\r\n\r\nvar AXIS_DIMENSIONS = {\r\n  horizontal: [ 'x', 'width' ],\r\n  vertical: [ 'y', 'height' ]\r\n};\r\n\r\nvar THRESHOLD = 5;\r\n\r\n/**\r\n * Groups and filters elements and then trigger even distribution.\r\n */\r\nfunction DistributeElements(modeling) {\r\n  this._modeling = modeling;\r\n\r\n  this._filters = [];\r\n\r\n  // register filter for filtering big elements\r\n  this.registerFilter(function(elements, axis, dimension) {\r\n    var elementsSize = 0,\r\n        numOfShapes = 0,\r\n        avgDimension;\r\n\r\n    forEach(elements, function(element) {\r\n      if (element.waypoints || element.labelTarget) {\r\n        return;\r\n      }\r\n\r\n      elementsSize += element[dimension];\r\n\r\n      numOfShapes += 1;\r\n    });\r\n\r\n    avgDimension = Math.round(elementsSize / numOfShapes);\r\n\r\n    return filter(elements, function(element) {\r\n      return element[dimension] < (avgDimension + 50);\r\n    });\r\n  });\r\n\r\n}\r\n\r\nmodule.exports = DistributeElements;\r\n\r\nDistributeElements.$inject = [ 'modeling' ];\r\n\r\n\r\n/**\r\n * Registers filter functions that allow external parties to filter\r\n * out certain elements.\r\n *\r\n * @param  {Function} filterFn\r\n */\r\nDistributeElements.prototype.registerFilter = function(filterFn) {\r\n  if (typeof filterFn !== 'function') {\r\n    throw new Error('the filter has to be a function');\r\n  }\r\n\r\n  this._filters.push(filterFn);\r\n};\r\n\r\n/**\r\n * Distributes the elements with a given orientation\r\n *\r\n * @param  {Array} elements    [description]\r\n * @param  {String} orientation [description]\r\n */\r\nDistributeElements.prototype.trigger = function(elements, orientation) {\r\n  var modeling = this._modeling;\r\n\r\n  var groups,\r\n      distributableElements;\r\n\r\n  if (elements.length < 3) {\r\n    return;\r\n  }\r\n\r\n  this._setOrientation(orientation);\r\n\r\n  distributableElements = this._filterElements(elements);\r\n\r\n  groups = this._createGroups(distributableElements);\r\n\r\n  // nothing to distribute\r\n  if (groups.length <= 2) {\r\n    return;\r\n  }\r\n\r\n  modeling.distributeElements(groups, this._axis, this._dimension);\r\n\r\n  return groups;\r\n};\r\n\r\n/**\r\n * Filters the elements with provided filters by external parties\r\n *\r\n * @param  {Array[Elements]} elements\r\n *\r\n * @return {Array[Elements]}\r\n */\r\nDistributeElements.prototype._filterElements = function(elements) {\r\n  var filters = this._filters,\r\n      axis = this._axis,\r\n      dimension = this._dimension,\r\n      distributableElements = [].concat(elements);\r\n\r\n  if (!filters.length) {\r\n    return elements;\r\n  }\r\n\r\n  forEach(filters, function(filterFn) {\r\n    distributableElements = filterFn(distributableElements, axis, dimension);\r\n  });\r\n\r\n  return distributableElements;\r\n};\r\n\r\n\r\n/**\r\n * Create range (min, max) groups. Also tries to group elements\r\n * together that share the same range.\r\n *\r\n * @example\r\n * \tvar distributableElements = [\r\n * \t\t{\r\n * \t\t\trange: {\r\n * \t\t\t\tmin: 100,\r\n * \t\t\t\tmax: 200\r\n * \t\t\t},\r\n * \t\t\telements: [ { id: 'shape1', .. }]\r\n * \t\t}\r\n * \t]\r\n *\r\n * @param  {Array} elements\r\n *\r\n * @return {Array[Objects]}\r\n */\r\nDistributeElements.prototype._createGroups = function(elements) {\r\n  var rangeGroups = [],\r\n      axis = this._axis,\r\n      dimension = this._dimension;\r\n\r\n  if (!axis) {\r\n    throw new Error('must have a defined \"axis\" and \"dimension\"');\r\n  }\r\n\r\n  // sort by 'left->right' or 'top->bottom'\r\n  var sortedElements = sortBy(elements, axis);\r\n\r\n  forEach(sortedElements, function(element, idx) {\r\n    var elementRange = this._findRange(element, axis, dimension),\r\n        range;\r\n\r\n    var previous = rangeGroups[rangeGroups.length - 1];\r\n\r\n    if (previous && this._hasIntersection(previous.range, elementRange)) {\r\n      rangeGroups[rangeGroups.length - 1].elements.push(element);\r\n    } else {\r\n      range = { range: elementRange, elements: [ element ] };\r\n\r\n      rangeGroups.push(range);\r\n    }\r\n  }, this);\r\n\r\n  return rangeGroups;\r\n};\r\n\r\n\r\n/**\r\n * Maps a direction to the according axis and dimension\r\n *\r\n * @param  {String} direction 'horizontal' or 'vertical'\r\n */\r\nDistributeElements.prototype._setOrientation = function(direction) {\r\n  var orientation = AXIS_DIMENSIONS[direction];\r\n\r\n  this._axis = orientation[0];\r\n  this._dimension = orientation[1];\r\n};\r\n\r\n\r\n/**\r\n * Checks if the two ranges intercept each other\r\n *\r\n * @param  {Object} rangeA {min, max}\r\n * @param  {Object} rangeB {min, max}\r\n *\r\n * @return {Boolean}\r\n */\r\nDistributeElements.prototype._hasIntersection = function(rangeA, rangeB) {\r\n  return Math.max(rangeA.min, rangeA.max) >= Math.min(rangeB.min, rangeB.max) &&\r\n         Math.min(rangeA.min, rangeA.max) <= Math.max(rangeB.min, rangeB.max);\r\n};\r\n\r\n\r\n/**\r\n * Returns the min and max values for an element\r\n *\r\n * @param  {[type]} element   [description]\r\n * @param  {[type]} axis      [description]\r\n * @param  {[type]} dimension [description]\r\n *\r\n * @return {[type]}           [description]\r\n */\r\nDistributeElements.prototype._findRange = function(element) {\r\n  var axis = element[this._axis],\r\n      dimension = element[this._dimension];\r\n\r\n  return {\r\n    min: axis + THRESHOLD,\r\n    max: axis + dimension - THRESHOLD\r\n  };\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'distributeElements' ],\r\n  distributeElements: [ 'type', require(158) ]\r\n};\r\n","'use strict';\r\n\r\n/* global TouchEvent */\r\n\r\nvar round = Math.round;\r\n\r\nvar assign = require(431);\r\n\r\nvar domEvent = require(450),\r\n    Event = require(267),\r\n    ClickTrap = require(262),\r\n    Cursor = require(265);\r\n\r\nvar EventBusEvent = require(125).Event;\r\n\r\nvar DRAG_ACTIVE_CLS = 'djs-drag-active';\r\n\r\n\r\nfunction suppressEvent(event) {\r\n  if (event instanceof MouseEvent) {\r\n    Event.stopEvent(event, true);\r\n  } else {\r\n    Event.preventDefault(event);\r\n  }\r\n}\r\n\r\nfunction getLength(point) {\r\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\r\n}\r\n\r\nfunction substract(p1, p2) {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y\r\n  };\r\n}\r\n\r\n/**\r\n * A helper that fires canvas localized drag events and realizes\r\n * the general \"drag-and-drop\" look and feel.\r\n *\r\n * Calling {@link Dragging#activate} activates dragging on a canvas.\r\n *\r\n * It provides the following:\r\n *\r\n *   * emits life cycle events, namespaced with a prefix assigned\r\n *     during dragging activation\r\n *   * sets and restores the cursor\r\n *   * sets and restores the selection\r\n *   * ensures there can be only one drag operation active at a time\r\n *\r\n * Dragging may be canceled manually by calling {@link Dragging#cancel}\r\n * or by pressing ESC.\r\n *\r\n *\r\n * ## Life-cycle events\r\n *\r\n * Dragging can be in three different states, off, initialized\r\n * and active.\r\n *\r\n * (1) off: no dragging operation is in progress\r\n * (2) initialized: a new drag operation got initialized but not yet\r\n *                  started (i.e. because of no initial move)\r\n * (3) started: dragging is in progress\r\n *\r\n * Eventually dragging will be off again after a drag operation has\r\n * been ended or canceled via user click or ESC key press.\r\n *\r\n * To indicate transitions between these states dragging emits generic\r\n * life-cycle events with the `drag.` prefix _and_ events namespaced\r\n * to a prefix choosen by a user during drag initialization.\r\n *\r\n * The following events are emitted (appropriately prefixed) via\r\n * the {@link EventBus}.\r\n *\r\n * * `init`\r\n * * `start`\r\n * * `move`\r\n * * `end`\r\n * * `ended` (dragging already in off state)\r\n * * `cancel` (only if previously started)\r\n * * `canceled` (dragging already in off state, only if previously started)\r\n * * `cleanup`\r\n *\r\n *\r\n * @example\r\n *\r\n * function MyDragComponent(eventBus, dragging) {\r\n *\r\n *   eventBus.on('mydrag.start', function(event) {\r\n *     console.log('yes, we start dragging');\r\n *   });\r\n *\r\n *   eventBus.on('mydrag.move', function(event) {\r\n *     console.log('canvas local coordinates', event.x, event.y, event.dx, event.dy);\r\n *\r\n *     // local drag data is passed with the event\r\n *     event.context.foo; // \"BAR\"\r\n *\r\n *     // the original mouse event, too\r\n *     event.originalEvent; // MouseEvent(...)\r\n *   });\r\n *\r\n *   eventBus.on('element.click', function(event) {\r\n *     dragging.init(event, 'mydrag', {\r\n *       cursor: 'grabbing',\r\n *       data: {\r\n *         context: {\r\n *           foo: \"BAR\"\r\n *         }\r\n *       }\r\n *     });\r\n *   });\r\n * }\r\n */\r\nfunction Dragging(eventBus, canvas, selection) {\r\n\r\n  var defaultOptions = {\r\n    threshold: 5,\r\n    trapClick: true\r\n  };\r\n\r\n  // the currently active drag operation\r\n  // dragging is active as soon as this context exists.\r\n  //\r\n  // it is visually _active_ only when a context.active flag is set to true.\r\n  var context;\r\n\r\n  /* convert a global event into local coordinates */\r\n  function toLocalPoint(globalPosition) {\r\n\r\n    var viewbox = canvas.viewbox();\r\n\r\n    var clientRect = canvas._container.getBoundingClientRect();\r\n\r\n    return {\r\n      x: viewbox.x + round((globalPosition.x - clientRect.left) / viewbox.scale),\r\n      y: viewbox.y + round((globalPosition.y - clientRect.top) / viewbox.scale)\r\n    };\r\n  }\r\n\r\n  // helpers\r\n\r\n  function fire(type, dragContext) {\r\n    dragContext = dragContext || context;\r\n\r\n    var event = assign(new EventBusEvent(), dragContext.payload, dragContext.data);\r\n\r\n    // default integration\r\n    if (eventBus.fire('drag.' + type, event) === false) {\r\n      return false;\r\n    }\r\n\r\n    return eventBus.fire(dragContext.prefix + '.' + type, event);\r\n  }\r\n\r\n  // event listeners\r\n\r\n  function move(event, activate) {\r\n    var payload = context.payload,\r\n        displacement = context.displacement;\r\n\r\n    var globalStart = context.globalStart,\r\n        globalCurrent = Event.toPoint(event),\r\n        globalDelta = substract(globalCurrent, globalStart);\r\n\r\n    var localStart = context.localStart,\r\n        localCurrent = toLocalPoint(globalCurrent),\r\n        localDelta = substract(localCurrent, localStart);\r\n\r\n    // activate context explicitly or once threshold is reached\r\n    if (!context.active && (activate || getLength(globalDelta) > context.threshold)) {\r\n\r\n      // fire start event with original\r\n      // starting coordinates\r\n\r\n      assign(payload, {\r\n        x: localStart.x + displacement.x,\r\n        y: localStart.y + displacement.y,\r\n        dx: 0,\r\n        dy: 0\r\n      }, { originalEvent: event });\r\n\r\n      if (false === fire('start')) {\r\n        return cancel();\r\n      }\r\n\r\n      context.active = true;\r\n\r\n      // unset selection and remember old selection\r\n      // the previous (old) selection will always passed\r\n      // with the event via the event.previousSelection property\r\n      if (!context.keepSelection) {\r\n        payload.previousSelection = selection.get();\r\n        selection.select(null);\r\n      }\r\n\r\n      // allow custom cursor\r\n      if (context.cursor) {\r\n        Cursor.set(context.cursor);\r\n      }\r\n\r\n      // indicate dragging via marker on root element\r\n      canvas.addMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\r\n    }\r\n\r\n    suppressEvent(event);\r\n\r\n    if (context.active) {\r\n\r\n      // update payload with actual coordinates\r\n      assign(payload, {\r\n        x: localCurrent.x + displacement.x,\r\n        y: localCurrent.y + displacement.y,\r\n        dx: localDelta.x,\r\n        dy: localDelta.y\r\n      }, { originalEvent: event });\r\n\r\n      // emit move event\r\n      fire('move');\r\n    }\r\n  }\r\n\r\n  function end(event) {\r\n    var previousContext,\r\n        returnValue = true;\r\n\r\n    if (context.active) {\r\n\r\n      if (event) {\r\n        context.payload.originalEvent = event;\r\n\r\n        // suppress original event (click, ...)\r\n        // because we just ended a drag operation\r\n        suppressEvent(event);\r\n      }\r\n\r\n      // implementations may stop restoring the\r\n      // original state (selections, ...) by preventing the\r\n      // end events default action\r\n      returnValue = fire('end');\r\n    }\r\n\r\n    if (returnValue === false) {\r\n      fire('rejected');\r\n    }\r\n\r\n    previousContext = cleanup(returnValue !== true);\r\n\r\n    // last event to be fired when all drag operations are done\r\n    // at this point in time no drag operation is in progress anymore\r\n    fire('ended', previousContext);\r\n  }\r\n\r\n\r\n  // cancel active drag operation if the user presses\r\n  // the ESC key on the keyboard\r\n\r\n  function checkCancel(event) {\r\n\r\n    if (event.which === 27) {\r\n      event.preventDefault();\r\n\r\n      cancel();\r\n    }\r\n  }\r\n\r\n\r\n  // prevent ghost click that might occur after a finished\r\n  // drag and drop session\r\n\r\n  function trapClickAndEnd(event) {\r\n\r\n    var untrap;\r\n\r\n    // trap the click in case we are part of an active\r\n    // drag operation. This will effectively prevent\r\n    // the ghost click that cannot be canceled otherwise.\r\n    if (context.active) {\r\n      untrap = ClickTrap.install();\r\n      setTimeout(untrap, 400);\r\n    }\r\n\r\n    end(event);\r\n  }\r\n\r\n  function trapTouch(event) {\r\n    move(event);\r\n  }\r\n\r\n  // update the drag events hover (djs.model.Base) and hoverGfx (Snap<SVGElement>)\r\n  // properties during hover and out and fire {prefix}.hover and {prefix}.out properties\r\n  // respectively\r\n\r\n  function hover(event) {\r\n    var payload = context.payload;\r\n\r\n    payload.hoverGfx = event.gfx;\r\n    payload.hover = event.element;\r\n\r\n    fire('hover');\r\n  }\r\n\r\n  function out(event) {\r\n    fire('out');\r\n\r\n    var payload = context.payload;\r\n\r\n    payload.hoverGfx = null;\r\n    payload.hover = null;\r\n  }\r\n\r\n\r\n  // life-cycle methods\r\n\r\n  function cancel(restore) {\r\n    var previousContext;\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    var wasActive = context.active;\r\n\r\n    if (wasActive) {\r\n      fire('cancel');\r\n    }\r\n\r\n    previousContext = cleanup(restore);\r\n\r\n    if (wasActive) {\r\n      // last event to be fired when all drag operations are done\r\n      // at this point in time no drag operation is in progress anymore\r\n      fire('canceled', previousContext);\r\n    }\r\n  }\r\n\r\n  function cleanup(restore) {\r\n    var previousContext,\r\n        endDrag;\r\n\r\n    fire('cleanup');\r\n\r\n    // reset cursor\r\n    Cursor.unset();\r\n\r\n    if (context.trapClick) {\r\n      endDrag = trapClickAndEnd;\r\n    } else {\r\n      endDrag = end;\r\n    }\r\n\r\n    // reset dom listeners\r\n    domEvent.unbind(document, 'mousemove', move);\r\n\r\n    domEvent.unbind(document, 'mousedown', endDrag, true);\r\n    domEvent.unbind(document, 'mouseup', endDrag, true);\r\n\r\n    domEvent.unbind(document, 'keyup', checkCancel);\r\n\r\n    domEvent.unbind(document, 'touchstart', trapTouch, true);\r\n    domEvent.unbind(document, 'touchcancel', cancel, true);\r\n    domEvent.unbind(document, 'touchmove', move, true);\r\n    domEvent.unbind(document, 'touchend', end, true);\r\n\r\n    eventBus.off('element.hover', hover);\r\n    eventBus.off('element.out', out);\r\n\r\n    // remove drag marker on root element\r\n    canvas.removeMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\r\n\r\n    // restore selection, unless it has changed\r\n    var previousSelection = context.payload.previousSelection;\r\n\r\n    if (restore !== false && previousSelection && !selection.get().length) {\r\n      selection.select(previousSelection);\r\n    }\r\n\r\n    previousContext = context;\r\n\r\n    context = null;\r\n\r\n    return previousContext;\r\n  }\r\n\r\n  /**\r\n   * Initialize a drag operation.\r\n   *\r\n   * If `localPosition` is given, drag events will be emitted\r\n   * relative to it.\r\n   *\r\n   * @param {MouseEvent|TouchEvent} [event]\r\n   * @param {Point} [localPosition] actual diagram local position this drag operation should start at\r\n   * @param {String} prefix\r\n   * @param {Object} [options]\r\n   */\r\n  function init(event, relativeTo, prefix, options) {\r\n\r\n    // only one drag operation may be active, at a time\r\n    if (context) {\r\n      cancel(false);\r\n    }\r\n\r\n    if (typeof relativeTo === 'string') {\r\n      options = prefix;\r\n      prefix = relativeTo;\r\n      relativeTo = null;\r\n    }\r\n\r\n    options = assign({}, defaultOptions, options || {});\r\n\r\n    var data = options.data || {},\r\n        originalEvent,\r\n        globalStart,\r\n        endDrag;\r\n\r\n    if (options.trapClick) {\r\n      endDrag = trapClickAndEnd;\r\n    } else {\r\n      endDrag = end;\r\n    }\r\n\r\n    if (event) {\r\n      originalEvent = Event.getOriginal(event) || event;\r\n      globalStart = Event.toPoint(event);\r\n\r\n      suppressEvent(event);\r\n    } else {\r\n      originalEvent = null;\r\n      globalStart = { x: 0, y: 0 };\r\n    }\r\n\r\n    var localStart = toLocalPoint(globalStart);\r\n\r\n    if (!relativeTo) {\r\n      relativeTo = localStart;\r\n    }\r\n\r\n    context = assign({\r\n      prefix: prefix,\r\n      data: data,\r\n      payload: {},\r\n      globalStart: globalStart,\r\n      displacement: substract(relativeTo, localStart),\r\n      localStart: localStart\r\n    }, options);\r\n\r\n    // skip dom registration if trigger\r\n    // is set to manual (during testing)\r\n    if (!options.manual) {\r\n\r\n      // add dom listeners\r\n\r\n      // fixes TouchEvent not being available on desktop Firefox\r\n      if (typeof TouchEvent !== 'undefined' && originalEvent instanceof TouchEvent) {\r\n        domEvent.bind(document, 'touchstart', trapTouch, true);\r\n        domEvent.bind(document, 'touchcancel', cancel, true);\r\n        domEvent.bind(document, 'touchmove', move, true);\r\n        domEvent.bind(document, 'touchend', end, true);\r\n      } else {\r\n        // assume we use the mouse to interact per default\r\n        domEvent.bind(document, 'mousemove', move);\r\n\r\n        domEvent.bind(document, 'mousedown', endDrag, true);\r\n        domEvent.bind(document, 'mouseup', endDrag, true);\r\n      }\r\n\r\n      domEvent.bind(document, 'keyup', checkCancel);\r\n\r\n      eventBus.on('element.hover', hover);\r\n      eventBus.on('element.out', out);\r\n    }\r\n\r\n    fire('init');\r\n\r\n    if (options.autoActivate) {\r\n      move(event, true);\r\n    }\r\n  }\r\n\r\n  // cancel on diagram destruction\r\n  eventBus.on('diagram.destroy', cancel);\r\n\r\n\r\n  // API\r\n\r\n  this.init = init;\r\n  this.move = move;\r\n  this.hover = hover;\r\n  this.out = out;\r\n  this.end = end;\r\n\r\n  this.cancel = cancel;\r\n\r\n  // for introspection\r\n\r\n  this.context = function() {\r\n    return context;\r\n  };\r\n\r\n  this.setOptions = function(options) {\r\n    assign(defaultOptions, options);\r\n  };\r\n}\r\n\r\nDragging.$inject = [ 'eventBus', 'canvas', 'selection' ];\r\n\r\nmodule.exports = Dragging;\r\n","'use strict';\r\n\r\nvar domClosest = require(447);\r\n\r\nvar Event = require(267);\r\n\r\nfunction getGfx(target) {\r\n  var node = domClosest(target, 'svg, .djs-element', true);\r\n  return node;\r\n}\r\n\r\n\r\n/**\r\n * Browsers may swallow the hover event if users are to\r\n * fast with the mouse.\r\n *\r\n * @see http://stackoverflow.com/questions/7448468/why-cant-i-reliably-capture-a-mouseout-event\r\n *\r\n * The fix implemented in this component ensure that we\r\n * have a hover state after a successive drag.move event.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction HoverFix(eventBus, dragging, elementRegistry) {\r\n\r\n  var self = this;\r\n\r\n  // we wait for a specific sequence of events before\r\n  // emitting a fake drag.hover event.\r\n  //\r\n  // Event Sequence:\r\n  //\r\n  // drag.start\r\n  // drag.move\r\n  // drag.move >> ensure we are hovering\r\n  //\r\n  eventBus.on('drag.start', function(event) {\r\n\r\n    eventBus.once('drag.move', function() {\r\n\r\n      eventBus.once('drag.move', function(event) {\r\n\r\n        self.ensureHover(event);\r\n      });\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Make sure we are god damn hovering!\r\n   *\r\n   * @param {Event} dragging event\r\n   */\r\n  this.ensureHover = function(event) {\r\n\r\n    if (event.hover) {\r\n      return;\r\n    }\r\n\r\n    var originalEvent = event.originalEvent,\r\n        position,\r\n        target,\r\n        element,\r\n        gfx;\r\n\r\n    if (!(originalEvent instanceof MouseEvent)) {\r\n      return;\r\n    }\r\n\r\n    position = Event.toPoint(originalEvent);\r\n\r\n    // damn expensive operation, ouch!\r\n    target = document.elementFromPoint(position.x, position.y);\r\n\r\n    gfx = getGfx(target);\r\n\r\n    if (gfx) {\r\n      element = elementRegistry.get(gfx);\r\n\r\n      dragging.hover({ element: element, gfx: gfx });\r\n    }\r\n  };\r\n\r\n}\r\n\r\nHoverFix.$inject = [ 'eventBus', 'dragging', 'elementRegistry' ];\r\n\r\nmodule.exports = HoverFix;\r\n","module.exports = {\r\n  __init__: [\r\n    'hoverFix'\r\n  ],\r\n  __depends__: [\r\n    require(233)\r\n  ],\r\n  dragging: [ 'type', require(160) ],\r\n  hoverFix: [ 'type', require(161) ]\r\n};","'use strict';\r\n\r\nvar forEach = require(303),\r\n    isArray = require(422);\r\n\r\nvar NOT_REGISTERED_ERROR = 'is not a registered action',\r\n    IS_REGISTERED_ERROR = 'is already registered';\r\n\r\n\r\n/**\r\n * An interface that provides access to modeling actions by decoupling\r\n * the one who requests the action to be triggered and the trigger itself.\r\n *\r\n * It's possible to add new actions by registering them with ´registerAction´ and likewise\r\n * unregister existing ones with ´unregisterAction´.\r\n *\r\n */\r\nfunction EditorActions(eventBus, commandStack, modeling, selection,\r\n  zoomScroll, copyPaste, canvas, rules, mouseTracking) {\r\n\r\n  this._actions = {\r\n    undo: function() {\r\n      commandStack.undo();\r\n    },\r\n    redo: function() {\r\n      commandStack.redo();\r\n    },\r\n    copy: function() {\r\n      var selectedElements = selection.get();\r\n\r\n      copyPaste.copy(selectedElements);\r\n    },\r\n    paste: function() {\r\n      var context = mouseTracking.getHoverContext();\r\n\r\n      copyPaste.paste(context);\r\n    },\r\n    stepZoom: function(opts) {\r\n      zoomScroll.stepZoom(opts.value);\r\n    },\r\n    zoom: function(opts) {\r\n      canvas.zoom(opts.value);\r\n    },\r\n    removeSelection: function() {\r\n      var selectedElements = selection.get();\r\n\r\n      if (selectedElements.length) {\r\n        var allowed = rules.allowed('elements.delete', { elements: selectedElements }),\r\n            removableElements;\r\n\r\n        if (allowed === false) {\r\n          return;\r\n        }\r\n        else if (isArray(allowed)) {\r\n          removableElements = allowed;\r\n        }\r\n        else {\r\n          removableElements = selectedElements;\r\n        }\r\n\r\n        if (removableElements.length) {\r\n          modeling.removeElements(removableElements.slice());\r\n        }\r\n      }\r\n    },\r\n    moveCanvas: function(opts) {\r\n      var dx = 0,\r\n          dy = 0,\r\n          invertY = opts.invertY,\r\n          speed = opts.speed;\r\n\r\n      var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\r\n\r\n      switch (opts.direction) {\r\n      case 'left':    // Left\r\n        dx = actualSpeed;\r\n        break;\r\n      case 'up':    // Up\r\n        dy = actualSpeed;\r\n        break;\r\n      case 'right':    // Right\r\n        dx = -actualSpeed;\r\n        break;\r\n      case 'down':    // Down\r\n        dy = -actualSpeed;\r\n        break;\r\n      }\r\n\r\n      if (dy && invertY) {\r\n        dy = -dy;\r\n      }\r\n\r\n      canvas.scroll({ dx: dx, dy: dy });\r\n    }\r\n  };\r\n}\r\n\r\nEditorActions.$inject = [\r\n  'eventBus',\r\n  'commandStack',\r\n  'modeling',\r\n  'selection',\r\n  'zoomScroll',\r\n  'copyPaste',\r\n  'canvas',\r\n  'rules',\r\n  'mouseTracking'\r\n];\r\n\r\nmodule.exports = EditorActions;\r\n\r\n\r\n/**\r\n * Triggers a registered action\r\n *\r\n * @param  {String} action\r\n * @param  {Object} opts\r\n *\r\n * @return {Unknown} Returns what the registered listener returns\r\n */\r\nEditorActions.prototype.trigger = function(action, opts) {\r\n  if (!this._actions[action]) {\r\n    throw error(action, NOT_REGISTERED_ERROR);\r\n  }\r\n\r\n  return this._actions[action](opts);\r\n};\r\n\r\n\r\n/**\r\n * Registers a collections of actions.\r\n * The key of the object will be the name of the action.\r\n *\r\n * @example\r\n * ´´´\r\n * var actions = {\r\n *   spaceTool: function() {\r\n *     spaceTool.activateSelection();\r\n *   },\r\n *   lassoTool: function() {\r\n *     lassoTool.activateSelection();\r\n *   }\r\n * ];\r\n *\r\n * editorActions.register(actions);\r\n *\r\n * editorActions.isRegistered('spaceTool'); // true\r\n * ´´´\r\n *\r\n * @param  {Object} actions\r\n */\r\nEditorActions.prototype.register = function(actions, listener) {\r\n  if (typeof actions === 'string') {\r\n    return this._registerAction(actions, listener);\r\n  }\r\n\r\n  forEach(actions, function(listener, action) {\r\n    this._registerAction(action, listener);\r\n  }, this);\r\n};\r\n\r\n/**\r\n * Registers a listener to an action key\r\n *\r\n * @param  {String} action\r\n * @param  {Function} listener\r\n */\r\nEditorActions.prototype._registerAction = function(action, listener) {\r\n  if (this.isRegistered(action)) {\r\n    throw error(action, IS_REGISTERED_ERROR);\r\n  }\r\n\r\n  this._actions[action] = listener;\r\n};\r\n\r\n/**\r\n * Unregister an existing action\r\n *\r\n * @param {String} action\r\n */\r\nEditorActions.prototype.unregister = function(action) {\r\n  if (!this.isRegistered(action)) {\r\n    throw error(action, NOT_REGISTERED_ERROR);\r\n  }\r\n\r\n  this._actions[action] = undefined;\r\n};\r\n\r\n/**\r\n * Returns the number of actions that are currently registered\r\n *\r\n * @return {Number}\r\n */\r\nEditorActions.prototype.length = function() {\r\n  return Object.keys(this._actions).length;\r\n};\r\n\r\n/**\r\n * Checks wether the given action is registered\r\n *\r\n * @param {String} action\r\n *\r\n * @return {Boolean}\r\n */\r\nEditorActions.prototype.isRegistered = function(action) {\r\n  return !!this._actions[action];\r\n};\r\n\r\n\r\nfunction error(action, message) {\r\n  return new Error(action + ' ' + message);\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(233),\r\n    require(155),\r\n    require(260)\r\n  ],\r\n  __init__: [ 'editorActions' ],\r\n  editorActions: [ 'type', require(163) ]\r\n};\r\n","'use strict';\r\n\r\nvar MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok';\r\n\r\n\r\nfunction GlobalConnect(eventBus, dragging, connect, canvas, toolManager) {\r\n  var self = this;\r\n\r\n  this._dragging = dragging;\r\n\r\n  toolManager.registerTool('global-connect', {\r\n    tool: 'global-connect',\r\n    dragging: 'global-connect.drag'\r\n  });\r\n\r\n  eventBus.on('global-connect.hover', function(event) {\r\n    var context = event.context,\r\n        startTarget = event.hover;\r\n\r\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\r\n\r\n    // simply ignore hover\r\n    if (canStartConnect === null) {\r\n      return;\r\n    }\r\n\r\n    context.startTarget = startTarget;\r\n\r\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'global-connect.out', 'global-connect.cleanup' ], function(event) {\r\n    var startTarget = event.context.startTarget,\r\n        canStartConnect = event.context.canStartConnect;\r\n\r\n    if (startTarget) {\r\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on([ 'global-connect.ended' ], function(event) {\r\n    var context = event.context,\r\n        startTarget = context.startTarget,\r\n        startPosition = {\r\n          x: event.x,\r\n          y: event.y\r\n        };\r\n\r\n    var canStartConnect = self.canStartConnect(startTarget);\r\n\r\n    if (!canStartConnect) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('element.out', function() {\r\n      eventBus.once([ 'connect.ended', 'connect.canceled' ], function() {\r\n        eventBus.fire('global-connect.drag.ended');\r\n      });\r\n\r\n      connect.start(null, startTarget, startPosition);\r\n    });\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\nGlobalConnect.$inject = [ 'eventBus', 'dragging', 'connect', 'canvas', 'toolManager' ];\r\n\r\nmodule.exports = GlobalConnect;\r\n\r\n\r\n/**\r\n * Initiates tool activity.\r\n */\r\nGlobalConnect.prototype.start = function(event) {\r\n  this._dragging.init(event, 'global-connect', {\r\n    trapClick: false,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\n\r\nGlobalConnect.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.start();\r\n  }\r\n};\r\n\r\nGlobalConnect.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^global-connect/.test(context.prefix);\r\n};\r\n\r\n\r\nGlobalConnect.prototype.registerProvider = function(provider) {\r\n  this._provider = provider;\r\n};\r\n\r\n\r\n/**\r\n * Check if source shape can initiate connection.\r\n *\r\n * @param  {Shape} startTarget\r\n * @return {Boolean}\r\n */\r\nGlobalConnect.prototype.canStartConnect = function(startTarget) {\r\n  return this._provider.canStartConnect(startTarget);\r\n};\r\n","module.exports = {\r\n  __depends__: [\r\n    require(151),\r\n    require(227),\r\n    require(162),\r\n    require(242)\r\n  ],\r\n  globalConnect: [ 'type', require(165) ]\r\n};\r\n","'use strict';\r\n\r\nvar hasPrimaryModifier = require(274).hasPrimaryModifier;\r\n\r\n\r\nvar HIGH_PRIORITY = 1500;\r\nvar HAND_CURSOR = 'grab';\r\n\r\nfunction HandTool(eventBus, canvas, dragging, toolManager) {\r\n  this._dragging = dragging;\r\n\r\n\r\n  toolManager.registerTool('hand', {\r\n    tool: 'hand',\r\n    dragging: 'hand.move'\r\n  });\r\n\r\n  eventBus.on('element.mousedown', HIGH_PRIORITY, function(event) {\r\n    if (hasPrimaryModifier(event)) {\r\n      this.activateMove(event.originalEvent);\r\n\r\n      return false;\r\n    }\r\n  }, this);\r\n\r\n\r\n  eventBus.on('hand.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return false;\r\n    }\r\n\r\n    eventBus.once('hand.ended', function() {\r\n      this.activateMove(event.originalEvent, { reactivate: true });\r\n    }, this);\r\n\r\n  }, this);\r\n\r\n\r\n  eventBus.on('hand.move.move', function(event) {\r\n    var scale = canvas.viewbox().scale;\r\n\r\n    canvas.scroll({\r\n      dx: event.dx * scale,\r\n      dy: event.dy * scale\r\n    });\r\n  });\r\n\r\n  eventBus.on('hand.move.end', function(event) {\r\n    var context = event.context,\r\n        reactivate = context.reactivate;\r\n\r\n    // Don't reactivate if the user is using the keyboard keybinding\r\n    if (!hasPrimaryModifier(event) && reactivate) {\r\n\r\n      eventBus.once('hand.move.ended', function(event) {\r\n        this.activateHand(event.originalEvent, true, true);\r\n      }, this);\r\n\r\n    }\r\n\r\n    return false;\r\n  }, this);\r\n\r\n}\r\n\r\nHandTool.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'toolManager'\r\n];\r\n\r\nmodule.exports = HandTool;\r\n\r\n\r\nHandTool.prototype.activateMove = function(event, autoActivate, context) {\r\n  if (typeof autoActivate === 'object') {\r\n    context = autoActivate;\r\n    autoActivate = false;\r\n  }\r\n\r\n  this._dragging.init(event, 'hand.move', {\r\n    autoActivate: autoActivate,\r\n    cursor: HAND_CURSOR,\r\n    data: {\r\n      context: context || {}\r\n    }\r\n  });\r\n};\r\n\r\nHandTool.prototype.activateHand = function(event, autoActivate, reactivate) {\r\n  this._dragging.init(event, 'hand', {\r\n    trapClick: false,\r\n    autoActivate: autoActivate,\r\n    cursor: HAND_CURSOR,\r\n    data: {\r\n      context: {\r\n        reactivate: reactivate\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nHandTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateHand();\r\n  }\r\n};\r\n\r\nHandTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^hand/.test(context.prefix);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [ require(242) ],\r\n  __init__: [ 'handTool' ],\r\n  handTool: [ 'type', require(167) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    domDelegate = require(448);\r\n\r\nvar isPrimaryButton = require(274).isPrimaryButton;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477);\r\n\r\nvar domQuery = require(452);\r\n\r\nvar renderUtil = require(278);\r\n\r\nvar createLine = renderUtil.createLine,\r\n    updateLine = renderUtil.updateLine;\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n/**\r\n * A plugin that provides interaction events for diagram elements.\r\n *\r\n * It emits the following events:\r\n *\r\n *   * element.hover\r\n *   * element.out\r\n *   * element.click\r\n *   * element.dblclick\r\n *   * element.mousedown\r\n *\r\n * Each event is a tuple { element, gfx, originalEvent }.\r\n *\r\n * Canceling the event via Event#preventDefault() prevents the original DOM operation.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction InteractionEvents(eventBus, elementRegistry, styles) {\r\n\r\n  var HIT_STYLE = styles.cls('djs-hit', [ 'no-fill', 'no-border' ], {\r\n    stroke: 'white',\r\n    strokeWidth: 15\r\n  });\r\n\r\n  /**\r\n   * Fire an interaction event.\r\n   *\r\n   * @param {String} type local event name, e.g. element.click.\r\n   * @param {DOMEvent} event native event\r\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\r\n   *                                   defaults to the event target\r\n   */\r\n  function fire(type, event, element) {\r\n\r\n    // only react on left mouse button interactions\r\n    // for interaction events\r\n    if (!isPrimaryButton(event)) {\r\n      return;\r\n    }\r\n\r\n    var target, gfx, returnValue;\r\n\r\n    if (!element) {\r\n      target = event.delegateTarget || event.target;\r\n\r\n      if (target) {\r\n        gfx = target;\r\n        element = elementRegistry.get(gfx);\r\n      }\r\n    } else {\r\n      gfx = elementRegistry.getGraphics(element);\r\n    }\r\n\r\n    if (!gfx || !element) {\r\n      return;\r\n    }\r\n\r\n    returnValue = eventBus.fire(type, { element: element, gfx: gfx, originalEvent: event });\r\n\r\n    if (returnValue === false) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // TODO(nikku): document this\r\n  var handlers = {};\r\n\r\n  function mouseHandler(type) {\r\n\r\n    var fn = handlers[type];\r\n\r\n    if (!fn) {\r\n      fn = handlers[type] = function(event) {\r\n        fire(type, event);\r\n      };\r\n    }\r\n\r\n    return fn;\r\n  }\r\n\r\n  var bindings = {\r\n    mouseover: 'element.hover',\r\n    mouseout: 'element.out',\r\n    click: 'element.click',\r\n    dblclick: 'element.dblclick',\r\n    mousedown: 'element.mousedown',\r\n    mouseup: 'element.mouseup'\r\n  };\r\n\r\n\r\n  ///// manual event trigger\r\n\r\n  /**\r\n   * Trigger an interaction event (based on a native dom event)\r\n   * on the target shape or connection.\r\n   *\r\n   * @param {String} eventName the name of the triggered DOM event\r\n   * @param {MouseEvent} event\r\n   * @param {djs.model.Base} targetElement\r\n   */\r\n  function triggerMouseEvent(eventName, event, targetElement) {\r\n\r\n    // i.e. element.mousedown...\r\n    var localEventName = bindings[eventName];\r\n\r\n    if (!localEventName) {\r\n      throw new Error('unmapped DOM event name <' + eventName + '>');\r\n    }\r\n\r\n    return fire(localEventName, event, targetElement);\r\n  }\r\n\r\n\r\n  var elementSelector = 'svg, .djs-element';\r\n\r\n  ///// event registration\r\n\r\n  function registerEvent(node, event, localEvent) {\r\n    var handler = mouseHandler(localEvent);\r\n    handler.$delegate = domDelegate.bind(node, elementSelector, event, handler);\r\n  }\r\n\r\n  function unregisterEvent(node, event, localEvent) {\r\n    domDelegate.unbind(node, event, mouseHandler(localEvent).$delegate);\r\n  }\r\n\r\n  function registerEvents(svg) {\r\n    forEach(bindings, function(val, key) {\r\n      registerEvent(svg, key, val);\r\n    });\r\n  }\r\n\r\n  function unregisterEvents(svg) {\r\n    forEach(bindings, function(val, key) {\r\n      unregisterEvent(svg, key, val);\r\n    });\r\n  }\r\n\r\n  eventBus.on('canvas.destroy', function(event) {\r\n    unregisterEvents(event.svg);\r\n  });\r\n\r\n  eventBus.on('canvas.init', function(event) {\r\n    registerEvents(event.svg);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit;\r\n\r\n    if (element.waypoints) {\r\n      hit = createLine(element.waypoints);\r\n    } else {\r\n      hit = svgCreate('rect');\r\n      svgAttr(hit, {\r\n        x: 0,\r\n        y: 0,\r\n        width: element.width,\r\n        height: element.height\r\n      });\r\n    }\r\n\r\n    svgAttr(hit, HIT_STYLE);\r\n\r\n    svgAppend(gfx, hit);\r\n  });\r\n\r\n  // Update djs-hit on change.\r\n  // A low priortity is necessary, because djs-hit of labels has to be updated\r\n  // after the label bounds have been updated in the renderer.\r\n  eventBus.on('shape.changed', LOW_PRIORITY, function(event) {\r\n\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit = domQuery('.djs-hit', gfx);\r\n\r\n    svgAttr(hit, {\r\n      width: element.width,\r\n      height: element.height\r\n    });\r\n  });\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit = domQuery('.djs-hit', gfx);\r\n\r\n    updateLine(hit, element.waypoints);\r\n  });\r\n\r\n\r\n  // API\r\n\r\n  this.fire = fire;\r\n\r\n  this.triggerMouseEvent = triggerMouseEvent;\r\n\r\n  this.mouseHandler = mouseHandler;\r\n\r\n  this.registerEvent = registerEvent;\r\n  this.unregisterEvent = unregisterEvent;\r\n}\r\n\r\n\r\nInteractionEvents.$inject = [ 'eventBus', 'elementRegistry', 'styles' ];\r\n\r\nmodule.exports = InteractionEvents;\r\n\r\n\r\n/**\r\n * An event indicating that the mouse hovered over an element\r\n *\r\n * @event element.hover\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has left an element\r\n *\r\n * @event element.out\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has clicked an element\r\n *\r\n * @event element.click\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has double clicked an element\r\n *\r\n * @event element.dblclick\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone down on an element.\r\n *\r\n * @event element.mousedown\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone up on an element.\r\n *\r\n * @event element.mouseup\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n","module.exports = {\r\n  __init__: [ 'interactionEvents' ],\r\n  interactionEvents: [ 'type', require(169) ]\r\n};","'use strict';\r\n\r\nvar domEvent = require(450),\r\n    domMatches = require(451);\r\n\r\n/**\r\n * A keyboard abstraction that may be activated and\r\n * deactivated by users at will, consuming key events\r\n * and triggering diagram actions.\r\n *\r\n * The implementation fires the following key events that allow\r\n * other components to hook into key handling:\r\n *\r\n *  - keyboard.bind\r\n *  - keyboard.unbind\r\n *  - keyboard.init\r\n *  - keyboard.destroy\r\n *\r\n * All events contain the fields (node, listeners).\r\n *\r\n * A default binding for the keyboard may be specified via the\r\n * `keyboard.bindTo` configuration option.\r\n *\r\n * @param {Config} config\r\n * @param {EventBus} eventBus\r\n * @param {EditorActions} editorActions\r\n */\r\nfunction Keyboard(config, eventBus, editorActions) {\r\n  var self = this;\r\n\r\n  this._config = config || {};\r\n  this._eventBus = eventBus;\r\n  this._editorActions = editorActions;\r\n\r\n  this._listeners = [];\r\n\r\n  // our key handler is a singleton that passes\r\n  // (keycode, modifiers) to each listener.\r\n  //\r\n  // listeners must indicate that they handled a key event\r\n  // by returning true. This stops the event propagation.\r\n  //\r\n  this._keyHandler = function(event) {\r\n\r\n    var i, l,\r\n        target = event.target,\r\n        listeners = self._listeners,\r\n        code = event.keyCode || event.charCode || -1;\r\n\r\n    if (target && (domMatches(target, 'input, textarea') || target.contentEditable === 'true')) {\r\n      return;\r\n    }\r\n\r\n    for (i = 0; (l = listeners[i]); i++) {\r\n      if (l(code, event)) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n    }\r\n  };\r\n\r\n  // properly clean dom registrations\r\n  eventBus.on('diagram.destroy', function() {\r\n    self._fire('destroy');\r\n\r\n    self.unbind();\r\n    self._listeners = null;\r\n  });\r\n\r\n  eventBus.on('diagram.init', function() {\r\n    self._fire('init');\r\n\r\n    if (config && config.bindTo) {\r\n      self.bind(config.bindTo);\r\n    }\r\n  });\r\n\r\n  this._init();\r\n}\r\n\r\nKeyboard.$inject = [\r\n  'config.keyboard',\r\n  'eventBus',\r\n  'editorActions'\r\n];\r\n\r\nmodule.exports = Keyboard;\r\n\r\n\r\nKeyboard.prototype.bind = function(node) {\r\n  // make sure that the keyboard is only bound once to the DOM\r\n  this.unbind();\r\n\r\n  this._node = node;\r\n\r\n  // bind key events\r\n  domEvent.bind(node, 'keydown', this._keyHandler, true);\r\n\r\n  this._fire('bind');\r\n};\r\n\r\nKeyboard.prototype.getBinding = function() {\r\n  return this._node;\r\n};\r\n\r\nKeyboard.prototype.unbind = function() {\r\n  var node = this._node;\r\n\r\n  if (node) {\r\n    this._fire('unbind');\r\n\r\n    // unbind key events\r\n    domEvent.unbind(node, 'keydown', this._keyHandler, true);\r\n  }\r\n\r\n  this._node = null;\r\n};\r\n\r\nKeyboard.prototype._fire = function(event) {\r\n  this._eventBus.fire('keyboard.' + event, { node: this._node, listeners: this._listeners });\r\n};\r\n\r\nKeyboard.prototype._init = function() {\r\n\r\n  var listeners = this._listeners;\r\n\r\n  var editorActions = this._editorActions,\r\n      config = this._config;\r\n\r\n  // init default listeners\r\n\r\n  // undo\r\n  // (CTRL|CMD) + Z\r\n  function undo(key, modifiers) {\r\n\r\n    if (isCmd(modifiers) && !isShift(modifiers) && key === 90) {\r\n      editorActions.trigger('undo');\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // redo\r\n  // CTRL + Y\r\n  // CMD + SHIFT + Z\r\n  function redo(key, modifiers) {\r\n\r\n    if (isCmd(modifiers) && (key === 89 || (key === 90 && isShift(modifiers)))) {\r\n      editorActions.trigger('redo');\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // copy\r\n  // CTRL/CMD + C\r\n  function copy(key, modifiers) {\r\n\r\n    if (isCmd(modifiers) && (key === 67)) {\r\n      editorActions.trigger('copy');\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // paste\r\n  // CTRL/CMD + V\r\n  function paste(key, modifiers) {\r\n\r\n    if (isCmd(modifiers) && (key === 86)) {\r\n      editorActions.trigger('paste');\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * zoom in one step\r\n   * CTRL + +\r\n   *\r\n   * 107 = numpad plus\r\n   * 187 = regular plus\r\n   * 171 = regular plus in Firefox (german keyboard layout)\r\n   *  61 = regular plus in Firefox (US keyboard layout)\r\n   */\r\n  function zoomIn(key, modifiers) {\r\n\r\n    if ((key === 107 || key === 187 || key === 171 || key === 61) && isCmd(modifiers)) {\r\n      editorActions.trigger('stepZoom', { value: 1 });\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * zoom out one step\r\n   * CTRL + -\r\n   *\r\n   * 109 = numpad minus\r\n   * 189 = regular minus\r\n   * 173 = regular minus in Firefox (US and german keyboard layout)\r\n   */\r\n  function zoomOut(key, modifiers) {\r\n\r\n    if ((key === 109 || key === 189 || key === 173)  && isCmd(modifiers)) {\r\n      editorActions.trigger('stepZoom', { value: -1 });\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * zoom to the default level\r\n   * CTRL + 0\r\n   *\r\n   * 96 = numpad zero\r\n   * 48 = regular zero\r\n   */\r\n  function zoomDefault(key, modifiers) {\r\n\r\n    if ((key === 96 || key === 48) && isCmd(modifiers)) {\r\n      editorActions.trigger('zoom', { value: 1 });\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // delete selected element\r\n  // DEL\r\n  function removeSelection(key, modifiers) {\r\n\r\n    if (key === 46) {\r\n      editorActions.trigger('removeSelection');\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // move canvas left\r\n  // left arrow\r\n  //\r\n  // 37 = Left\r\n  // 38 = Up\r\n  // 39 = Right\r\n  // 40 = Down\r\n  function moveCanvas(key, modifiers) {\r\n\r\n    if ([37, 38, 39, 40].indexOf(key) >= 0) {\r\n\r\n      var opts = {\r\n        invertY: config.invertY,\r\n        speed: (config.speed || 50)\r\n      };\r\n\r\n      switch (key) {\r\n      case 37:    // Left\r\n        opts.direction = 'left';\r\n        break;\r\n      case 38:    // Up\r\n        opts.direction = 'up';\r\n        break;\r\n      case 39:    // Right\r\n        opts.direction = 'right';\r\n        break;\r\n      case 40:    // Down\r\n        opts.direction = 'down';\r\n        break;\r\n      }\r\n\r\n      editorActions.trigger('moveCanvas', opts);\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  listeners.push(undo);\r\n  listeners.push(redo);\r\n  listeners.push(copy);\r\n  listeners.push(paste);\r\n  listeners.push(removeSelection);\r\n  listeners.push(zoomIn);\r\n  listeners.push(zoomOut);\r\n  listeners.push(zoomDefault);\r\n  listeners.push(moveCanvas);\r\n};\r\n\r\n\r\n/**\r\n * Add a listener function that is notified with (key, modifiers) whenever\r\n * the keyboard is bound and the user presses a key.\r\n *\r\n * @param {Function} listenerFn\r\n */\r\nKeyboard.prototype.addListener = function(listenerFn) {\r\n  this._listeners.push(listenerFn);\r\n};\r\n\r\nKeyboard.prototype.hasModifier = hasModifier;\r\nKeyboard.prototype.isCmd = isCmd;\r\nKeyboard.prototype.isShift = isShift;\r\n\r\n\r\nfunction hasModifier(modifiers) {\r\n  return (modifiers.ctrlKey || modifiers.metaKey || modifiers.shiftKey || modifiers.altKey);\r\n}\r\n\r\nfunction isCmd(modifiers) {\r\n  return modifiers.ctrlKey || modifiers.metaKey;\r\n}\r\n\r\nfunction isShift(modifiers) {\r\n  return modifiers.shiftKey;\r\n}\r\n","module.exports = {\r\n  __init__: [ 'keyboard' ],\r\n  keyboard: [ 'type', require(171) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    filter = require(301),\r\n    inherits = require(289);\r\n\r\nvar LOW_PRIORITY = 250,\r\n    HIGH_PRIORITY = 1400;\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\n/**\r\n * A handler that makes sure labels are properly moved with\r\n * their label targets.\r\n */\r\nfunction LabelSupport(eventBus, modeling, movePreview) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  // remove labels from the collection that are being\r\n  // moved with other elements anyway\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        validatedShapes = context.validatedShapes;\r\n\r\n    context.shapes = removeLabels(shapes);\r\n    context.validatedShapes = removeLabels(validatedShapes);\r\n  });\r\n\r\n\r\n  // add labels to visual's group\r\n  eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes;\r\n\r\n    var labels = [];\r\n\r\n    forEach(shapes, function(element) {\r\n      var label = element.label;\r\n\r\n      if (label && !label.hidden && context.shapes.indexOf(label) === -1) {\r\n        labels.push(label);\r\n      }\r\n\r\n      if (element.labelTarget) {\r\n        labels.push(element);\r\n      }\r\n    });\r\n\r\n    forEach(labels, function(label) {\r\n      movePreview.makeDraggable(context, label, true);\r\n    });\r\n\r\n  });\r\n\r\n  // move labels after the other shapes are done moving\r\n  this.postExecuted([ 'elements.move' ], function(e) {\r\n    var context = e.context,\r\n        closure = context.closure,\r\n        enclosedElements = closure.enclosedElements;\r\n\r\n    // ensure we move all labels with their respective elements\r\n    // if they have not been moved already\r\n    forEach(enclosedElements, function(element) {\r\n      if (element.label && !enclosedElements[element.label.id]) {\r\n        modeling.moveShape(element.label, context.delta, element.parent);\r\n      }\r\n    });\r\n\r\n  });\r\n\r\n}\r\n\r\ninherits(LabelSupport, CommandInterceptor);\r\n\r\nLabelSupport.$inject = [ 'eventBus', 'modeling', 'movePreview' ];\r\n\r\nmodule.exports = LabelSupport;\r\n\r\n\r\n/**\r\n * Return a filtered list of elements that do not\r\n * contain attached elements with hosts being part\r\n * of the selection.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeLabels(elements) {\r\n\r\n  return filter(elements, function(element) {\r\n\r\n    // filter out labels that are move together\r\n    // with their label targets\r\n    return elements.indexOf(element.labelTarget) === -1;\r\n  });\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(206)\r\n  ],\r\n  __init__: [ 'labelSupport'],\r\n  labelSupport: [ 'type', require(173) ]\r\n};\r\n","'use strict';\r\n\r\nvar values = require(440);\r\n\r\nvar getEnclosedElements = require(266).getEnclosedElements;\r\n\r\nvar hasSecondaryModifier = require(274).hasSecondaryModifier;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar LASSO_TOOL_CURSOR = 'crosshair';\r\n\r\n\r\nfunction LassoTool(eventBus, canvas, dragging, elementRegistry, selection, toolManager) {\r\n\r\n  this._selection = selection;\r\n  this._dragging = dragging;\r\n\r\n  var self = this;\r\n\r\n  // lasso visuals implementation\r\n\r\n  /**\r\n  * A helper that realizes the selection box visual\r\n  */\r\n  var visuals = {\r\n\r\n    create: function(context) {\r\n      var container = canvas.getDefaultLayer(),\r\n          frame;\r\n\r\n      frame = context.frame = svgCreate('rect');\r\n      svgAttr(frame, {\r\n        class: 'djs-lasso-overlay',\r\n        width:  1,\r\n        height: 1,\r\n        x: 0,\r\n        y: 0\r\n      });\r\n\r\n      svgAppend(container, frame);\r\n    },\r\n\r\n    update: function(context) {\r\n      var frame = context.frame,\r\n          bbox  = context.bbox;\r\n\r\n      svgAttr(frame, {\r\n        x: bbox.x,\r\n        y: bbox.y,\r\n        width: bbox.width,\r\n        height: bbox.height\r\n      });\r\n    },\r\n\r\n    remove: function(context) {\r\n\r\n      if (context.frame) {\r\n        svgRemove(context.frame);\r\n      }\r\n    }\r\n  };\r\n\r\n  toolManager.registerTool('lasso', {\r\n    tool: 'lasso.selection',\r\n    dragging: 'lasso'\r\n  });\r\n\r\n  eventBus.on('lasso.selection.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('lasso.selection.ended', function() {\r\n      self.activateLasso(event.originalEvent, true);\r\n    });\r\n  });\r\n\r\n  // lasso interaction implementation\r\n\r\n  eventBus.on('lasso.end', function(event) {\r\n\r\n    var bbox = toBBox(event);\r\n\r\n    var elements = elementRegistry.filter(function(element) {\r\n      return element;\r\n    });\r\n\r\n    self.select(elements, bbox);\r\n  });\r\n\r\n  eventBus.on('lasso.start', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    context.bbox = toBBox(event);\r\n    visuals.create(context);\r\n  });\r\n\r\n  eventBus.on('lasso.move', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    context.bbox = toBBox(event);\r\n    visuals.update(context);\r\n  });\r\n\r\n  eventBus.on('lasso.cleanup', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    visuals.remove(context);\r\n  });\r\n\r\n\r\n  // event integration\r\n\r\n  eventBus.on('element.mousedown', 1500, function(event) {\r\n\r\n    if (hasSecondaryModifier(event)) {\r\n      self.activateLasso(event.originalEvent);\r\n\r\n      event.stopPropagation();\r\n    }\r\n  });\r\n}\r\n\r\nLassoTool.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'elementRegistry',\r\n  'selection',\r\n  'toolManager'\r\n];\r\n\r\nmodule.exports = LassoTool;\r\n\r\n\r\nLassoTool.prototype.activateLasso = function(event, autoActivate) {\r\n\r\n  this._dragging.init(event, 'lasso', {\r\n    autoActivate: autoActivate,\r\n    cursor: LASSO_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\nLassoTool.prototype.activateSelection = function(event) {\r\n\r\n  this._dragging.init(event, 'lasso.selection', {\r\n    trapClick: false,\r\n    cursor: LASSO_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\nLassoTool.prototype.select = function(elements, bbox) {\r\n  var selectedElements = getEnclosedElements(elements, bbox);\r\n\r\n  this._selection.select(values(selectedElements));\r\n};\r\n\r\nLassoTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateSelection();\r\n  }\r\n};\r\n\r\nLassoTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^lasso/.test(context.prefix);\r\n};\r\n\r\n\r\n\r\nfunction toBBox(event) {\r\n\r\n  var start = {\r\n\r\n    x: event.x - event.dx,\r\n    y: event.y - event.dy\r\n  };\r\n\r\n  var end = {\r\n    x: event.x,\r\n    y: event.y\r\n  };\r\n\r\n  var bbox;\r\n\r\n  if ((start.x <= end.x && start.y < end.y) ||\r\n      (start.x < end.x && start.y <= end.y)) {\r\n\r\n    bbox = {\r\n      x: start.x,\r\n      y: start.y,\r\n      width:  end.x - start.x,\r\n      height: end.y - start.y\r\n    };\r\n  } else if ((start.x >= end.x && start.y < end.y) ||\r\n             (start.x > end.x && start.y <= end.y)) {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: start.y,\r\n      width:  start.x - end.x,\r\n      height: end.y - start.y\r\n    };\r\n  } else if ((start.x <= end.x && start.y > end.y) ||\r\n             (start.x < end.x && start.y >= end.y)) {\r\n\r\n    bbox = {\r\n      x: start.x,\r\n      y: end.y,\r\n      width:  end.x - start.x,\r\n      height: start.y - end.y\r\n    };\r\n  } else if ((start.x >= end.x && start.y > end.y) ||\r\n             (start.x > end.x && start.y >= end.y)) {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: end.y,\r\n      width:  start.x - end.x,\r\n      height: start.y - end.y\r\n    };\r\n  } else {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: end.y,\r\n      width:  0,\r\n      height: 0\r\n    };\r\n  }\r\n  return bbox;\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [ require(242) ],\r\n  __init__: [ 'lassoTool' ],\r\n  lassoTool: [ 'type', require(175) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar model = require(254);\r\n\r\n\r\n/**\r\n * The basic modeling entry point.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementFactory} elementFactory\r\n * @param {CommandStack} commandStack\r\n */\r\nfunction Modeling(eventBus, elementFactory, commandStack) {\r\n  this._eventBus = eventBus;\r\n  this._elementFactory = elementFactory;\r\n  this._commandStack = commandStack;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('diagram.init', function() {\r\n    // register modeling handlers\r\n    self.registerHandlers(commandStack);\r\n  });\r\n}\r\n\r\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack' ];\r\n\r\nmodule.exports = Modeling;\r\n\r\n\r\nModeling.prototype.getHandlers = function() {\r\n  return {\r\n    'shape.append': require(179),\r\n    'shape.create': require(182),\r\n    'shape.delete': require(185),\r\n    'shape.move': require(190),\r\n    'shape.resize': require(195),\r\n    'shape.replace': require(194),\r\n    'shape.toggleCollapse': require(197),\r\n\r\n    'spaceTool': require(196),\r\n\r\n    'label.create': require(181),\r\n\r\n    'connection.create': require(180),\r\n    'connection.delete': require(183),\r\n    'connection.move': require(188),\r\n    'connection.layout': require(187),\r\n\r\n    'connection.updateWaypoints': require(199),\r\n\r\n    'connection.reconnectStart': require(193),\r\n    'connection.reconnectEnd': require(193),\r\n\r\n    'elements.move': require(189),\r\n    'elements.delete': require(184),\r\n\r\n    'elements.distribute': require(186),\r\n    'elements.align': require(178),\r\n\r\n    'element.updateAttachment': require(198),\r\n\r\n    'elements.paste': require(192)\r\n  };\r\n};\r\n\r\n/**\r\n * Register handlers with the command stack\r\n *\r\n * @param {CommandStack} commandStack\r\n */\r\nModeling.prototype.registerHandlers = function(commandStack) {\r\n  forEach(this.getHandlers(), function(handler, id) {\r\n    commandStack.registerHandler(id, handler);\r\n  });\r\n};\r\n\r\n\r\n///// modeling helpers /////////////////////////////////////////\r\n\r\nModeling.prototype.moveShape = function(shape, delta, newParent, newParentIndex, hints) {\r\n\r\n  if (typeof newParentIndex === 'object') {\r\n    hints = newParentIndex;\r\n    newParentIndex = null;\r\n  }\r\n\r\n  var context = {\r\n    shape: shape,\r\n    delta:  delta,\r\n    newParent: newParent,\r\n    newParentIndex: newParentIndex,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.move', context);\r\n};\r\n\r\n\r\n/**\r\n * Update the attachment of the given shape.\r\n *\r\n * @param  {djs.mode.Base} shape\r\n * @param  {djs.model.Base} [newHost]\r\n */\r\nModeling.prototype.updateAttachment = function(shape, newHost) {\r\n  var context = {\r\n    shape: shape,\r\n    newHost: newHost\r\n  };\r\n\r\n  this._commandStack.execute('element.updateAttachment', context);\r\n};\r\n\r\n/**\r\n * Move a number of shapes to a new target, either setting it as\r\n * the new parent or attaching it.\r\n *\r\n * @param {Array<djs.mode.Base>} shapes\r\n * @param {Point} delta\r\n * @param {djs.model.Base} [target]\r\n * @param {Boolean} [isAttach=false]\r\n * @param {Object} [hints]\r\n */\r\nModeling.prototype.moveElements = function(shapes, delta, target, isAttach, hints) {\r\n  if (typeof isAttach === 'object') {\r\n    hints = isAttach;\r\n    isAttach = undefined;\r\n  }\r\n\r\n  var newParent = target,\r\n      newHost;\r\n\r\n  if (isAttach === true) {\r\n    newHost = target;\r\n    newParent = target.parent;\r\n  }\r\n\r\n  if (isAttach === false) {\r\n    newHost = null;\r\n  }\r\n\r\n  var context = {\r\n    shapes: shapes,\r\n    delta: delta,\r\n    newParent: newParent,\r\n    newHost: newHost,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('elements.move', context);\r\n};\r\n\r\nModeling.prototype.moveConnection = function(connection, delta, newParent, newParentIndex, hints) {\r\n\r\n  if (typeof newParentIndex === 'object') {\r\n    hints = newParentIndex;\r\n    newParentIndex = undefined;\r\n  }\r\n\r\n  var context = {\r\n    connection: connection,\r\n    delta: delta,\r\n    newParent: newParent,\r\n    newParentIndex: newParentIndex,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.move', context);\r\n};\r\n\r\n\r\nModeling.prototype.layoutConnection = function(connection, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.layout', context);\r\n};\r\n\r\n/**\r\n * Create connection.\r\n *\r\n * @param {djs.model.Base} source\r\n * @param {djs.model.Base} target\r\n * @param {Number} [targetIndex]\r\n * @param {Object|djs.model.Connection} connection\r\n * @param {djs.model.Base} parent\r\n * @param {Object} hints\r\n *\r\n * @return {djs.model.Connection} the created connection.\r\n */\r\nModeling.prototype.createConnection = function(source, target, parentIndex, connection, parent, hints) {\r\n\r\n  if (typeof parentIndex === 'object') {\r\n    hints = parent;\r\n    parent = connection;\r\n    connection = parentIndex;\r\n    parentIndex = undefined;\r\n  }\r\n\r\n  connection = this._create('connection', connection);\r\n\r\n  var context = {\r\n    source: source,\r\n    target: target,\r\n    parent: parent,\r\n    parentIndex: parentIndex,\r\n    connection: connection,\r\n    hints: hints\r\n  };\r\n\r\n  this._commandStack.execute('connection.create', context);\r\n\r\n  return context.connection;\r\n};\r\n\r\nModeling.prototype.createShape = function(shape, position, parent, parentIndex, isAttach, hints) {\r\n\r\n  if (typeof parentIndex !== 'number') {\r\n    hints = isAttach;\r\n    isAttach = parentIndex;\r\n  }\r\n\r\n  if (typeof isAttach !== 'boolean') {\r\n    hints = isAttach;\r\n    isAttach = false;\r\n  }\r\n\r\n  shape = this._create('shape', shape);\r\n\r\n  var context = {\r\n    position: position,\r\n    shape: shape,\r\n    parent: parent,\r\n    parentIndex: parentIndex,\r\n    host: shape.host,\r\n    hints: hints || {}\r\n  };\r\n\r\n  if (isAttach) {\r\n    context.parent = parent.parent;\r\n    context.host = parent;\r\n  }\r\n\r\n  this._commandStack.execute('shape.create', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\nModeling.prototype.createLabel = function(labelTarget, position, label, parent) {\r\n\r\n  label = this._create('label', label);\r\n\r\n  var context = {\r\n    labelTarget: labelTarget,\r\n    position: position,\r\n    parent: parent || labelTarget.parent,\r\n    shape: label\r\n  };\r\n\r\n  this._commandStack.execute('label.create', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\nModeling.prototype.appendShape = function(source, shape, position, parent, connection, connectionParent) {\r\n\r\n  shape = this._create('shape', shape);\r\n\r\n  var context = {\r\n    source: source,\r\n    position: position,\r\n    parent: parent,\r\n    shape: shape,\r\n    connection: connection,\r\n    connectionParent: connectionParent\r\n  };\r\n\r\n  this._commandStack.execute('shape.append', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\nModeling.prototype.removeElements = function(elements) {\r\n  var context = {\r\n    elements: elements\r\n  };\r\n\r\n  this._commandStack.execute('elements.delete', context);\r\n};\r\n\r\n\r\nModeling.prototype.distributeElements = function(groups, axis, dimension) {\r\n  var context = {\r\n    groups: groups,\r\n    axis: axis,\r\n    dimension: dimension\r\n  };\r\n\r\n  this._commandStack.execute('elements.distribute', context);\r\n};\r\n\r\n\r\nModeling.prototype.removeShape = function(shape, hints) {\r\n  var context = {\r\n    shape: shape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.delete', context);\r\n};\r\n\r\n\r\nModeling.prototype.removeConnection = function(connection, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.delete', context);\r\n};\r\n\r\nModeling.prototype.replaceShape = function(oldShape, newShape, hints) {\r\n  var context = {\r\n    oldShape: oldShape,\r\n    newData: newShape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.replace', context);\r\n\r\n  return context.newShape;\r\n};\r\n\r\nModeling.prototype.pasteElements = function(tree, topParent, position) {\r\n  var context = {\r\n    tree: tree,\r\n    topParent: topParent,\r\n    position: position\r\n  };\r\n\r\n  this._commandStack.execute('elements.paste', context);\r\n};\r\n\r\nModeling.prototype.alignElements = function(elements, alignment) {\r\n  var context = {\r\n    elements: elements,\r\n    alignment: alignment\r\n  };\r\n\r\n  this._commandStack.execute('elements.align', context);\r\n};\r\n\r\nModeling.prototype.resizeShape = function(shape, newBounds, minBounds) {\r\n  var context = {\r\n    shape: shape,\r\n    newBounds: newBounds,\r\n    minBounds: minBounds\r\n  };\r\n\r\n  this._commandStack.execute('shape.resize', context);\r\n};\r\n\r\nModeling.prototype.createSpace = function(movingShapes, resizingShapes, delta, direction) {\r\n  var context = {\r\n    movingShapes: movingShapes,\r\n    resizingShapes: resizingShapes,\r\n    delta: delta,\r\n    direction: direction\r\n  };\r\n\r\n  this._commandStack.execute('spaceTool', context);\r\n};\r\n\r\nModeling.prototype.updateWaypoints = function(connection, newWaypoints, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    newWaypoints: newWaypoints,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.updateWaypoints', context);\r\n};\r\n\r\nModeling.prototype.reconnectStart = function(connection, newSource, dockingOrPoints) {\r\n  var context = {\r\n    connection: connection,\r\n    newSource: newSource,\r\n    dockingOrPoints: dockingOrPoints\r\n  };\r\n\r\n  this._commandStack.execute('connection.reconnectStart', context);\r\n};\r\n\r\nModeling.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints) {\r\n  var context = {\r\n    connection: connection,\r\n    newTarget: newTarget,\r\n    dockingOrPoints: dockingOrPoints\r\n  };\r\n\r\n  this._commandStack.execute('connection.reconnectEnd', context);\r\n};\r\n\r\nModeling.prototype.connect = function(source, target, attrs, hints) {\r\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\r\n};\r\n\r\nModeling.prototype._create = function(type, attrs) {\r\n  if (attrs instanceof model.Base) {\r\n    return attrs;\r\n  } else {\r\n    return this._elementFactory.create(type, attrs);\r\n  }\r\n};\r\n\r\nModeling.prototype.toggleCollapse = function(shape, hints) {\r\n  var context = {\r\n    shape: shape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.toggleCollapse', context);\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\n/**\r\n * A handler that align elements in a certain way.\r\n *\r\n */\r\nfunction AlignElements(modeling, canvas) {\r\n  this._modeling = modeling;\r\n  this._canvas = canvas;\r\n}\r\n\r\nAlignElements.$inject = [ 'modeling', 'canvas' ];\r\n\r\nmodule.exports = AlignElements;\r\n\r\n\r\nAlignElements.prototype.preExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var elements = context.elements,\r\n      alignment = context.alignment;\r\n\r\n\r\n  forEach(elements, function(element) {\r\n    var delta = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n\r\n    if (alignment.left) {\r\n      delta.x = alignment.left - element.x;\r\n\r\n    } else if (alignment.right) {\r\n      delta.x = (alignment.right - element.width) - element.x;\r\n\r\n    } else if (alignment.center) {\r\n      delta.x = (alignment.center - Math.round(element.width / 2)) - element.x;\r\n\r\n    } else if (alignment.top) {\r\n      delta.y = alignment.top - element.y;\r\n\r\n    } else if (alignment.bottom) {\r\n      delta.y = (alignment.bottom - element.height) - element.y;\r\n\r\n    } else if (alignment.middle) {\r\n      delta.y = (alignment.middle - Math.round(element.height / 2)) - element.y;\r\n    }\r\n\r\n    modeling.moveElements([ element ], delta, element.parent);\r\n  });\r\n};\r\n\r\nAlignElements.prototype.postExecute = function(context) {\r\n\r\n};\r\n","'use strict';\r\n\r\nvar any = require(299);\r\n\r\nvar inherits = require(289);\r\n\r\n\r\n/**\r\n * A handler that implements reversible appending of shapes\r\n * to a source shape.\r\n *\r\n * @param {canvas} Canvas\r\n * @param {elementFactory} ElementFactory\r\n * @param {modeling} Modeling\r\n */\r\nfunction AppendShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\ninherits(AppendShapeHandler, require(191));\r\n\r\n\r\nAppendShapeHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = AppendShapeHandler;\r\n\r\n\r\n////// api /////////////////////////////////////////////\r\n\r\n/**\r\n * Creates a new shape\r\n *\r\n * @param {Object} context\r\n * @param {ElementDescriptor} context.shape the new shape\r\n * @param {ElementDescriptor} context.source the source object\r\n * @param {ElementDescriptor} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nAppendShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  if (!context.source) {\r\n    throw new Error('source required');\r\n  }\r\n\r\n  var parent = context.parent || context.source.parent,\r\n      shape = this._modeling.createShape(context.shape, context.position, parent);\r\n\r\n  context.shape = shape;\r\n};\r\n\r\nAppendShapeHandler.prototype.postExecute = function(context) {\r\n  var parent = context.connectionParent || context.shape.parent;\r\n\r\n  if (!existsConnection(context.source, context.shape)) {\r\n\r\n    // create connection\r\n    this._modeling.connect(context.source, context.shape, context.connection, parent);\r\n  }\r\n};\r\n\r\n\r\nfunction existsConnection(source, target) {\r\n  return any(source.outgoing, function(c) {\r\n    return c.target === target;\r\n  });\r\n}","'use strict';\r\n\r\n\r\nfunction CreateConnectionHandler(canvas, layouter) {\r\n  this._canvas = canvas;\r\n  this._layouter = layouter;\r\n}\r\n\r\nCreateConnectionHandler.$inject = [ 'canvas', 'layouter' ];\r\n\r\nmodule.exports = CreateConnectionHandler;\r\n\r\n\r\n\r\n////// api /////////////////////////////////////////\r\n\r\n/**\r\n * Appends a shape to a target shape\r\n *\r\n * @param {Object} context\r\n * @param {djs.element.Base} context.source the source object\r\n * @param {djs.element.Base} context.target the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      source = context.source,\r\n      target = context.target,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex,\r\n      hints = context.hints;\r\n\r\n  if (!source || !target) {\r\n    throw new Error('source and target required');\r\n  }\r\n\r\n  if (!parent) {\r\n    throw new Error('parent required');\r\n  }\r\n\r\n  connection.source = source;\r\n  connection.target = target;\r\n\r\n  if (!connection.waypoints) {\r\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\r\n  }\r\n\r\n  // add connection\r\n  this._canvas.addConnection(connection, parent, parentIndex);\r\n\r\n  return connection;\r\n};\r\n\r\nCreateConnectionHandler.prototype.revert = function(context) {\r\n  var connection = context.connection;\r\n\r\n  this._canvas.removeConnection(connection);\r\n\r\n  connection.source = null;\r\n  connection.target = null;\r\n};","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CreateShapeHandler = require(182);\r\n\r\n\r\n/**\r\n * A handler that attaches a label to a given target shape.\r\n *\r\n * @param {canvas} Canvas\r\n */\r\nfunction CreateLabelHandler(canvas) {\r\n  CreateShapeHandler.call(this, canvas);\r\n}\r\n\r\ninherits(CreateLabelHandler, CreateShapeHandler);\r\n\r\nCreateLabelHandler.$inject = [ 'canvas' ];\r\n\r\nmodule.exports = CreateLabelHandler;\r\n\r\n\r\n\r\n////// api /////////////////////////////////////////\r\n\r\n\r\nvar originalExecute = CreateShapeHandler.prototype.execute;\r\n\r\n/**\r\n * Appends a label to a target shape.\r\n *\r\n * @method CreateLabelHandler#execute\r\n *\r\n * @param {Object} context\r\n * @param {ElementDescriptor} context.target the element the label is attached to\r\n * @param {ElementDescriptor} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateLabelHandler.prototype.execute = function(context) {\r\n\r\n  var label = context.shape;\r\n\r\n  ensureValidDimensions(label);\r\n\r\n  label.labelTarget = context.labelTarget;\r\n\r\n  return originalExecute.call(this, context);\r\n};\r\n\r\nvar originalRevert = CreateShapeHandler.prototype.revert;\r\n\r\n/**\r\n * Undo append by removing the shape\r\n */\r\nCreateLabelHandler.prototype.revert = function(context) {\r\n  context.shape.labelTarget = null;\r\n\r\n  return originalRevert.call(this, context);\r\n};\r\n\r\n\r\n////// helpers /////////////////////////////////////////\r\n\r\nfunction ensureValidDimensions(label) {\r\n  // make sure a label has valid { width, height } dimensions\r\n  [ 'width', 'height' ].forEach(function(prop) {\r\n    if (typeof label[prop] === 'undefined') {\r\n      label[prop] = 0;\r\n    }\r\n  });\r\n}","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\nvar round = Math.round;\r\n\r\n\r\n/**\r\n * A handler that implements reversible addition of shapes.\r\n *\r\n * @param {canvas} Canvas\r\n */\r\nfunction CreateShapeHandler(canvas) {\r\n  this._canvas = canvas;\r\n}\r\n\r\nCreateShapeHandler.$inject = [ 'canvas' ];\r\n\r\nmodule.exports = CreateShapeHandler;\r\n\r\n\r\n\r\n////// api /////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Appends a shape to a target shape\r\n *\r\n * @param {Object} context\r\n * @param {djs.model.Base} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateShapeHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      positionOrBounds = context.position,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex;\r\n\r\n  if (!parent) {\r\n    throw new Error('parent required');\r\n  }\r\n\r\n  if (!positionOrBounds) {\r\n    throw new Error('position required');\r\n  }\r\n\r\n  // (1) add at event center position _or_ at given bounds\r\n  if (positionOrBounds.width !== undefined) {\r\n    assign(shape, positionOrBounds);\r\n  } else {\r\n    assign(shape, {\r\n      x: positionOrBounds.x - round(shape.width / 2),\r\n      y: positionOrBounds.y - round(shape.height / 2)\r\n    });\r\n  }\r\n\r\n  // (2) add to canvas\r\n  this._canvas.addShape(shape, parent, parentIndex);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\n/**\r\n * Undo append by removing the shape\r\n */\r\nCreateShapeHandler.prototype.revert = function(context) {\r\n\r\n  // (3) remove form canvas\r\n  this._canvas.removeShape(context.shape);\r\n};","'use strict';\r\n\r\nvar Collections = require(263);\r\n\r\n\r\n/**\r\n * A handler that implements reversible deletion of Connections.\r\n *\r\n */\r\nfunction DeleteConnectionHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nDeleteConnectionHandler.$inject = [ 'canvas', 'modeling' ];\r\n\r\nmodule.exports = DeleteConnectionHandler;\r\n\r\n\r\n/**\r\n * - Remove attached label\r\n */\r\nDeleteConnectionHandler.prototype.preExecute = function(context) {\r\n\r\n  var connection = context.connection;\r\n\r\n  // Remove label\r\n  if (connection.label) {\r\n    this._modeling.removeShape(connection.label);\r\n  }\r\n};\r\n\r\nDeleteConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      parent = connection.parent;\r\n\r\n  context.parent = parent;\r\n  context.parentIndex = Collections.indexOf(parent.children, connection);\r\n\r\n  context.source = connection.source;\r\n  context.target = connection.target;\r\n\r\n  this._canvas.removeConnection(connection);\r\n\r\n  connection.source = null;\r\n  connection.target = null;\r\n  connection.label  = null;\r\n\r\n  return connection;\r\n};\r\n\r\n/**\r\n * Command revert implementation.\r\n */\r\nDeleteConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex;\r\n\r\n  connection.source = context.source;\r\n  connection.target = context.target;\r\n\r\n  // restore previous location in old parent\r\n  Collections.add(parent.children, connection, parentIndex);\r\n\r\n  this._canvas.addConnection(connection, parent);\r\n\r\n  return connection;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    inherits = require(289);\r\n\r\n\r\nfunction DeleteElementsHandler(modeling, elementRegistry) {\r\n  this._modeling = modeling;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\ninherits(DeleteElementsHandler, require(191));\r\n\r\nDeleteElementsHandler.$inject = [ 'modeling', 'elementRegistry' ];\r\n\r\nmodule.exports = DeleteElementsHandler;\r\n\r\n\r\nDeleteElementsHandler.prototype.postExecute = function(context) {\r\n\r\n  var modeling = this._modeling,\r\n      elementRegistry = this._elementRegistry,\r\n      elements = context.elements;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    // element may have been removed with previous\r\n    // remove operations already (e.g. in case of nesting)\r\n    if (!elementRegistry.get(element.id)) {\r\n      return;\r\n    }\r\n\r\n    if (element.waypoints) {\r\n      modeling.removeConnection(element);\r\n    } else {\r\n      modeling.removeShape(element);\r\n    }\r\n  });\r\n};","'use strict';\r\n\r\nvar Collections = require(263);\r\n\r\nvar saveClear = require(277).saveClear;\r\n\r\n\r\n/**\r\n * A handler that implements reversible deletion of shapes.\r\n *\r\n */\r\nfunction DeleteShapeHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nDeleteShapeHandler.$inject = [ 'canvas', 'modeling' ];\r\n\r\nmodule.exports = DeleteShapeHandler;\r\n\r\n\r\n/**\r\n * - Remove connections\r\n * - Remove all direct children\r\n */\r\nDeleteShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var shape = context.shape,\r\n      label = shape.label;\r\n\r\n  // Clean up on removeShape(label)\r\n  if (shape.labelTarget) {\r\n    context.labelTarget = shape.labelTarget;\r\n    shape.labelTarget = null;\r\n  }\r\n\r\n  // Remove label\r\n  if (label) {\r\n    this._modeling.removeShape(label, { nested: true });\r\n  }\r\n\r\n  // remove connections\r\n  saveClear(shape.incoming, function(connection) {\r\n    // To make sure that the connection isn't removed twice\r\n    // For example if a container is removed\r\n    modeling.removeConnection(connection, { nested: true });\r\n  });\r\n\r\n  saveClear(shape.outgoing, function(connection) {\r\n    modeling.removeConnection(connection, { nested: true });\r\n  });\r\n\r\n  // remove child shapes and connections\r\n  saveClear(shape.children, function(child) {\r\n    if (isConnection(child)) {\r\n      modeling.removeConnection(child, { nested: true });\r\n    } else {\r\n      modeling.removeShape(child, { nested: true });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Remove shape and remember the parent\r\n */\r\nDeleteShapeHandler.prototype.execute = function(context) {\r\n  var canvas = this._canvas;\r\n\r\n  var shape = context.shape,\r\n      oldParent = shape.parent;\r\n\r\n  context.oldParent = oldParent;\r\n  context.oldParentIndex = Collections.indexOf(oldParent.children, shape);\r\n\r\n  shape.label = null;\r\n\r\n  canvas.removeShape(shape);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\n/**\r\n * Command revert implementation\r\n */\r\nDeleteShapeHandler.prototype.revert = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var shape = context.shape,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex,\r\n      labelTarget = context.labelTarget;\r\n\r\n  // restore previous location in old oldParent\r\n  Collections.add(oldParent.children, shape, oldParentIndex);\r\n\r\n  if (labelTarget) {\r\n    labelTarget.label = shape;\r\n  }\r\n\r\n  canvas.addShape(shape, oldParent);\r\n\r\n  return shape;\r\n};\r\n\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    sortBy = require(310);\r\n\r\n/**\r\n * A handler that distributes elements evenly.\r\n */\r\nfunction DistributeElements(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nDistributeElements.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = DistributeElements;\r\n\r\nvar OFF_AXIS = {\r\n  x: 'y',\r\n  y: 'x'\r\n};\r\n\r\nDistributeElements.prototype.preExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var groups = context.groups,\r\n      axis = context.axis,\r\n      dimension = context.dimension;\r\n\r\n  function updateRange(group, element) {\r\n    group.range.min = Math.min(element[axis], group.range.min);\r\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\r\n  }\r\n\r\n  function center(element) {\r\n    return element[axis] + element[dimension] / 2;\r\n  }\r\n\r\n  function lastIdx(arr) {\r\n    return arr.length - 1;\r\n  }\r\n\r\n  function rangeDiff(range) {\r\n    return range.max - range.min;\r\n  }\r\n\r\n  function centerElement(refCenter, element) {\r\n    var delta = { y: 0 };\r\n\r\n    delta[axis] = refCenter - center(element);\r\n\r\n    if (delta[axis]) {\r\n\r\n      delta[OFF_AXIS[axis]] = 0;\r\n\r\n      modeling.moveElements([ element ], delta, element.parent);\r\n    }\r\n  }\r\n\r\n  var firstGroup = groups[0],\r\n      lastGroupIdx = lastIdx(groups),\r\n      lastGroup = groups[ lastGroupIdx ];\r\n\r\n  var margin,\r\n      spaceInBetween,\r\n      groupsSize = 0; // the size of each range\r\n\r\n  forEach(groups, function(group, idx) {\r\n    var sortedElements,\r\n        refElem,\r\n        refCenter;\r\n\r\n    if (group.elements.length < 2) {\r\n      if (idx && idx !== groups.length - 1) {\r\n        updateRange(group, group.elements[0]);\r\n\r\n        groupsSize += rangeDiff(group.range);\r\n      }\r\n      return;\r\n    }\r\n\r\n    sortedElements = sortBy(group.elements, axis);\r\n\r\n    refElem = sortedElements[0];\r\n\r\n    if (idx === lastGroupIdx) {\r\n      refElem = sortedElements[lastIdx(sortedElements)];\r\n    }\r\n\r\n    refCenter = center(refElem);\r\n\r\n    // wanna update the ranges after the shapes have been centered\r\n    group.range = null;\r\n\r\n    forEach(sortedElements, function(element) {\r\n\r\n      centerElement(refCenter, element);\r\n\r\n      if (group.range === null) {\r\n        group.range = {\r\n          min: element[axis],\r\n          max: element[axis] + element[dimension]\r\n        };\r\n\r\n        return;\r\n      }\r\n\r\n      // update group's range after centering the range elements\r\n      updateRange(group, element);\r\n    });\r\n\r\n    if (idx && idx !== groups.length - 1) {\r\n      groupsSize += rangeDiff(group.range);\r\n    }\r\n  });\r\n\r\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\r\n\r\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\r\n\r\n  if (margin < groups.length - 1) {\r\n    return;\r\n  }\r\n\r\n  forEach(groups, function(group, groupIdx) {\r\n    var delta = {},\r\n        prevGroup;\r\n\r\n    if (group === firstGroup || group === lastGroup) {\r\n      return;\r\n    }\r\n\r\n    prevGroup = groups[groupIdx - 1];\r\n\r\n    group.range.max = 0;\r\n\r\n    forEach(group.elements, function(element, idx) {\r\n      delta[OFF_AXIS[axis]] = 0;\r\n      delta[axis] = (prevGroup.range.max - element[axis]) + margin;\r\n\r\n      if (group.range.min !== element[axis]) {\r\n        delta[axis] += element[axis] - group.range.min;\r\n      }\r\n\r\n      if (delta[axis]) {\r\n        modeling.moveElements([ element ], delta, element.parent);\r\n      }\r\n\r\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\r\n    });\r\n  });\r\n};\r\n\r\nDistributeElements.prototype.postExecute = function(context) {\r\n\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nfunction LayoutConnectionHandler(layouter, canvas) {\r\n  this._layouter = layouter;\r\n  this._canvas = canvas;\r\n}\r\n\r\nLayoutConnectionHandler.$inject = [ 'layouter', 'canvas' ];\r\n\r\nmodule.exports = LayoutConnectionHandler;\r\n\r\nLayoutConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection;\r\n\r\n  var oldWaypoints = connection.waypoints;\r\n\r\n  assign(context, {\r\n    oldWaypoints: oldWaypoints\r\n  });\r\n\r\n  connection.waypoints = this._layouter.layoutConnection(connection, context.hints);\r\n\r\n  return connection;\r\n};\r\n\r\nLayoutConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection;\r\n\r\n  connection.waypoints = context.oldWaypoints;\r\n\r\n  return connection;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar Collections = require(263);\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of connections.\r\n *\r\n * The handler differs from the layout connection handler in a sense\r\n * that it preserves the connection layout.\r\n */\r\nfunction MoveConnectionHandler() { }\r\n\r\nmodule.exports = MoveConnectionHandler;\r\n\r\n\r\nMoveConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      delta = context.delta;\r\n\r\n  var newParent = context.newParent || connection.parent,\r\n      newParentIndex = context.newParentIndex,\r\n      oldParent = connection.parent;\r\n\r\n  // save old parent in context\r\n  context.oldParent = oldParent;\r\n  context.oldParentIndex = Collections.remove(oldParent.children, connection);\r\n\r\n  // add to new parent at position\r\n  Collections.add(newParent.children, connection, newParentIndex);\r\n\r\n  // update parent\r\n  connection.parent = newParent;\r\n\r\n  // update waypoint positions\r\n  forEach(connection.waypoints, function(p) {\r\n    p.x += delta.x;\r\n    p.y += delta.y;\r\n\r\n    if (p.original) {\r\n      p.original.x += delta.x;\r\n      p.original.y += delta.y;\r\n    }\r\n  });\r\n\r\n  return connection;\r\n};\r\n\r\nMoveConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      newParent = connection.parent,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex,\r\n      delta = context.delta;\r\n\r\n  // remove from newParent\r\n  Collections.remove(newParent.children, connection);\r\n\r\n  // restore previous location in old parent\r\n  Collections.add(oldParent.children, connection, oldParentIndex);\r\n\r\n  // restore parent\r\n  connection.parent = oldParent;\r\n\r\n  // revert to old waypoint positions\r\n  forEach(connection.waypoints, function(p) {\r\n    p.x -= delta.x;\r\n    p.y -= delta.y;\r\n\r\n    if (p.original) {\r\n      p.original.x -= delta.x;\r\n      p.original.y -= delta.y;\r\n    }\r\n  });\r\n\r\n  return connection;\r\n};","'use strict';\r\n\r\nvar MoveHelper = require(201);\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nfunction MoveElementsHandler(modeling) {\r\n  this._helper = new MoveHelper(modeling);\r\n}\r\n\r\nMoveElementsHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = MoveElementsHandler;\r\n\r\nMoveElementsHandler.prototype.preExecute = function(context) {\r\n  context.closure = this._helper.getClosure(context.shapes);\r\n};\r\n\r\nMoveElementsHandler.prototype.postExecute = function(context) {\r\n\r\n  var hints = context.hints,\r\n      primaryShape;\r\n\r\n  if (hints && hints.primaryShape) {\r\n    primaryShape = hints.primaryShape;\r\n    hints.oldParent = primaryShape.parent;\r\n  }\r\n\r\n  this._helper.moveClosure(context.closure, context.delta, context.newParent, context.newHost, primaryShape);\r\n};\r\n\r\n\r\nMoveElementsHandler.prototype.execute = function(context) { };\r\nMoveElementsHandler.prototype.revert = function(context) { };\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303),\r\n    pick = require(438);\r\n\r\nvar MoveHelper = require(201),\r\n    Collections = require(263);\r\n\r\nvar getMovedSourceAnchor = require(200).getMovedSourceAnchor,\r\n    getMovedTargetAnchor = require(200).getMovedTargetAnchor;\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nfunction MoveShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n\r\n  this._helper = new MoveHelper(modeling);\r\n}\r\n\r\nMoveShapeHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = MoveShapeHandler;\r\n\r\n\r\nMoveShapeHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      delta = context.delta,\r\n      newParent = context.newParent || shape.parent,\r\n      newParentIndex = context.newParentIndex,\r\n      oldParent = shape.parent;\r\n\r\n  context.oldBounds = pick(shape, [ 'x', 'y', 'width', 'height']);\r\n\r\n  // save old parent in context\r\n  context.oldParent = oldParent;\r\n  context.oldParentIndex = Collections.remove(oldParent.children, shape);\r\n\r\n  // add to new parent at position\r\n  Collections.add(newParent.children, shape, newParentIndex);\r\n\r\n  // update shape parent + position\r\n  assign(shape, {\r\n    parent: newParent,\r\n    x: shape.x + delta.x,\r\n    y: shape.y + delta.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nMoveShapeHandler.prototype.postExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      delta = context.delta,\r\n      hints = context.hints;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  if (hints.layout !== false) {\r\n\r\n    forEach(shape.incoming, function(c) {\r\n      modeling.layoutConnection(c, {\r\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\r\n      });\r\n    });\r\n\r\n    forEach(shape.outgoing, function(c) {\r\n      modeling.layoutConnection(c, {\r\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\r\n      });\r\n    });\r\n  }\r\n\r\n  if (hints.recurse !== false) {\r\n    this.moveChildren(context);\r\n  }\r\n};\r\n\r\nMoveShapeHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex,\r\n      delta = context.delta;\r\n\r\n  // restore previous location in old parent\r\n  Collections.add(oldParent.children, shape, oldParentIndex);\r\n\r\n  // revert to old position and parent\r\n  assign(shape, {\r\n    parent: oldParent,\r\n    x: shape.x - delta.x,\r\n    y: shape.y - delta.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nMoveShapeHandler.prototype.moveChildren = function(context) {\r\n\r\n  var delta = context.delta,\r\n      shape = context.shape;\r\n\r\n  this._helper.moveRecursive(shape.children, delta, null);\r\n};\r\n\r\nMoveShapeHandler.prototype.getNewParent = function(context) {\r\n  return context.newParent || context.shape.parent;\r\n};\r\n","'use strict';\r\n\r\nfunction NoopHandler() {}\r\n\r\nmodule.exports = NoopHandler;\r\n\r\nNoopHandler.prototype.execute = function() {};\r\nNoopHandler.prototype.revert = function() {};","'use strict';\r\n\r\nvar forEach = require(303),\r\n    map = require(305),\r\n    sortBy = require(310),\r\n    clone = require(420);\r\n\r\nvar inherits = require(289);\r\n\r\n\r\n\r\nfunction removeProperties(element, properties) {\r\n  forEach(properties, function(prop) {\r\n    if (element[prop]) {\r\n      delete element[prop];\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * A handler that implements pasting of elements onto the diagram.\r\n *\r\n * @param {eventBus} EventBus\r\n * @param {canvas} Canvas\r\n * @param {selection} Selection\r\n * @param {elementFactory} ElementFactory\r\n * @param {modeling} Modeling\r\n * @param {rules} Rules\r\n */\r\nfunction PasteHandler(eventBus, canvas, selection, elementFactory, modeling, rules) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._selection = selection;\r\n  this._elementFactory = elementFactory;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n}\r\n\r\ninherits(PasteHandler, require(191));\r\n\r\n\r\nPasteHandler.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection',\r\n  'elementFactory',\r\n  'modeling',\r\n  'rules'\r\n];\r\n\r\nmodule.exports = PasteHandler;\r\n\r\n\r\n////// api /////////////////////////////////////////////\r\n\r\n/**\r\n * Creates a new shape\r\n *\r\n * @param {Object} context\r\n * @param {Object} context.tree the new shape\r\n * @param {Element} context.topParent the paste target\r\n */\r\nPasteHandler.prototype.preExecute = function(context) {\r\n  var eventBus = this._eventBus;\r\n\r\n  var tree = context.tree,\r\n      topParent = context.topParent,\r\n      position = context.position;\r\n\r\n  tree.createdElements = {};\r\n\r\n  tree.labels = [];\r\n\r\n  forEach(tree, function(elements, depthStr) {\r\n    var depth = parseInt(depthStr, 10);\r\n\r\n    if (isNaN(depth)) {\r\n      return;\r\n    }\r\n\r\n    // set the parent on the top level elements\r\n    if (!depth) {\r\n      elements = map(elements, function(descriptor) {\r\n        descriptor.parent = topParent;\r\n\r\n        return descriptor;\r\n      });\r\n    }\r\n\r\n    // Order by priority for element creation\r\n    elements = sortBy(elements, 'priority');\r\n\r\n    forEach(elements, function(descriptor) {\r\n      var id = descriptor.id,\r\n          parent = descriptor.parent,\r\n          isAttach = false,\r\n          hints,\r\n          newPosition;\r\n\r\n      var element = clone(descriptor);\r\n\r\n      if (depth) {\r\n        element.parent = this._getCreatedElement(parent, tree);\r\n      }\r\n\r\n      // this happens when shapes have not been created due to rules\r\n      if (!parent) {\r\n        return;\r\n      }\r\n\r\n      eventBus.fire('element.paste', {\r\n        createdElements: tree.createdElements,\r\n        descriptor: element\r\n      });\r\n\r\n      // in case the parent changed during 'element.paste'\r\n      parent = element.parent;\r\n\r\n      if (element.waypoints) {\r\n        element = this._createConnection(element, parent, position, tree);\r\n\r\n        if (element) {\r\n          tree.createdElements[id] = {\r\n            element: element,\r\n            descriptor: descriptor\r\n          };\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // supply not-root information as hint\r\n      if (element.parent !== topParent) {\r\n        hints = { root: false };\r\n      }\r\n\r\n      // set host\r\n      if (element.host) {\r\n        isAttach = true;\r\n\r\n        parent = this._getCreatedElement(element.host, tree);\r\n      }\r\n\r\n      // handle labels\r\n      if (element.labelTarget) {\r\n        return tree.labels.push(element);\r\n      }\r\n\r\n      newPosition = {\r\n        x: Math.round(position.x + element.delta.x + (element.width / 2)),\r\n        y: Math.round(position.y + element.delta.y + (element.height / 2))\r\n      };\r\n\r\n      removeProperties(element, [ 'id', 'parent', 'delta', 'host', 'priority' ]);\r\n\r\n      element = this._createShape(element, parent, newPosition, isAttach, hints);\r\n\r\n      if (element) {\r\n        tree.createdElements[id] = {\r\n          element: element,\r\n          descriptor: descriptor\r\n        };\r\n      }\r\n    }, this);\r\n  }, this);\r\n};\r\n\r\n// move label's to their relative position\r\nPasteHandler.prototype.postExecute = function(context) {\r\n  var modeling = this._modeling,\r\n      selection = this._selection;\r\n\r\n  var tree = context.tree,\r\n      labels = tree.labels,\r\n      topLevelElements = [];\r\n\r\n  forEach(labels, function(labelDescriptor) {\r\n    var labelTarget = this._getCreatedElement(labelDescriptor.labelTarget, tree),\r\n        label, labelTargetPos, newPosition;\r\n\r\n    if (!labelTarget) {\r\n      return;\r\n    }\r\n\r\n    label = labelTarget.label;\r\n\r\n    if (!label) {\r\n      return;\r\n    }\r\n\r\n    labelTargetPos = {\r\n      x: labelTarget.x,\r\n      y: labelTarget.y\r\n    };\r\n\r\n    if (labelTarget.waypoints) {\r\n      labelTargetPos = labelTarget.waypoints[0];\r\n    }\r\n\r\n    newPosition = {\r\n      x: Math.round((labelTargetPos.x - label.x) + labelDescriptor.delta.x),\r\n      y: Math.round((labelTargetPos.y - label.y) + labelDescriptor.delta.y)\r\n    };\r\n\r\n    modeling.moveShape(label, newPosition, labelTarget.parent);\r\n  }, this);\r\n\r\n  forEach(tree[0], function(descriptor) {\r\n    var id = descriptor.id,\r\n        toplevel = tree.createdElements[id];\r\n\r\n    if (toplevel) {\r\n      topLevelElements.push(toplevel.element);\r\n    }\r\n  });\r\n\r\n  selection.select(topLevelElements);\r\n};\r\n\r\n\r\nPasteHandler.prototype._createConnection = function(element, parent, parentCenter, tree) {\r\n  var modeling = this._modeling,\r\n      rules = this._rules;\r\n\r\n  var connection, source, target, canPaste;\r\n\r\n  element.waypoints = map(element.waypoints, function(waypoint, idx) {\r\n    return {\r\n      x: Math.round(parentCenter.x + element.delta[idx].x),\r\n      y: Math.round(parentCenter.y + element.delta[idx].y)\r\n    };\r\n  });\r\n\r\n  source = this._getCreatedElement(element.source, tree);\r\n  target = this._getCreatedElement(element.target, tree);\r\n\r\n  if (!source || !target) {\r\n    return null;\r\n  }\r\n\r\n  canPaste = rules.allowed('element.paste', {\r\n    source: source,\r\n    target: target\r\n  });\r\n\r\n  if (!canPaste) {\r\n    return null;\r\n  }\r\n\r\n  removeProperties(element, [ 'id', 'parent', 'delta', 'source', 'target', 'width', 'height', 'priority' ]);\r\n\r\n  connection = modeling.createConnection(source, target, element, parent);\r\n\r\n  return connection;\r\n};\r\n\r\n\r\nPasteHandler.prototype._createShape = function(element, parent, position, isAttach, hints) {\r\n  var modeling = this._modeling,\r\n      elementFactory = this._elementFactory,\r\n      rules = this._rules;\r\n\r\n  var canPaste = rules.allowed('element.paste', {\r\n    element: element,\r\n    position: position,\r\n    parent: parent\r\n  });\r\n\r\n  if (!canPaste) {\r\n    return null;\r\n  }\r\n\r\n  var shape = elementFactory.createShape(element);\r\n\r\n  modeling.createShape(shape, position, parent, isAttach, hints);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\nPasteHandler.prototype._getCreatedElement = function(id, tree) {\r\n  return tree.createdElements[id] && tree.createdElements[id].element;\r\n};\r\n","'use strict';\r\n\r\nvar isArray = require(422);\r\n\r\n\r\n/**\r\n * Reconnect connection handler\r\n */\r\nfunction ReconnectConnectionHandler() { }\r\n\r\nReconnectConnectionHandler.$inject = [ ];\r\n\r\nmodule.exports = ReconnectConnectionHandler;\r\n\r\nReconnectConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var newSource = context.newSource,\r\n      newTarget = context.newTarget,\r\n      connection = context.connection,\r\n      dockingOrPoints = context.dockingOrPoints,\r\n      oldWaypoints = connection.waypoints,\r\n      newWaypoints;\r\n\r\n  if (!newSource && !newTarget) {\r\n    throw new Error('newSource or newTarget are required');\r\n  }\r\n\r\n  if (newSource && newTarget) {\r\n    throw new Error('must specify either newSource or newTarget');\r\n  }\r\n\r\n  context.oldWaypoints = oldWaypoints;\r\n\r\n  if (isArray(dockingOrPoints)) {\r\n    newWaypoints = dockingOrPoints;\r\n  } else {\r\n    newWaypoints = oldWaypoints.slice();\r\n\r\n    newWaypoints.splice(newSource ? 0 : -1, 1, dockingOrPoints);\r\n  }\r\n\r\n  if (newSource) {\r\n    context.oldSource = connection.source;\r\n    connection.source = newSource;\r\n  }\r\n\r\n  if (newTarget) {\r\n    context.oldTarget = connection.target;\r\n    connection.target = newTarget;\r\n  }\r\n\r\n  connection.waypoints = newWaypoints;\r\n\r\n  return connection;\r\n};\r\n\r\nReconnectConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var newSource = context.newSource,\r\n      newTarget = context.newTarget,\r\n      connection = context.connection;\r\n\r\n  if (newSource) {\r\n    connection.source = context.oldSource;\r\n  }\r\n\r\n  if (newTarget) {\r\n    connection.target = context.oldTarget;\r\n  }\r\n\r\n  connection.waypoints = context.oldWaypoints;\r\n\r\n  return connection;\r\n};","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\n\r\n/**\r\n * A handler that implements reversible replacing of shapes.\r\n * Internally the old shape will be removed and the new shape will be added.\r\n *\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @param {canvas} Canvas\r\n */\r\nfunction ReplaceShapeHandler(modeling, rules) {\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n}\r\n\r\nReplaceShapeHandler.$inject = [ 'modeling', 'rules' ];\r\n\r\nmodule.exports = ReplaceShapeHandler;\r\n\r\n\r\n\r\n////// api /////////////////////////////////////////\r\n\r\n\r\n/**\r\n * Replaces a shape with an replacement Element.\r\n *\r\n * The newData object should contain type, x, y.\r\n *\r\n * If possible also the incoming/outgoing connection\r\n * will be restored.\r\n *\r\n * @param {Object} context\r\n */\r\nReplaceShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  var self = this,\r\n      modeling = this._modeling,\r\n      rules = this._rules;\r\n\r\n  var oldShape = context.oldShape,\r\n      newData = context.newData,\r\n      hints = context.hints,\r\n      newShape;\r\n\r\n  function canReconnect(type, source, target, connection) {\r\n    return rules.allowed(type, {\r\n      source: source,\r\n      target: target,\r\n      connection: connection\r\n    });\r\n  }\r\n\r\n\r\n  // (1) place a new shape at the given position\r\n\r\n  var position = {\r\n    x: newData.x,\r\n    y: newData.y\r\n  };\r\n\r\n  newShape = context.newShape = context.newShape || self.createShape(newData, position, oldShape.parent);\r\n\r\n\r\n  // (2) update the host\r\n\r\n  if (oldShape.host) {\r\n    modeling.updateAttachment(newShape, oldShape.host);\r\n  }\r\n\r\n\r\n  // (3) adopt all children from the old shape\r\n\r\n  var children;\r\n\r\n  if (hints.moveChildren !== false) {\r\n    children = oldShape.children.slice();\r\n\r\n    modeling.moveElements(children, { x: 0, y: 0 }, newShape);\r\n  }\r\n\r\n  // (4) reconnect connections to the new shape (where allowed)\r\n\r\n  var incoming = oldShape.incoming.slice(),\r\n      outgoing = oldShape.outgoing.slice();\r\n\r\n  forEach(incoming, function(connection) {\r\n    var waypoints = connection.waypoints,\r\n        docking = waypoints[waypoints.length - 1],\r\n        source = connection.source,\r\n        allowed = canReconnect('connection.reconnectEnd', source, newShape, connection);\r\n\r\n    if (allowed) {\r\n      self.reconnectEnd(connection, newShape, docking);\r\n    }\r\n  });\r\n\r\n  forEach(outgoing, function(connection) {\r\n    var waypoints = connection.waypoints,\r\n        docking = waypoints[0],\r\n        target = connection.target,\r\n        allowed = canReconnect('connection.reconnectStart', newShape, target, connection);\r\n\r\n    if (allowed) {\r\n      self.reconnectStart(connection, newShape, docking);\r\n    }\r\n\r\n  });\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.postExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var oldShape = context.oldShape,\r\n      newShape = context.newShape;\r\n\r\n  // if an element gets resized on replace, layout the connection again\r\n  forEach(newShape.incoming, function(c) {\r\n    modeling.layoutConnection(c, { endChanged: true });\r\n  });\r\n\r\n  forEach(newShape.outgoing, function(c) {\r\n    modeling.layoutConnection(c, { startChanged: true });\r\n  });\r\n\r\n  modeling.removeShape(oldShape);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.execute = function(context) {};\r\n\r\nReplaceShapeHandler.prototype.revert = function(context) {};\r\n\r\n\r\nReplaceShapeHandler.prototype.createShape = function(shape, position, target) {\r\n  var modeling = this._modeling;\r\n  return modeling.createShape(shape, position, target);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.reconnectStart = function(connection, newSource, dockingPoint) {\r\n  var modeling = this._modeling;\r\n  modeling.reconnectStart(connection, newSource, dockingPoint);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.reconnectEnd = function(connection, newTarget, dockingPoint) {\r\n  var modeling = this._modeling;\r\n  modeling.reconnectEnd(connection, newTarget, dockingPoint);\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    forEach = require(303);\r\n\r\nvar getResizedSourceAnchor = require(200).getResizedSourceAnchor,\r\n    getResizedTargetAnchor = require(200).getResizedTargetAnchor;\r\n\r\n/**\r\n * A handler that implements reversible resizing of shapes.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction ResizeShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nResizeShapeHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = ResizeShapeHandler;\r\n\r\n/**\r\n * {\r\n *   shape: {....}\r\n *   newBounds: {\r\n *     width:  20,\r\n *     height: 40,\r\n *     x:       5,\r\n *     y:      10\r\n *   }\r\n *\r\n * }\r\n */\r\nResizeShapeHandler.prototype.execute = function(context) {\r\n  var shape = context.shape,\r\n      newBounds = context.newBounds,\r\n      minBounds = context.minBounds;\r\n\r\n  if (newBounds.x === undefined || newBounds.y === undefined ||\r\n      newBounds.width === undefined || newBounds.height === undefined) {\r\n    throw new Error('newBounds must have {x, y, width, height} properties');\r\n  }\r\n\r\n  if (minBounds && (newBounds.width < minBounds.width\r\n    || newBounds.height < minBounds.height)) {\r\n    throw new Error('width and height cannot be less than minimum height and width');\r\n  } else if (!minBounds\r\n    && newBounds.width < 10 || newBounds.height < 10) {\r\n    throw new Error('width and height cannot be less than 10px');\r\n  }\r\n\r\n  // save old bbox in context\r\n  context.oldBounds = {\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x:      shape.x,\r\n    y:      shape.y\r\n  };\r\n\r\n  // update shape\r\n  assign(shape, {\r\n    width:  newBounds.width,\r\n    height: newBounds.height,\r\n    x:      newBounds.x,\r\n    y:      newBounds.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nResizeShapeHandler.prototype.postExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldBounds = context.oldBounds;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  forEach(shape.incoming, function(c) {\r\n    modeling.layoutConnection(c, {\r\n      connectionEnd: getResizedTargetAnchor(c, shape, oldBounds)\r\n    });\r\n  });\r\n\r\n  forEach(shape.outgoing, function(c) {\r\n    modeling.layoutConnection(c, {\r\n      connectionStart: getResizedSourceAnchor(c, shape, oldBounds)\r\n    });\r\n  });\r\n\r\n};\r\n\r\nResizeShapeHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldBounds = context.oldBounds;\r\n\r\n  // restore previous bbox\r\n  assign(shape, {\r\n    width:  oldBounds.width,\r\n    height: oldBounds.height,\r\n    x:      oldBounds.x,\r\n    y:      oldBounds.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar SpaceUtil = require(239);\r\n\r\n/**\r\n * A handler that implements reversible creating and removing of space.\r\n *\r\n * It executes in two phases:\r\n *\r\n *  (1) resize all affected resizeShapes\r\n *  (2) move all affected moveElements\r\n */\r\nfunction SpaceToolHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nSpaceToolHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = SpaceToolHandler;\r\n\r\n\r\nSpaceToolHandler.prototype.preExecute = function(context) {\r\n\r\n  // resize\r\n  var modeling = this._modeling,\r\n      resizingShapes = context.resizingShapes,\r\n      delta = context.delta,\r\n      direction = context.direction;\r\n\r\n  forEach(resizingShapes, function(shape) {\r\n    var newBounds = SpaceUtil.resizeBounds(shape, direction, delta);\r\n\r\n    modeling.resizeShape(shape, newBounds);\r\n  });\r\n};\r\n\r\nSpaceToolHandler.prototype.postExecute = function(context) {\r\n  // move\r\n  var modeling = this._modeling,\r\n      movingShapes = context.movingShapes,\r\n      delta = context.delta;\r\n\r\n  modeling.moveElements(movingShapes, delta, undefined, false, { autoResize: false });\r\n};\r\n\r\nSpaceToolHandler.prototype.execute = function(context) {};\r\nSpaceToolHandler.prototype.revert = function(context) {};\r\n","'use strict';\r\n\r\n/**\r\n * A handler that toggles the collapsed state of an element\r\n * and the visibility of all its children.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction ToggleShapeCollapseHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nToggleShapeCollapseHandler.$inject = [ 'modeling' ];\r\n\r\nmodule.exports = ToggleShapeCollapseHandler;\r\n\r\n\r\nToggleShapeCollapseHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      children = shape.children;\r\n\r\n  // remember previous visibility of children\r\n  context.oldChildrenVisibility = getElementsVisibility(children);\r\n\r\n  // toggle state\r\n  shape.collapsed = !shape.collapsed;\r\n\r\n  // hide/show children\r\n  setHidden(children, shape.collapsed);\r\n\r\n  return [shape].concat(children);\r\n};\r\n\r\n\r\nToggleShapeCollapseHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldChildrenVisibility = context.oldChildrenVisibility;\r\n\r\n  var children = shape.children;\r\n\r\n  // set old visability of children\r\n  restoreVisibility(children, oldChildrenVisibility);\r\n\r\n  // retoggle state\r\n  shape.collapsed = !shape.collapsed;\r\n\r\n  return [shape].concat(children);\r\n};\r\n\r\n\r\n/////// helpers ///////////////////////////////\r\n\r\n/**\r\n * Return a map { elementId -> hiddenState}.\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n *\r\n * @return {Object}\r\n */\r\nfunction getElementsVisibility(elements) {\r\n\r\n  var result = {};\r\n\r\n  elements.forEach(function(e) {\r\n    result[e.id] = e.hidden;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\nfunction setHidden(elements, newHidden) {\r\n  elements.forEach(function(element) {\r\n    element.hidden = newHidden;\r\n  });\r\n}\r\n\r\nfunction restoreVisibility(elements, lastState) {\r\n  elements.forEach(function(e) {\r\n    e.hidden = lastState[e.id];\r\n  });\r\n}\r\n","'use strict';\r\n\r\nvar Collections = require(263);\r\n\r\n/**\r\n * A handler that implements reversible attaching/detaching of shapes.\r\n */\r\nfunction UpdateAttachmentHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nmodule.exports = UpdateAttachmentHandler;\r\n\r\nUpdateAttachmentHandler.$inject = [ 'modeling' ];\r\n\r\n\r\nUpdateAttachmentHandler.prototype.execute = function(context) {\r\n  var shape = context.shape,\r\n      newHost = context.newHost,\r\n      oldHost = shape.host;\r\n\r\n  // (0) detach from old host\r\n  context.oldHost = oldHost;\r\n  context.attacherIdx = removeAttacher(oldHost, shape);\r\n\r\n  // (1) attach to new host\r\n  addAttacher(newHost, shape);\r\n\r\n  // (2) update host\r\n  shape.host = newHost;\r\n\r\n  return shape;\r\n};\r\n\r\nUpdateAttachmentHandler.prototype.revert = function(context) {\r\n  var shape = context.shape,\r\n      newHost = context.newHost,\r\n      oldHost = context.oldHost,\r\n      attacherIdx = context.attacherIdx;\r\n\r\n  // (2) update host\r\n  shape.host = oldHost;\r\n\r\n  // (1) attach to new host\r\n  removeAttacher(newHost, shape);\r\n\r\n  // (0) detach from old host\r\n  addAttacher(oldHost, shape, attacherIdx);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\nfunction removeAttacher(host, attacher) {\r\n  // remove attacher from host\r\n  return Collections.remove(host && host.attachers, attacher);\r\n}\r\n\r\nfunction addAttacher(host, attacher, idx) {\r\n\r\n  if (!host) {\r\n    return;\r\n  }\r\n\r\n  var attachers = host.attachers;\r\n\r\n  if (!attachers) {\r\n    host.attachers = attachers = [];\r\n  }\r\n\r\n  Collections.add(attachers, attacher, idx);\r\n}\r\n","'use strict';\r\n\r\nfunction UpdateWaypointsHandler() { }\r\n\r\nmodule.exports = UpdateWaypointsHandler;\r\n\r\nUpdateWaypointsHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      newWaypoints = context.newWaypoints;\r\n\r\n  context.oldWaypoints = connection.waypoints;\r\n\r\n  connection.waypoints = newWaypoints;\r\n\r\n  return connection;\r\n};\r\n\r\nUpdateWaypointsHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      oldWaypoints = context.oldWaypoints;\r\n\r\n  connection.waypoints = oldWaypoints;\r\n\r\n  return connection;\r\n};","'use strict';\r\n\r\nvar getNewAttachPoint = require(261).getNewAttachPoint;\r\n\r\nfunction getResizedSourceAnchor(connection, shape, oldBounds) {\r\n\r\n  var waypoints = safeGetWaypoints(connection),\r\n      oldAnchor = waypoints[0];\r\n\r\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\r\n}\r\n\r\nmodule.exports.getResizedSourceAnchor = getResizedSourceAnchor;\r\n\r\n\r\nfunction getResizedTargetAnchor(connection, shape, oldBounds) {\r\n\r\n  var waypoints = safeGetWaypoints(connection),\r\n      oldAnchor = waypoints[waypoints.length - 1];\r\n\r\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\r\n}\r\n\r\nmodule.exports.getResizedTargetAnchor = getResizedTargetAnchor;\r\n\r\n\r\nfunction getMovedSourceAnchor(connection, source, moveDelta) {\r\n  return getResizedSourceAnchor(connection, source, substractPosition(source, moveDelta));\r\n}\r\n\r\nmodule.exports.getMovedSourceAnchor = getMovedSourceAnchor;\r\n\r\n\r\nfunction getMovedTargetAnchor(connection, target, moveDelta) {\r\n  return getResizedTargetAnchor(connection, target, substractPosition(target, moveDelta));\r\n}\r\n\r\nmodule.exports.getMovedTargetAnchor = getMovedTargetAnchor;\r\n\r\n\r\n//////// helpers ////////////////////////////////////\r\n\r\nfunction substractPosition(bounds, delta) {\r\n  return {\r\n    x: bounds.x - delta.x,\r\n    y: bounds.y - delta.y,\r\n    width: bounds.width,\r\n    height: bounds.height\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Return waypoints of given connection; throw if non exists (should not happen!!).\r\n *\r\n * @param {Connection} connection\r\n *\r\n * @return {Array<Point>}\r\n */\r\nfunction safeGetWaypoints(connection) {\r\n\r\n  var waypoints = connection.waypoints;\r\n\r\n  if (!waypoints.length) {\r\n    throw new Error('connection#' + connection.id + ': no waypoints');\r\n  }\r\n\r\n  return waypoints;\r\n}\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar Elements = require(266);\r\n\r\nvar getMovedSourceAnchor = require(200).getMovedSourceAnchor,\r\n    getMovedTargetAnchor = require(200).getMovedTargetAnchor;\r\n\r\n/**\r\n * A helper that is able to carry out serialized move operations on multiple elements.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nfunction MoveHelper(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nmodule.exports = MoveHelper;\r\n\r\n/**\r\n * Move the specified elements and all children by the given delta.\r\n *\r\n * This moves all enclosed connections, too and layouts all affected\r\n * external connections.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n * @param  {Point} delta\r\n * @param  {djs.model.Base} newParent applied to the first level of shapes\r\n *\r\n * @return {Array<djs.model.Base>} list of touched elements\r\n */\r\nMoveHelper.prototype.moveRecursive = function(elements, delta, newParent) {\r\n  if (!elements) {\r\n    return [];\r\n  } else {\r\n    return this.moveClosure(this.getClosure(elements), delta, newParent);\r\n  }\r\n};\r\n\r\n/**\r\n * Move the given closure of elmements.\r\n *\r\n * @param {Object} closure\r\n * @param {Point} delta\r\n * @param {djs.model.Base} [newParent]\r\n * @param {djs.model.Base} [newHost]\r\n */\r\nMoveHelper.prototype.moveClosure = function(closure, delta, newParent, newHost, primaryShape) {\r\n  var modeling = this._modeling;\r\n\r\n  var allShapes = closure.allShapes,\r\n      allConnections = closure.allConnections,\r\n      enclosedConnections = closure.enclosedConnections,\r\n      topLevel = closure.topLevel,\r\n      keepParent = false;\r\n\r\n  if (primaryShape && primaryShape.parent === newParent) {\r\n    keepParent = true;\r\n  }\r\n\r\n  // move all shapes\r\n  forEach(allShapes, function(shape) {\r\n\r\n    // move the element according to the given delta\r\n    modeling.moveShape(shape, delta, topLevel[shape.id] && !keepParent && newParent, {\r\n      recurse: false,\r\n      layout: false\r\n    });\r\n  });\r\n\r\n  // move all child connections / layout external connections\r\n  forEach(allConnections, function(c) {\r\n\r\n    var sourceMoved = !!allShapes[c.source.id],\r\n        targetMoved = !!allShapes[c.target.id];\r\n\r\n    if (enclosedConnections[c.id] && sourceMoved && targetMoved) {\r\n      modeling.moveConnection(c, delta, topLevel[c.id] && !keepParent && newParent);\r\n    } else {\r\n      modeling.layoutConnection(c, {\r\n        connectionStart: sourceMoved && getMovedSourceAnchor(c, c.source, delta),\r\n        connectionEnd: targetMoved && getMovedTargetAnchor(c, c.target, delta)\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Returns the closure for the selected elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n * @return {Object} closure\r\n */\r\nMoveHelper.prototype.getClosure = function(elements) {\r\n  return Elements.getClosure(elements);\r\n};\r\n","'use strict';\r\n\r\nvar bind = require(312);\r\n\r\n\r\nfunction MouseTracking(eventBus, canvas) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._init();\r\n}\r\n\r\nMouseTracking.$inject = [\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\nmodule.exports = MouseTracking;\r\n\r\n\r\nMouseTracking.prototype.getHoverContext = function() {\r\n  var viewbox = this._canvas.viewbox();\r\n\r\n  return {\r\n    element: this._hoverElement,\r\n    point: {\r\n      x: viewbox.x + Math.round(this._mouseX / viewbox.scale),\r\n      y: viewbox.y + Math.round(this._mouseY / viewbox.scale)\r\n    }\r\n  };\r\n};\r\n\r\nMouseTracking.prototype._init = function() {\r\n  var eventBus = this._eventBus,\r\n      canvas = this._canvas;\r\n\r\n  var container = canvas.getContainer();\r\n\r\n  this._setMousePosition = bind(this._setMousePosition, this);\r\n\r\n  container.addEventListener('mousemove', this._setMousePosition);\r\n\r\n  eventBus.on('diagram.destroy', function() {\r\n    container.removeEventListener('mousemove', this._setMousePosition);\r\n  }, this);\r\n\r\n  eventBus.on('element.hover', this._setHoverElement, this);\r\n};\r\n\r\n\r\nMouseTracking.prototype._setHoverElement = function(event) {\r\n  this._hoverElement = event.element;\r\n};\r\n\r\n\r\nMouseTracking.prototype._setMousePosition = function(event) {\r\n  this._mouseX = event.layerX;\r\n  this._mouseY = event.layerY;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'mouseTracking' ],\r\n  mouseTracking: [ 'type', require(202) ]\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    filter = require(301),\r\n    groupBy = require(304);\r\n\r\nvar LOW_PRIORITY = 500,\r\n    MEDIUM_PRIORITY = 1250,\r\n    HIGH_PRIORITY = 1500;\r\n\r\nvar getOriginalEvent = require(267).getOriginal;\r\n\r\nvar round = Math.round;\r\n\r\nfunction mid(element) {\r\n  return {\r\n    x: element.x + round(element.width / 2),\r\n    y: element.y + round(element.height / 2)\r\n  };\r\n}\r\n\r\n/**\r\n * A plugin that makes shapes draggable / droppable.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {Modeling} modeling\r\n * @param {Selection} selection\r\n * @param {Rules} rules\r\n */\r\nfunction MoveEvents(eventBus, dragging, modeling, selection, rules) {\r\n\r\n  // rules\r\n\r\n  function canMove(shapes, delta, position, target) {\r\n\r\n    return rules.allowed('elements.move', {\r\n      shapes: shapes,\r\n      delta: delta,\r\n      position: position,\r\n      target: target\r\n    });\r\n  }\r\n\r\n\r\n  // move events\r\n\r\n  // assign a high priority to this handler to setup the environment\r\n  // others may hook up later, e.g. at default priority and modify\r\n  // the move environment.\r\n  //\r\n  // This sets up the context with\r\n  //\r\n  // * shape: the primary shape being moved\r\n  // * shapes: a list of shapes to be moved\r\n  // * validatedShapes: a list of shapes that are being checked\r\n  //                    against the rules before and during move\r\n  //\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = event.shape,\r\n        shapes = selection.get().slice();\r\n\r\n    // move only single shape if the dragged element\r\n    // is not part of the current selection\r\n    if (shapes.indexOf(shape) === -1) {\r\n      shapes = [ shape ];\r\n    }\r\n\r\n    // ensure we remove nested elements in the collection\r\n    // and add attachers for a proper dragger\r\n    shapes = removeNested(shapes);\r\n\r\n    // attach shapes to drag context\r\n    assign(context, {\r\n      shapes: shapes,\r\n      validatedShapes: shapes,\r\n      shape: shape\r\n    });\r\n  });\r\n\r\n\r\n  // assign a high priority to this handler to setup the environment\r\n  // others may hook up later, e.g. at default priority and modify\r\n  // the move environment\r\n  //\r\n  eventBus.on('shape.move.start', MEDIUM_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        validatedShapes = context.validatedShapes,\r\n        canExecute;\r\n\r\n    canExecute = context.canExecute = canMove(validatedShapes);\r\n\r\n    // check if we can move the elements\r\n    if (!canExecute) {\r\n      // suppress move operation\r\n      event.stopPropagation();\r\n\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // assign a low priority to this handler\r\n  // to let others modify the move event before we update\r\n  // the context\r\n  //\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        validatedShapes = context.validatedShapes,\r\n        hover = event.hover,\r\n        delta = { x: event.dx, y: event.dy },\r\n        position = { x: event.x, y: event.y },\r\n        canExecute;\r\n\r\n    // check if we can move the elements\r\n    canExecute = canMove(validatedShapes, delta, position, hover);\r\n\r\n    context.delta = delta;\r\n    context.canExecute = canExecute;\r\n\r\n    // simply ignore move over\r\n    if (canExecute === null) {\r\n      context.target = null;\r\n\r\n      return;\r\n    }\r\n\r\n    context.target = hover;\r\n  });\r\n\r\n  eventBus.on('shape.move.end', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    var delta = context.delta,\r\n        canExecute = context.canExecute,\r\n        isAttach = canExecute === 'attach',\r\n        shapes = context.shapes;\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    // ensure we have actual pixel values deltas\r\n    // (important when zoom level was > 1 during move)\r\n    delta.x = round(delta.x);\r\n    delta.y = round(delta.y);\r\n\r\n    modeling.moveElements(shapes, delta, context.target, isAttach, { primaryShape: context.shape });\r\n  });\r\n\r\n\r\n  // move activation\r\n\r\n  eventBus.on('element.mousedown', function(event) {\r\n\r\n    var originalEvent = getOriginalEvent(event);\r\n\r\n    if (!originalEvent) {\r\n      throw new Error('must supply DOM mousedown event');\r\n    }\r\n\r\n    start(originalEvent, event.element);\r\n  });\r\n\r\n\r\n  function start(event, element, activate) {\r\n\r\n    // do not move connections or the root element\r\n    if (element.waypoints || !element.parent) {\r\n      return;\r\n    }\r\n\r\n    var referencePoint = mid(element);\r\n\r\n    dragging.init(event, referencePoint, 'shape.move', {\r\n      cursor: 'grabbing',\r\n      autoActivate: activate,\r\n      data: {\r\n        shape: element,\r\n        context: {}\r\n      }\r\n    });\r\n  }\r\n\r\n  // API\r\n\r\n  this.start = start;\r\n}\r\n\r\nMoveEvents.$inject = [ 'eventBus', 'dragging', 'modeling', 'selection', 'rules' ];\r\n\r\nmodule.exports = MoveEvents;\r\n\r\n\r\n/**\r\n * Return a filtered list of elements that do not contain\r\n * those nested into others.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeNested(elements) {\r\n\r\n  var ids = groupBy(elements, 'id');\r\n\r\n  return filter(elements, function(element) {\r\n    while ((element = element.parent)) {\r\n\r\n      // parent in selection\r\n      if (ids[element.id]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n","'use strict';\r\n\r\nvar flatten = require(291),\r\n    forEach = require(303),\r\n    filter = require(301),\r\n    find = require(302),\r\n    size = require(308),\r\n    groupBy = require(304),\r\n    map = require(305);\r\n\r\nvar Elements = require(266);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClear = require(475),\r\n    svgCreate = require(477);\r\n\r\nvar translate = require(279).translate;\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nvar MARKER_DRAGGING = 'djs-dragging',\r\n    MARKER_OK = 'drop-ok',\r\n    MARKER_NOT_OK = 'drop-not-ok',\r\n    MARKER_NEW_PARENT = 'new-parent',\r\n    MARKER_ATTACH = 'attach-ok';\r\n\r\n/**\r\n * Provides previews for moving shapes when moving.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n */\r\nfunction MovePreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\r\n\r\n  function getVisualDragShapes(shapes) {\r\n    var elements = getAllDraggedElements(shapes);\r\n\r\n    var filteredElements = removeEdges(elements);\r\n\r\n    return filteredElements;\r\n  }\r\n\r\n  function getAllDraggedElements(shapes) {\r\n    var allShapes = Elements.selfAndAllChildren(shapes, true);\r\n\r\n    var allConnections = map(allShapes, function(shape) {\r\n      return (shape.incoming || []).concat(shape.outgoing || []);\r\n    });\r\n\r\n    return flatten(allShapes.concat(allConnections), true);\r\n  }\r\n\r\n  /**\r\n   * Sets drop marker on an element.\r\n   */\r\n  function setMarker(element, marker) {\r\n\r\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\r\n\r\n      if (m === marker) {\r\n        canvas.addMarker(element, m);\r\n      } else {\r\n        canvas.removeMarker(element, m);\r\n      }\r\n    });\r\n  }\r\n\r\n  function makeDraggable(context, element, addMarker) {\r\n\r\n    previewSupport.addDragger(element, context.dragGroup);\r\n\r\n    if (addMarker) {\r\n      canvas.addMarker(element, MARKER_DRAGGING);\r\n    }\r\n\r\n    if (context.allDraggedElements) {\r\n      context.allDraggedElements.push(element);\r\n    } else {\r\n      context.allDraggedElements = [ element ];\r\n    }\r\n  }\r\n\r\n  // expose to other components\r\n  // that plug into the drag behavior\r\n  this.makeDraggable = makeDraggable;\r\n\r\n  // add previews\r\n  eventBus.on('shape.move.start', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        dragShapes = context.shapes,\r\n        allDraggedElements = context.allDraggedElements;\r\n\r\n    var visuallyDraggedShapes = getVisualDragShapes(dragShapes);\r\n\r\n    if (!context.dragGroup) {\r\n      var dragGroup = svgCreate('g');\r\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n      var defaultLayer = canvas.getDefaultLayer();\r\n\r\n      svgAppend(defaultLayer, dragGroup);\r\n\r\n      context.dragGroup = dragGroup;\r\n    }\r\n\r\n    // add previews\r\n    visuallyDraggedShapes.forEach(function(shape) {\r\n      previewSupport.addDragger(shape, context.dragGroup);\r\n    });\r\n\r\n    // cache all dragged elements / gfx\r\n    // so that we can quickly undo their state changes later\r\n    if (!allDraggedElements) {\r\n      allDraggedElements = getAllDraggedElements(dragShapes);\r\n    } else {\r\n      allDraggedElements = flatten(allDraggedElements, getAllDraggedElements(dragShapes));\r\n    }\r\n\r\n    // add dragging marker\r\n    forEach(allDraggedElements, function(e) {\r\n      canvas.addMarker(e, MARKER_DRAGGING);\r\n    });\r\n\r\n    context.allDraggedElements = allDraggedElements;\r\n\r\n    // determine, if any of the dragged elements have different parents\r\n    context.differentParents = haveDifferentParents(dragShapes);\r\n  });\r\n\r\n  // update previews\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        dragGroup = context.dragGroup,\r\n        target = context.target,\r\n        parent = context.shape.parent,\r\n        canExecute = context.canExecute;\r\n\r\n    if (target) {\r\n      if (canExecute === 'attach') {\r\n        setMarker(target, MARKER_ATTACH);\r\n      } else if (context.canExecute && target && target.id !== parent.id) {\r\n        setMarker(target, MARKER_NEW_PARENT);\r\n      } else {\r\n        setMarker(target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n      }\r\n    }\r\n\r\n    translate(dragGroup, event.dx, event.dy);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.out', 'shape.move.cleanup' ], function(event) {\r\n    var context = event.context,\r\n        target = context.target;\r\n\r\n    if (target) {\r\n      setMarker(target, null);\r\n    }\r\n  });\r\n\r\n  // remove previews\r\n  eventBus.on('shape.move.cleanup', function(event) {\r\n\r\n    var context = event.context,\r\n        allDraggedElements = context.allDraggedElements,\r\n        dragGroup = context.dragGroup;\r\n\r\n\r\n    // remove dragging marker\r\n    forEach(allDraggedElements, function(e) {\r\n      canvas.removeMarker(e, MARKER_DRAGGING);\r\n    });\r\n\r\n    if (dragGroup) {\r\n      svgClear(dragGroup);\r\n    }\r\n  });\r\n}\r\n\r\nMovePreview.$inject = [ 'eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport' ];\r\n\r\nmodule.exports = MovePreview;\r\n\r\n////////// helpers //////////\r\n\r\n// returns elements minus all connections\r\n// where source or target is not elements\r\nfunction removeEdges(elements) {\r\n\r\n  var filteredElements = filter(elements, function(element) {\r\n\r\n    if (!isConnection(element)) {\r\n      return true;\r\n    } else {\r\n      var srcFound = find(elements, element.source);\r\n      var targetFound = find(elements, element.target);\r\n\r\n      return srcFound && targetFound;\r\n    }\r\n  });\r\n\r\n  return filteredElements;\r\n}\r\n\r\nfunction haveDifferentParents(elements) {\r\n  return size(groupBy(elements, function(e) { return e.parent && e.parent.id; })) !== 1;\r\n}\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","module.exports = {\r\n  __depends__: [\r\n    require(170),\r\n    require(233),\r\n    require(209),\r\n    require(227),\r\n    require(162),\r\n    require(217)\r\n  ],\r\n  __init__: [ 'move', 'movePreview' ],\r\n  move: [ 'type', require(204) ],\r\n  movePreview: [ 'type', require(205) ]\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n\r\n/**\r\n * An abstract provider that allows modelers to implement a custom\r\n * ordering of diagram elements on the canvas.\r\n *\r\n * It makes sure that the order is always preserved during element\r\n * creation and move operations.\r\n *\r\n * In order to use this behavior, inherit from it and override\r\n * the method {@link OrderingProvider#getOrdering}.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * function CustomOrderingProvider(eventBus) {\r\n *   OrderingProvider.call(this, eventBus);\r\n *\r\n *   this.getOrdering = function(element, newParent) {\r\n *     // always insert elements at the front\r\n *     // when moving\r\n *     return {\r\n *       index: 0,\r\n *       parent: newParent\r\n *     };\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction OrderingProvider(eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  var self = this;\r\n\r\n  this.preExecute([ 'shape.create', 'connection.create' ], function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection,\r\n        parent = context.parent;\r\n\r\n    var ordering = self.getOrdering(element, parent);\r\n\r\n    if (ordering) {\r\n\r\n      if (ordering.parent !== undefined) {\r\n        context.parent = ordering.parent;\r\n      }\r\n\r\n      context.parentIndex = ordering.index;\r\n    }\r\n  });\r\n\r\n  this.preExecute([ 'shape.move', 'connection.move' ], function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection,\r\n        parent = context.newParent || element.parent;\r\n\r\n    var ordering = self.getOrdering(element, parent);\r\n\r\n    if (ordering) {\r\n\r\n      if (ordering.parent !== undefined) {\r\n        context.newParent = ordering.parent;\r\n      }\r\n\r\n      context.newParentIndex = ordering.index;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Return a custom ordering of the element, both in terms\r\n * of parent element and index in the new parent.\r\n *\r\n * Implementors of this method must return an object with\r\n * `parent` _and_ `index` in it.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {djs.model.Shape} newParent\r\n *\r\n * @return {Object} ordering descriptor\r\n */\r\nOrderingProvider.prototype.getOrdering = function(element, newParent) {\r\n  return null;\r\n};\r\n\r\ninherits(OrderingProvider, CommandInterceptor);\r\n\r\nmodule.exports = OrderingProvider;","'use strict';\r\n\r\nvar getBBox = require(266).getBBox;\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477);\r\n\r\nvar domQuery = require(452);\r\n\r\nvar assign = require(431);\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A plugin that adds an outline to shapes and connections that may be activated and styled\r\n * via CSS classes.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction Outline(eventBus, styles, elementRegistry) {\r\n\r\n  this.offset = 6;\r\n\r\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\r\n\r\n  var self = this;\r\n\r\n  function createOutline(gfx, bounds) {\r\n    var outline = svgCreate('rect');\r\n\r\n    svgAttr(outline, assign({\r\n      x: 10,\r\n      y: 10,\r\n      width: 100,\r\n      height: 100\r\n    }, OUTLINE_STYLE));\r\n\r\n    svgAppend(gfx, outline);\r\n\r\n    return outline;\r\n  }\r\n\r\n  // A low priortity is necessary, because outlines of labels have to be updated\r\n  // after the label bounds have been updated in the renderer.\r\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\r\n    var element = event.element,\r\n        gfx     = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateShapeOutline(outline, element);\r\n  });\r\n\r\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\r\n    var element = event.element,\r\n        gfx     = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateConnectionOutline(outline, element);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Updates the outline of a shape respecting the dimension of the\r\n * element and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateShapeOutline = function(outline, element) {\r\n\r\n  svgAttr(outline, {\r\n    x: -this.offset,\r\n    y: -this.offset,\r\n    width: element.width + this.offset * 2,\r\n    height: element.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\n/**\r\n * Updates the outline of a connection respecting the bounding box of\r\n * the connection and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\r\n\r\n  var bbox = getBBox(connection);\r\n\r\n  svgAttr(outline, {\r\n    x: bbox.x - this.offset,\r\n    y: bbox.y - this.offset,\r\n    width: bbox.width + this.offset * 2,\r\n    height: bbox.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];\r\n\r\nmodule.exports = Outline;\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'outline' ],\r\n  outline: [ 'type', require(208) ]\r\n};","'use strict';\r\n\r\nvar isArray = require(422),\r\n    isString = require(428),\r\n    isObject = require(426),\r\n    assign = require(431),\r\n    forEach = require(303),\r\n    find = require(302),\r\n    filter = require(301);\r\n\r\nvar domify = require(449),\r\n    domClasses = require(445),\r\n    domAttr = require(444),\r\n    domRemove = require(453),\r\n    domClear = require(446);\r\n\r\nvar getBBox = require(266).getBBox;\r\n\r\n// document wide unique overlay ids\r\nvar ids = new (require(270))('ov');\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\nfunction createRoot(parent) {\r\n  var root = domify('<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />');\r\n  parent.insertBefore(root, parent.firstChild);\r\n\r\n  return root;\r\n}\r\n\r\n\r\nfunction setPosition(el, x, y) {\r\n  assign(el.style, { left: x + 'px', top: y + 'px' });\r\n}\r\n\r\nfunction setVisible(el, visible) {\r\n  el.style.display = visible === false ? 'none' : '';\r\n}\r\n\r\n/**\r\n * A service that allows users to attach overlays to diagram elements.\r\n *\r\n * The overlay service will take care of overlay positioning during updates.\r\n *\r\n * @example\r\n *\r\n * // add a pink badge on the top left of the shape\r\n * overlays.add(someShape, {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or add via shape id\r\n *\r\n * overlays.add('some-element-id', {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   }\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or add with optional type\r\n *\r\n * overlays.add(someShape, 'badge', {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   }\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n *\r\n * // remove an overlay\r\n *\r\n * var id = overlays.add(...);\r\n * overlays.remove(id);\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction Overlays(eventBus, canvas, elementRegistry) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._elementRegistry = elementRegistry;\r\n\r\n  this._ids = ids;\r\n\r\n  this._overlayDefaults = {\r\n    show: {\r\n      minZoom: 0.7,\r\n      maxZoom: 5.0\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mapping overlayId -> overlay\r\n   */\r\n  this._overlays = {};\r\n\r\n  /**\r\n   * Mapping elementId -> overlay container\r\n   */\r\n  this._overlayContainers = [];\r\n\r\n  // root html element for all overlays\r\n  this._overlayRoot = createRoot(canvas.getContainer());\r\n\r\n  this._init();\r\n}\r\n\r\n\r\nOverlays.$inject = [ 'eventBus', 'canvas', 'elementRegistry' ];\r\n\r\nmodule.exports = Overlays;\r\n\r\n\r\n/**\r\n * Returns the overlay with the specified id or a list of overlays\r\n * for an element with a given type.\r\n *\r\n * @example\r\n *\r\n * // return the single overlay with the given id\r\n * overlays.get('some-id');\r\n *\r\n * // return all overlays for the shape\r\n * overlays.get({ element: someShape });\r\n *\r\n * // return all overlays on shape with type 'badge'\r\n * overlays.get({ element: someShape, type: 'badge' });\r\n *\r\n * // shape can also be specified as id\r\n * overlays.get({ element: 'element-id', type: 'badge' });\r\n *\r\n *\r\n * @param {Object} search\r\n * @param {String} [search.id]\r\n * @param {String|djs.model.Base} [search.element]\r\n * @param {String} [search.type]\r\n *\r\n * @return {Object|Array<Object>} the overlay(s)\r\n */\r\nOverlays.prototype.get = function(search) {\r\n\r\n  if (isString(search)) {\r\n    search = { id: search };\r\n  }\r\n\r\n  if (isString(search.element)) {\r\n    search.element = this._elementRegistry.get(search.element);\r\n  }\r\n\r\n  if (search.element) {\r\n    var container = this._getOverlayContainer(search.element, true);\r\n\r\n    // return a list of overlays when searching by element (+type)\r\n    if (container) {\r\n      return search.type ? filter(container.overlays, { type: search.type }) : container.overlays.slice();\r\n    } else {\r\n      return [];\r\n    }\r\n  } else\r\n  if (search.type) {\r\n    return filter(this._overlays, { type: search.type });\r\n  } else {\r\n    // return single element when searching by id\r\n    return search.id ? this._overlays[search.id] : null;\r\n  }\r\n};\r\n\r\n/**\r\n * Adds a HTML overlay to an element.\r\n *\r\n * @param {String|djs.model.Base}   element   attach overlay to this shape\r\n * @param {String}                  [type]    optional type to assign to the overlay\r\n * @param {Object}                  overlay   the overlay configuration\r\n *\r\n * @param {String|DOMElement}       overlay.html                 html element to use as an overlay\r\n * @param {Object}                  [overlay.show]               show configuration\r\n * @param {Number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\r\n * @param {Number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\r\n * @param {Object}                  overlay.position             where to attach the overlay\r\n * @param {Number}                  [overlay.position.left]      relative to element bbox left attachment\r\n * @param {Number}                  [overlay.position.top]       relative to element bbox top attachment\r\n * @param {Number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\r\n * @param {Number}                  [overlay.position.right]     relative to element bbox right attachment\r\n *\r\n * @return {String}                 id that may be used to reference the overlay for update or removal\r\n */\r\nOverlays.prototype.add = function(element, type, overlay) {\r\n\r\n  if (isObject(type)) {\r\n    overlay = type;\r\n    type = null;\r\n  }\r\n\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  if (!overlay.position) {\r\n    throw new Error('must specifiy overlay position');\r\n  }\r\n\r\n  if (!overlay.html) {\r\n    throw new Error('must specifiy overlay html');\r\n  }\r\n\r\n  if (!element) {\r\n    throw new Error('invalid element specified');\r\n  }\r\n\r\n  var id = this._ids.next();\r\n\r\n  overlay = assign({}, this._overlayDefaults, overlay, {\r\n    id: id,\r\n    type: type,\r\n    element: element,\r\n    html: overlay.html\r\n  });\r\n\r\n  this._addOverlay(overlay);\r\n\r\n  return id;\r\n};\r\n\r\n\r\n/**\r\n * Remove an overlay with the given id or all overlays matching the given filter.\r\n *\r\n * @see Overlays#get for filter options.\r\n *\r\n * @param {String} [id]\r\n * @param {Object} [filter]\r\n */\r\nOverlays.prototype.remove = function(filter) {\r\n\r\n  var overlays = this.get(filter) || [];\r\n\r\n  if (!isArray(overlays)) {\r\n    overlays = [ overlays ];\r\n  }\r\n\r\n  var self = this;\r\n\r\n  forEach(overlays, function(overlay) {\r\n\r\n    var container = self._getOverlayContainer(overlay.element, true);\r\n\r\n    if (overlay) {\r\n      domRemove(overlay.html);\r\n      domRemove(overlay.htmlContainer);\r\n\r\n      delete overlay.htmlContainer;\r\n      delete overlay.element;\r\n\r\n      delete self._overlays[overlay.id];\r\n    }\r\n\r\n    if (container) {\r\n      var idx = container.overlays.indexOf(overlay);\r\n      if (idx !== -1) {\r\n        container.overlays.splice(idx, 1);\r\n      }\r\n    }\r\n  });\r\n\r\n};\r\n\r\n\r\nOverlays.prototype.show = function() {\r\n  setVisible(this._overlayRoot);\r\n};\r\n\r\n\r\nOverlays.prototype.hide = function() {\r\n  setVisible(this._overlayRoot, false);\r\n};\r\n\r\nOverlays.prototype.clear = function() {\r\n  this._overlays = {};\r\n\r\n  this._overlayContainers = [];\r\n\r\n  domClear(this._overlayRoot);\r\n};\r\n\r\nOverlays.prototype._updateOverlayContainer = function(container) {\r\n  var element = container.element,\r\n      html = container.html;\r\n\r\n  // update container left,top according to the elements x,y coordinates\r\n  // this ensures we can attach child elements relative to this container\r\n\r\n  var x = element.x,\r\n      y = element.y;\r\n\r\n  if (element.waypoints) {\r\n    var bbox = getBBox(element);\r\n    x = bbox.x;\r\n    y = bbox.y;\r\n  }\r\n\r\n  setPosition(html, x, y);\r\n\r\n  domAttr(container.html, 'data-container-id', element.id);\r\n};\r\n\r\n\r\nOverlays.prototype._updateOverlay = function(overlay) {\r\n\r\n  var position = overlay.position,\r\n      htmlContainer = overlay.htmlContainer,\r\n      element = overlay.element;\r\n\r\n  // update overlay html relative to shape because\r\n  // it is already positioned on the element\r\n\r\n  // update relative\r\n  var left = position.left,\r\n      top = position.top;\r\n\r\n  if (position.right !== undefined) {\r\n\r\n    var width;\r\n\r\n    if (element.waypoints) {\r\n      width = getBBox(element).width;\r\n    } else {\r\n      width = element.width;\r\n    }\r\n\r\n    left = position.right * -1 + width;\r\n  }\r\n\r\n  if (position.bottom !== undefined) {\r\n\r\n    var height;\r\n\r\n    if (element.waypoints) {\r\n      height = getBBox(element).height;\r\n    } else {\r\n      height = element.height;\r\n    }\r\n\r\n    top = position.bottom * -1 + height;\r\n  }\r\n\r\n  setPosition(htmlContainer, left || 0, top || 0);\r\n};\r\n\r\nOverlays.prototype._createOverlayContainer = function(element) {\r\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\r\n\r\n  this._overlayRoot.appendChild(html);\r\n\r\n  var container = {\r\n    html: html,\r\n    element: element,\r\n    overlays: []\r\n  };\r\n\r\n  this._updateOverlayContainer(container);\r\n\r\n  this._overlayContainers.push(container);\r\n\r\n  return container;\r\n};\r\n\r\n\r\nOverlays.prototype._updateRoot = function(viewbox) {\r\n  var a = viewbox.scale || 1;\r\n  var d = viewbox.scale || 1;\r\n\r\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\r\n\r\n  this._overlayRoot.style.transform = matrix;\r\n  this._overlayRoot.style['-ms-transform'] = matrix;\r\n  this._overlayRoot.style['-webkit-transform'] = matrix;\r\n};\r\n\r\n\r\nOverlays.prototype._getOverlayContainer = function(element, raw) {\r\n  var container = find(this._overlayContainers, function(c) {\r\n    return c.element === element;\r\n  });\r\n\r\n\r\n  if (!container && !raw) {\r\n    return this._createOverlayContainer(element);\r\n  }\r\n\r\n  return container;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nOverlays.prototype._addOverlay = function(overlay) {\r\n\r\n  var id = overlay.id,\r\n      element = overlay.element,\r\n      html = overlay.html,\r\n      htmlContainer,\r\n      overlayContainer;\r\n\r\n  // unwrap jquery (for those who need it)\r\n  if (html.get && html.constructor.prototype.jquery) {\r\n    html = html.get(0);\r\n  }\r\n\r\n  // create proper html elements from\r\n  // overlay HTML strings\r\n  if (isString(html)) {\r\n    html = domify(html);\r\n  }\r\n\r\n  overlayContainer = this._getOverlayContainer(element);\r\n\r\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\r\n\r\n  htmlContainer.appendChild(html);\r\n\r\n  if (overlay.type) {\r\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\r\n  }\r\n\r\n  overlay.htmlContainer = htmlContainer;\r\n\r\n  overlayContainer.overlays.push(overlay);\r\n  overlayContainer.html.appendChild(htmlContainer);\r\n\r\n  this._overlays[id] = overlay;\r\n\r\n  this._updateOverlay(overlay);\r\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\r\n};\r\n\r\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\r\n  var show = overlay.show,\r\n      htmlContainer = overlay.htmlContainer,\r\n      visible = true;\r\n\r\n  if (show) {\r\n    if (show.minZoom > viewbox.scale ||\r\n        show.maxZoom < viewbox.scale) {\r\n      visible = false;\r\n    }\r\n\r\n    setVisible(htmlContainer, visible);\r\n  }\r\n};\r\n\r\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\r\n\r\n  var self = this;\r\n\r\n  forEach(this._overlays, function(overlay) {\r\n    self._updateOverlayVisibilty(overlay, viewbox);\r\n  });\r\n};\r\n\r\n\r\nOverlays.prototype._init = function() {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  var self = this;\r\n\r\n\r\n  // scroll/zoom integration\r\n\r\n  function updateViewbox(viewbox) {\r\n    self._updateRoot(viewbox);\r\n    self._updateOverlaysVisibilty(viewbox);\r\n\r\n    self.show();\r\n  }\r\n\r\n  eventBus.on('canvas.viewbox.changing', function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  eventBus.on('canvas.viewbox.changed', function(event) {\r\n    updateViewbox(event.viewbox);\r\n  });\r\n\r\n\r\n  // remove integration\r\n\r\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\r\n    var element = e.element;\r\n    var overlays = self.get({ element: element });\r\n\r\n    forEach(overlays, function(o) {\r\n      self.remove(o.id);\r\n    });\r\n\r\n    var container = self._getOverlayContainer(element);\r\n\r\n    if (container) {\r\n      domRemove(container.html);\r\n      var i = self._overlayContainers.indexOf(container);\r\n      if (i !== -1) {\r\n        self._overlayContainers.splice(i, 1);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  // move integration\r\n\r\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\r\n    var element = e.element;\r\n\r\n    var container = self._getOverlayContainer(element, true);\r\n\r\n    if (container) {\r\n      forEach(container.overlays, function(overlay) {\r\n        self._updateOverlay(overlay);\r\n      });\r\n\r\n      self._updateOverlayContainer(container);\r\n    }\r\n  });\r\n\r\n\r\n  // marker integration, simply add them on the overlays as classes, too.\r\n\r\n  eventBus.on('element.marker.update', function(e) {\r\n    var container = self._getOverlayContainer(e.element, true);\r\n    if (container) {\r\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\r\n    }\r\n  });\r\n\r\n\r\n  // clear overlays with diagram\r\n\r\n  eventBus.on('diagram.clear', this.clear, this);\r\n};\r\n","module.exports = {\r\n  __init__: [ 'overlays' ],\r\n  overlays: [ 'type', require(210) ]\r\n};","'use strict';\r\n\r\nvar isFunction = require(423),\r\n    isArray = require(422),\r\n    forEach = require(303);\r\n\r\nvar domify = require(449),\r\n    domQuery = require(452),\r\n    domAttr = require(444),\r\n    domClear = require(446),\r\n    domClasses = require(445),\r\n    domMatches = require(451),\r\n    domDelegate = require(448),\r\n    domEvent = require(450);\r\n\r\n\r\nvar toggleSelector = '.djs-palette-toggle',\r\n    entrySelector = '.entry',\r\n    elementSelector = toggleSelector + ', ' + entrySelector;\r\n\r\n\r\n/**\r\n * A palette containing modeling elements.\r\n */\r\nfunction Palette(eventBus, canvas, dragging) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._dragging = dragging;\r\n\r\n  this._providers = [];\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('tool-manager.update', function(event) {\r\n    var tool = event.tool;\r\n\r\n    self.updateToolHighlight(tool);\r\n  });\r\n\r\n  eventBus.on('i18n.changed', function() {\r\n    self._update();\r\n  });\r\n}\r\n\r\nPalette.$inject = [ 'eventBus', 'canvas', 'dragging' ];\r\n\r\nmodule.exports = Palette;\r\n\r\n\r\n/**\r\n * Register a provider with the palette\r\n *\r\n * @param  {PaletteProvider} provider\r\n */\r\nPalette.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n\r\n  if (!this._container) {\r\n    this._init();\r\n  }\r\n\r\n  this._update();\r\n};\r\n\r\n\r\n/**\r\n * Returns the palette entries for a given element\r\n *\r\n * @return {Array<PaletteEntryDescriptor>} list of entries\r\n */\r\nPalette.prototype.getEntries = function() {\r\n\r\n  var entries = {};\r\n\r\n  // loop through all providers and their entries.\r\n  // group entries by id so that overriding an entry is possible\r\n  forEach(this._providers, function(provider) {\r\n    var e = provider.getPaletteEntries();\r\n\r\n    forEach(e, function(entry, id) {\r\n      entries[id] = entry;\r\n    });\r\n  });\r\n\r\n  return entries;\r\n};\r\n\r\n\r\n/**\r\n * Initialize\r\n */\r\nPalette.prototype._init = function() {\r\n  var canvas = this._canvas,\r\n      eventBus = this._eventBus;\r\n\r\n  var parent = canvas.getContainer(),\r\n      container = this._container = domify(Palette.HTML_MARKUP),\r\n      self = this;\r\n\r\n  parent.appendChild(container);\r\n\r\n  domDelegate.bind(container, elementSelector, 'click', function(event) {\r\n\r\n    var target = event.delegateTarget;\r\n\r\n    if (domMatches(target, toggleSelector)) {\r\n      return self.toggle();\r\n    }\r\n\r\n    self.trigger('click', event);\r\n  });\r\n\r\n  // prevent drag propagation\r\n  domEvent.bind(container, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  // prevent drag propagation\r\n  domDelegate.bind(container, entrySelector, 'dragstart', function(event) {\r\n    self.trigger('dragstart', event);\r\n  });\r\n\r\n  eventBus.fire('palette.create', {\r\n    html: container\r\n  });\r\n\r\n  eventBus.on('canvas.resized', this.triggerTwoColumn, this);\r\n};\r\n\r\n\r\nPalette.prototype._update = function() {\r\n\r\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\r\n      entries = this._entries = this.getEntries();\r\n\r\n  domClear(entriesContainer);\r\n\r\n  forEach(entries, function(entry, id) {\r\n\r\n    var grouping = entry.group || 'default';\r\n\r\n    var container = domQuery('[data-group=' + grouping + ']', entriesContainer);\r\n    if (!container) {\r\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\r\n      entriesContainer.appendChild(container);\r\n    }\r\n\r\n    var html = entry.html || (\r\n      entry.separator ?\r\n        '<hr class=\"separator\" />' :\r\n        '<div class=\"entry\" draggable=\"true\"></div>');\r\n\r\n\r\n    var control = domify(html);\r\n    container.appendChild(control);\r\n\r\n    if (!entry.separator) {\r\n      domAttr(control, 'data-action', id);\r\n\r\n      if (entry.title) {\r\n        domAttr(control, 'title', entry.title);\r\n      }\r\n\r\n      if (entry.className) {\r\n        addClasses(control, entry.className);\r\n      }\r\n\r\n      if (entry.imageUrl) {\r\n        control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\r\n      }\r\n    }\r\n  });\r\n\r\n  // open after update\r\n  this.open(true);\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action available on the palette\r\n *\r\n * @param  {String} action\r\n * @param  {Event} event\r\n */\r\nPalette.prototype.trigger = function(action, event, autoActivate) {\r\n  var entries = this._entries,\r\n      entry,\r\n      handler,\r\n      originalEvent,\r\n      button = event.delegateTarget || event.target;\r\n\r\n  if (!button) {\r\n    return event.preventDefault();\r\n  }\r\n\r\n  entry = entries[domAttr(button, 'data-action')];\r\n\r\n  // when user clicks on the palette and not on an action\r\n  if (!entry) {\r\n    return;\r\n  }\r\n\r\n  handler = entry.action;\r\n\r\n  originalEvent = event.originalEvent || event;\r\n\r\n  // simple action (via callback function)\r\n  if (isFunction(handler)) {\r\n    if (action === 'click') {\r\n      handler(originalEvent, autoActivate);\r\n    }\r\n  } else {\r\n    if (handler[action]) {\r\n      handler[action](originalEvent, autoActivate);\r\n    }\r\n  }\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n};\r\n\r\nPalette.prototype.triggerTwoColumn = function() {\r\n  var canvas = this._canvas;\r\n\r\n  var parent = canvas.getContainer();\r\n\r\n  if (parent.clientHeight < 650) {\r\n    domClasses(parent).add('two-column');\r\n  } else {\r\n    domClasses(parent).remove('two-column');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Close the palette\r\n */\r\nPalette.prototype.close = function() {\r\n  var canvas = this._canvas;\r\n\r\n  var parent = canvas.getContainer();\r\n\r\n  domClasses(this._container).remove('open');\r\n\r\n  domClasses(parent).remove('two-column');\r\n};\r\n\r\n\r\n/**\r\n * Open the palette\r\n */\r\nPalette.prototype.open = function() {\r\n  domClasses(this._container).add('open');\r\n\r\n  this.triggerTwoColumn();\r\n};\r\n\r\n\r\nPalette.prototype.toggle = function(open) {\r\n  if (this.isOpen()) {\r\n    this.close();\r\n  } else {\r\n    this.open();\r\n  }\r\n};\r\n\r\nPalette.prototype.isActiveTool = function(tool) {\r\n  return tool && this._activeTool === tool;\r\n};\r\n\r\nPalette.prototype.updateToolHighlight = function(name) {\r\n  var entriesContainer,\r\n      toolsContainer;\r\n\r\n  if (!this._toolsContainer) {\r\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\r\n\r\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\r\n  }\r\n\r\n  toolsContainer = this._toolsContainer;\r\n\r\n  forEach(toolsContainer.children, function(tool) {\r\n    var actionName = tool.getAttribute('data-action');\r\n\r\n    if (!actionName) {\r\n      return;\r\n    }\r\n\r\n    actionName = actionName.replace('-tool', '');\r\n\r\n    if (tool.classList.contains('entry') && actionName === name) {\r\n      domClasses(tool).add('highlighted-entry');\r\n    } else {\r\n      domClasses(tool).remove('highlighted-entry');\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Return true if the palette is opened.\r\n *\r\n * @example\r\n *\r\n * palette.open();\r\n *\r\n * if (palette.isOpen()) {\r\n *   // yes, we are open\r\n * }\r\n *\r\n * @return {boolean} true if palette is opened\r\n */\r\nPalette.prototype.isOpen = function() {\r\n  return this._container && domClasses(this._container).has('open');\r\n};\r\n\r\n\r\n/* markup definition */\r\n\r\nPalette.HTML_MARKUP =\r\n  '<div class=\"djs-palette\">' +\r\n    '<div class=\"djs-palette-entries\"></div>' +\r\n    '<div class=\"djs-palette-toggle\"></div>' +\r\n  '</div>';\r\n\r\n\r\n////////// helpers /////////////////////////////\r\n\r\nfunction addClasses(element, classNames) {\r\n\r\n  var classes = domClasses(element);\r\n\r\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(//s+/g);\r\n  actualClassNames.forEach(function(cls) {\r\n    classes.add(cls);\r\n  });\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [ require(242) ],\r\n  __init__: [ 'palette' ],\r\n  palette: [ 'type', require(212) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    assign = require(431),\r\n    find = require(302);\r\n\r\nvar domDelegate = require(448),\r\n    domify = require(449),\r\n    domClasses = require(445),\r\n    domAttr = require(444),\r\n    domRemove = require(453);\r\n\r\nvar DATA_REF = 'data-id';\r\n\r\n/**\r\n * A popup menu that can be used to display a list of actions anywhere in the canvas.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nfunction PopupMenu(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas  = canvas;\r\n  this._providers = {};\r\n}\r\n\r\nPopupMenu.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n/**\r\n * Registers a popup menu provider\r\n *\r\n * @param  {String} id\r\n * @param  {Object} provider\r\n *\r\n * @example\r\n * popupMenu.registerProvider('myMenuID', {\r\n *   getEntries: function(element) {\r\n *     return [\r\n *       {\r\n *          id: 'entry-1',\r\n *          label: 'My Entry',\r\n *          action: 'alert(\"I have been clicked!\")'\r\n *        }\r\n *      ];\r\n *    }\r\n *  });\r\n * })\r\n */\r\nPopupMenu.prototype.registerProvider = function(id, provider) {\r\n  this._providers[id] = provider;\r\n};\r\n\r\n\r\n/**\r\n * Create a popup menu according to a given element. The id refers to the ID\r\n * of the provider that must be registered before.\r\n *\r\n * @param  {String} id provider id\r\n * @param  {Object} element\r\n *\r\n * @return {PopupMenu} popup menu instance\r\n */\r\nPopupMenu.prototype.create = function(id, element) {\r\n\r\n  var provider = this._providers[id];\r\n\r\n  if (!provider) {\r\n    throw new Error('Provider is not registered: ' + id);\r\n  }\r\n\r\n  if (!element) {\r\n    throw new Error('Element is missing');\r\n  }\r\n\r\n  var current = this._current = {\r\n    provider: provider,\r\n    className: id,\r\n    element: element\r\n  };\r\n\r\n  if (provider.getHeaderEntries) {\r\n    current.headerEntries = provider.getHeaderEntries(element);\r\n  }\r\n\r\n  current.entries = provider.getEntries(element);\r\n\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Determine if the popup menu has entries.\r\n *\r\n * @return {Boolean} true if empty\r\n */\r\nPopupMenu.prototype.isEmpty = function() {\r\n\r\n  var current = this._current;\r\n\r\n  return current.entries.length === 0 && current.headerEntries && current.headerEntries.length === 0;\r\n};\r\n\r\n\r\n/**\r\n * Open popup menu at given position\r\n *\r\n * @param {Object} position\r\n *\r\n * @return {Object} popup menu instance\r\n */\r\nPopupMenu.prototype.open = function(position) {\r\n\r\n  if (!position) {\r\n    throw new Error('the position argument is missing');\r\n  }\r\n\r\n  // make sure, only one popup menu is open at a time\r\n  if (this.isOpen()) {\r\n    this.close();\r\n  }\r\n\r\n  var current = this._current,\r\n      canvas = this._canvas,\r\n      parent = canvas.getContainer();\r\n\r\n  current.position = position;\r\n\r\n  current.container = this._createContainer();\r\n\r\n  if (current.headerEntries) {\r\n    var headerEntriesContainer = this._createEntries(current.headerEntries, 'djs-popup-header');\r\n\r\n    current.container.appendChild(headerEntriesContainer);\r\n  }\r\n\r\n  if (current.entries) {\r\n    var entriesContainer = this._createEntries(current.entries, 'djs-popup-body');\r\n\r\n    current.container.appendChild(entriesContainer);\r\n  }\r\n\r\n  this._attachContainer(current.container, parent, position.cursor);\r\n\r\n  return this;\r\n};\r\n\r\n\r\n/**\r\n * Removes the popup menu and unbinds the event handlers.\r\n */\r\nPopupMenu.prototype.close = function() {\r\n\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._unbindHandlers();\r\n  domRemove(this._current.container);\r\n  this._current.container = null;\r\n};\r\n\r\n\r\n/**\r\n * Determine if an open popup menu exist.\r\n *\r\n * @return {Boolean} true if open\r\n */\r\nPopupMenu.prototype.isOpen = function() {\r\n  return !!this._current.container;\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action associated with an entry.\r\n *\r\n * @param {Object} event\r\n *\r\n * @return the result of the action callback, if any\r\n */\r\nPopupMenu.prototype.trigger = function(event) {\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n\r\n  var element = event.delegateTarget || event.target,\r\n      entryId = domAttr(element, DATA_REF);\r\n\r\n  var entry = this._getEntry(entryId);\r\n\r\n  if (entry.action) {\r\n    return entry.action.call(null, event, entry);\r\n  }\r\n};\r\n\r\n/**\r\n * Gets an entry instance (either entry or headerEntry) by id.\r\n *\r\n * @param  {String} entryId\r\n *\r\n * @return {Object} entry instance\r\n */\r\nPopupMenu.prototype._getEntry = function(entryId) {\r\n\r\n  var search = { id: entryId };\r\n\r\n  var entry = find(this._current.entries, search) || find(this._current.headerEntries, search);\r\n\r\n  if (!entry) {\r\n    throw new Error('entry not found');\r\n  }\r\n\r\n  return entry;\r\n};\r\n\r\n\r\n/**\r\n * Creates the popup menu container.\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createContainer = function() {\r\n  var container = domify('<div class=\"djs-popup\">'),\r\n      position = this._current.position,\r\n      className = this._current.className;\r\n\r\n  assign(container.style, {\r\n    position: 'absolute',\r\n    left: position.x + 'px',\r\n    top: position.y + 'px',\r\n    visibility: 'hidden'\r\n  });\r\n\r\n  domClasses(container).add(className);\r\n\r\n  return container;\r\n};\r\n\r\n\r\n/**\r\n * Attaches the container to the DOM and binds the event handlers.\r\n *\r\n * @param {Object} container\r\n * @param {Object} parent\r\n */\r\nPopupMenu.prototype._attachContainer = function(container, parent, cursor) {\r\n  var self = this;\r\n\r\n   // Event handler\r\n  domDelegate.bind(container, '.entry' ,'click', function(event) {\r\n    self.trigger(event);\r\n  });\r\n\r\n  // apply canvas zoom level\r\n  var zoom = this._canvas.zoom();\r\n\r\n  container.style.transformOrigin = 'top left';\r\n  container.style.transform = 'scale(' + zoom + ')';\r\n\r\n  // Attach to DOM\r\n  parent.appendChild(container);\r\n\r\n  if (cursor) {\r\n    this._assureIsInbounds(container, cursor);\r\n  }\r\n\r\n  // Add Handler\r\n  this._bindHandlers();\r\n};\r\n\r\n\r\n/**\r\n * Make sure that the menu is always fully shown\r\n *\r\n * @method function\r\n *\r\n * @param  {Object} container\r\n * @param  {Position} cursor {x, y}\r\n */\r\nPopupMenu.prototype._assureIsInbounds = function(container, cursor) {\r\n  var canvas = this._canvas,\r\n      clientRect = canvas._container.getBoundingClientRect();\r\n\r\n  var containerX = container.offsetLeft,\r\n      containerY = container.offsetTop,\r\n      containerWidth = container.scrollWidth,\r\n      containerHeight = container.scrollHeight,\r\n      overAxis = {},\r\n      left, top;\r\n\r\n  var cursorPosition = {\r\n    x: cursor.x - clientRect.left,\r\n    y: cursor.y - clientRect.top\r\n  };\r\n\r\n  if (containerX + containerWidth > clientRect.width) {\r\n    overAxis.x = true;\r\n  }\r\n\r\n  if (containerY + containerHeight > clientRect.height) {\r\n    overAxis.y = true;\r\n  }\r\n\r\n  if (overAxis.x && overAxis.y) {\r\n    left = cursorPosition.x - containerWidth + 'px';\r\n    top = cursorPosition.y - containerHeight + 'px';\r\n  } else if (overAxis.x) {\r\n    left = cursorPosition.x - containerWidth + 'px';\r\n    top = cursorPosition.y + 'px';\r\n  } else if (overAxis.y && cursorPosition.y < containerHeight) {\r\n    left = cursorPosition.x + 'px';\r\n    top = 10 + 'px';\r\n  } else if (overAxis.y) {\r\n    left = cursorPosition.x + 'px';\r\n    top = cursorPosition.y - containerHeight + 'px';\r\n  }\r\n\r\n  assign(container.style, { left: left, top: top }, { visibility: 'visible', 'z-index': 1000 });\r\n};\r\n\r\n\r\n/**\r\n * Creates a list of entries and returns them as a DOM container.\r\n *\r\n * @param {Array<Object>} entries an array of entry objects\r\n * @param {String} className the class name of the entry container\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createEntries = function(entries, className) {\r\n\r\n  var entriesContainer = domify('<div>'),\r\n      self = this;\r\n\r\n  domClasses(entriesContainer).add(className);\r\n\r\n  forEach(entries, function(entry) {\r\n    var entryContainer = self._createEntry(entry, entriesContainer);\r\n    entriesContainer.appendChild(entryContainer);\r\n  });\r\n\r\n  return entriesContainer;\r\n};\r\n\r\n\r\n/**\r\n * Creates a single entry and returns it as a DOM container.\r\n *\r\n * @param  {Object} entry\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createEntry = function(entry) {\r\n\r\n  if (!entry.id) {\r\n    throw new Error ('every entry must have the id property set');\r\n  }\r\n\r\n  var entryContainer = domify('<div>'),\r\n      entryClasses = domClasses(entryContainer);\r\n\r\n  entryClasses.add('entry');\r\n\r\n  if (entry.className) {\r\n    entryClasses.add(entry.className);\r\n  }\r\n\r\n  domAttr(entryContainer, DATA_REF, entry.id);\r\n\r\n  if (entry.label) {\r\n    var label = domify('<span>');\r\n    label.textContent = entry.label;\r\n    entryContainer.appendChild(label);\r\n  }\r\n\r\n  if (entry.imageUrl) {\r\n    entryContainer.appendChild(domify('<img src=\"' + entry.imageUrl + '\" />'));\r\n  }\r\n\r\n  if (entry.active === true) {\r\n    entryClasses.add('active');\r\n  }\r\n\r\n  if (entry.disabled === true) {\r\n    entryClasses.add('disabled');\r\n  }\r\n\r\n  if (entry.title) {\r\n    entryContainer.title = entry.title;\r\n  }\r\n\r\n  return entryContainer;\r\n};\r\n\r\n\r\n/**\r\n * Binds the `close` method to 'contextPad.close' & 'canvas.viewbox.changed'.\r\n */\r\nPopupMenu.prototype._bindHandlers = function() {\r\n\r\n  var eventBus = this._eventBus,\r\n      self = this;\r\n\r\n  function close() {\r\n    self.close();\r\n  }\r\n\r\n  eventBus.once('contextPad.close', close);\r\n  eventBus.once('canvas.viewbox.changing', close);\r\n  eventBus.once('commandStack.changed', close);\r\n};\r\n\r\n\r\n/**\r\n * Unbinds the `close` method to 'contextPad.close' & 'canvas.viewbox.changing'.\r\n */\r\nPopupMenu.prototype._unbindHandlers = function() {\r\n\r\n  var eventBus = this._eventBus,\r\n      self = this;\r\n\r\n  function close() {\r\n    self.close();\r\n  }\r\n\r\n  eventBus.off('contextPad.close', close);\r\n  eventBus.off('canvas.viewbox.changed', close);\r\n  eventBus.off('commandStack.changed', close);\r\n};\r\n\r\nmodule.exports = PopupMenu;\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'popupMenu' ],\r\n  popupMenu: [ 'type', require(214) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClone = require(476),\r\n    svgCreate = require(477);\r\n\r\n/**\r\n * Adds support for previews of moving/resizing elements.\r\n */\r\nfunction PreviewSupport(elementRegistry, canvas, styles) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n  this._styles = styles;\r\n}\r\n\r\nmodule.exports = PreviewSupport;\r\n\r\nPreviewSupport.$inject = [ 'elementRegistry', 'canvas', 'styles' ];\r\n\r\n\r\n/**\r\n * Returns graphics of an element.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {SVGElement}\r\n */\r\nPreviewSupport.prototype.getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n\r\n/**\r\n * Adds a move preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} dragger\r\n */\r\nPreviewSupport.prototype.addDragger = function(shape, group) {\r\n  var gfx = this.getGfx(shape);\r\n\r\n  // clone is not included in tsvg for some reason\r\n  var dragger = svgClone(gfx);\r\n  var bbox = gfx.getBoundingClientRect();\r\n\r\n  // remove markers from connections\r\n  if (isConnection(shape)) {\r\n    removeMarkers(dragger);\r\n  }\r\n\r\n  svgAttr(dragger, this._styles.cls('djs-dragger', [], {\r\n    x: bbox.top,\r\n    y: bbox.left\r\n  }));\r\n\r\n  svgAppend(group, dragger);\r\n\r\n  return dragger;\r\n};\r\n\r\n/**\r\n * Adds a resize preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} frame\r\n */\r\nPreviewSupport.prototype.addFrame = function(shape, group) {\r\n\r\n  var frame = svgCreate('rect', {\r\n    class: 'djs-resize-overlay',\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x: shape.x,\r\n    y: shape.y\r\n  });\r\n\r\n  svgAppend(group, frame);\r\n\r\n  return frame;\r\n};\r\n\r\n////////// helpers //////////\r\n\r\n/**\r\n * Removes all svg marker references from an SVG.\r\n *\r\n * @param {SVGElement} gfx\r\n */\r\nfunction removeMarkers(gfx) {\r\n\r\n  if (gfx.children) {\r\n\r\n    forEach(gfx.children, function(child) {\r\n\r\n      // recursion\r\n      removeMarkers(child);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  gfx.style.markerStart = '';\r\n  gfx.style.markerEnd = '';\r\n\r\n}\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'previewSupport' ],\r\n  previewSupport: [ 'type', require(216) ]\r\n};\r\n","'use strict';\r\n\r\n\r\n/**\r\n * Service that allow replacing of elements.\r\n *\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nfunction Replace(modeling) {\r\n\r\n  this._modeling = modeling;\r\n}\r\n\r\nmodule.exports = Replace;\r\n\r\nReplace.$inject = [ 'modeling' ];\r\n\r\n/**\r\n * @param {Element} oldElement - Element to be replaced\r\n * @param {Object}  newElementData - Containing information about the new Element, for example height, width, type.\r\n * @param {Object}  options - Custom options that will be attached to the context. It can be used to inject data\r\n *                            that is needed in the command chain. For example it could be used in\r\n *                            eventbus.on('commandStack.shape.replace.postExecute') to change shape attributes after\r\n *                            shape creation.\r\n */\r\nReplace.prototype.replaceElement = function(oldElement, newElementData, options) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var newElement = null;\r\n\r\n  if (oldElement.waypoints) {\r\n    // TODO\r\n    // modeling.replaceConnection\r\n  } else {\r\n    // set center of element for modeling API\r\n    // if no new width / height is given use old elements size\r\n    newElementData.x = Math.ceil(oldElement.x + (newElementData.width || oldElement.width) / 2);\r\n    newElementData.y = Math.ceil(oldElement.y + (newElementData.height || oldElement.height) / 2);\r\n\r\n    newElement = modeling.replaceShape(oldElement, newElementData, options);\r\n  }\r\n\r\n  return newElement;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'replace' ],\r\n  replace: [ 'type', require(218) ]\r\n};\r\n","'use strict';\r\n\r\nvar pick = require(438),\r\n    assign = require(431);\r\n\r\nvar ResizeUtil = require(223);\r\n\r\nvar asTRBL = require(252).asTRBL,\r\n    roundBounds = require(252).roundBounds;\r\n\r\nvar DEFAULT_MIN_WIDTH = 10;\r\n\r\n\r\n/**\r\n * A component that provides resizing of shapes on the canvas.\r\n *\r\n * The following components are part of shape resize:\r\n *\r\n *  * adding resize handles,\r\n *  * creating a visual during resize\r\n *  * checking resize rules\r\n *  * committing a change once finished\r\n *\r\n *\r\n * ## Customizing\r\n *\r\n * It's possible to customize the resizing behaviour by intercepting 'resize.start'\r\n * and providing the following parameters through the 'context':\r\n *\r\n *   * minDimensions ({ width, height }): minimum shape dimensions\r\n *\r\n *   * childrenBoxPadding ({ left, top, bottom, right } || number):\r\n *     gap between the minimum bounding box and the container\r\n *\r\n * f.ex:\r\n *\r\n * ```javascript\r\n * eventBus.on('resize.start', 1500, function(event) {\r\n *   var context = event.context,\r\n *\r\n *  context.minDimensions = { width: 140, height: 120 };\r\n *\r\n *  // Passing general padding\r\n *  context.childrenBoxPadding = 30;\r\n *\r\n *  // Passing padding to a specific side\r\n *  context.childrenBoxPadding.left = 20;\r\n * });\r\n * ```\r\n */\r\nfunction Resize(eventBus, rules, modeling, dragging) {\r\n\r\n  this._dragging = dragging;\r\n  this._rules = rules;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('resize.start', function(event) {\r\n\r\n    var context = event.context,\r\n        resizeConstraints = context.resizeConstraints,\r\n        // evaluate minBounds for backwards compatibility\r\n        minBounds = context.minBounds;\r\n\r\n    if (resizeConstraints === undefined) {\r\n\r\n      if (minBounds === undefined) {\r\n        minBounds = self.computeMinResizeBox(context);\r\n      }\r\n\r\n      context.resizeConstraints = {\r\n        min: asTRBL(minBounds)\r\n      };\r\n    }\r\n  });\r\n\r\n  eventBus.on('resize.move', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        direction = context.direction,\r\n        resizeConstraints = context.resizeConstraints,\r\n        delta,\r\n        newBounds;\r\n\r\n    delta = {\r\n      x: event.dx,\r\n      y: event.dy\r\n    };\r\n\r\n    context.delta = delta;\r\n\r\n    newBounds = ResizeUtil.resizeBounds(shape, direction, delta);\r\n\r\n    // ensure constraints during resize\r\n    context.newBounds = ResizeUtil.ensureConstraints(newBounds, resizeConstraints);\r\n\r\n    // update + cache executable state\r\n    context.canExecute = self.canResize(context);\r\n  });\r\n\r\n  eventBus.on('resize.end', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        canExecute = context.canExecute,\r\n        newBounds = context.newBounds;\r\n\r\n    if (canExecute) {\r\n      // ensure we have actual pixel values for new bounds\r\n      // (important when zoom level was > 1 during move)\r\n      newBounds = roundBounds(newBounds);\r\n\r\n      // perform the actual resize\r\n      modeling.resizeShape(shape, newBounds);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nResize.prototype.canResize = function(context) {\r\n  var rules = this._rules;\r\n\r\n  var ctx = pick(context, [ 'newBounds', 'shape', 'delta', 'direction' ]);\r\n\r\n  return rules.allowed('shape.resize', ctx);\r\n};\r\n\r\n/**\r\n * Activate a resize operation\r\n *\r\n * You may specify additional contextual information and must specify a\r\n * resize direction during activation of the resize event.\r\n *\r\n * @param {MouseEvent} event\r\n * @param {djs.model.Shape} shape\r\n * @param {Object|String} contextOrDirection\r\n */\r\nResize.prototype.activate = function(event, shape, contextOrDirection) {\r\n  var dragging = this._dragging,\r\n      context,\r\n      direction;\r\n\r\n  if (typeof contextOrDirection === 'string') {\r\n    contextOrDirection = {\r\n      direction: contextOrDirection\r\n    };\r\n  }\r\n\r\n  context = assign({ shape: shape }, contextOrDirection);\r\n\r\n  direction = context.direction;\r\n\r\n  if (!direction) {\r\n    throw new Error('must provide a direction (nw|se|ne|sw)');\r\n  }\r\n\r\n  dragging.init(event, 'resize', {\r\n    autoActivate: true,\r\n    cursor: 'resize-' + (/nw|se/.test(direction) ? 'nwse' : 'nesw'),\r\n    data: {\r\n      shape: shape,\r\n      context: context\r\n    }\r\n  });\r\n};\r\n\r\nResize.prototype.computeMinResizeBox = function(context) {\r\n  var shape = context.shape,\r\n      direction = context.direction,\r\n      minDimensions,\r\n      childrenBounds;\r\n\r\n  minDimensions = context.minDimensions || {\r\n    width: DEFAULT_MIN_WIDTH,\r\n    height: DEFAULT_MIN_WIDTH\r\n  };\r\n\r\n  // get children bounds\r\n  childrenBounds = ResizeUtil.computeChildrenBBox(shape, context.childrenBoxPadding);\r\n\r\n  // get correct minimum bounds from given resize direction\r\n  // basically ensures that the minBounds is max(childrenBounds, minDimensions)\r\n  return ResizeUtil.getMinResizeBounds(direction, shape, minDimensions, childrenBounds);\r\n};\r\n\r\n\r\nResize.$inject = [ 'eventBus', 'rules', 'modeling', 'dragging' ];\r\n\r\nmodule.exports = Resize;\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar HANDLE_OFFSET = -2,\r\n    HANDLE_SIZE  = 5,\r\n    HANDLE_HIT_SIZE = 20;\r\n\r\nvar CLS_RESIZER   = 'djs-resizer';\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgClear = require(475),\r\n    svgCreate = require(477);\r\n\r\nvar domEvent = require(450);\r\n\r\nvar isPrimaryButton = require(274).isPrimaryButton;\r\n\r\nvar asTRBL = require(252).asTRBL;\r\n\r\nvar transform = require(279).transform;\r\n\r\n\r\n/**\r\n * This component is responsible for adding resize handles.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {Selection} selection\r\n * @param {Resize} resize\r\n */\r\nfunction ResizeHandles(eventBus, canvas, selection, resize) {\r\n\r\n  this._resize = resize;\r\n  this._canvas = canvas;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('selection.changed', function(e) {\r\n    var newSelection = e.newSelection;\r\n\r\n    // remove old selection markers\r\n    self.removeResizers();\r\n\r\n    // add new selection markers ONLY if single selection\r\n    if (newSelection.length === 1) {\r\n      forEach(newSelection, self.addResizer, self);\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.changed', function(e) {\r\n    var shape = e.element;\r\n\r\n    if (selection.isSelected(shape)) {\r\n      self.removeResizers();\r\n\r\n      self.addResizer(shape);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nResizeHandles.prototype.makeDraggable = function(element, gfx, direction) {\r\n  var resize = this._resize;\r\n\r\n  function startResize(event) {\r\n    // only trigger on left mouse button\r\n    if (isPrimaryButton(event)) {\r\n      resize.activate(event, element, direction);\r\n    }\r\n  }\r\n\r\n  domEvent.bind(gfx, 'mousedown', startResize);\r\n  domEvent.bind(gfx, 'touchstart', startResize);\r\n};\r\n\r\n\r\nResizeHandles.prototype._createResizer = function(element, x, y, rotation, direction) {\r\n  var resizersParent = this._getResizersParent();\r\n\r\n  var group = svgCreate('g');\r\n  svgClasses(group).add(CLS_RESIZER);\r\n  svgClasses(group).add(CLS_RESIZER + '-' + element.id);\r\n  svgClasses(group).add(CLS_RESIZER + '-' + direction);\r\n\r\n  svgAppend(resizersParent, group);\r\n\r\n  var origin = -HANDLE_SIZE + HANDLE_OFFSET;\r\n\r\n  // Create four drag indicators on the outline\r\n  var visual = svgCreate('rect');\r\n  svgAttr(visual, {\r\n    x: origin,\r\n    y: origin,\r\n    width: HANDLE_SIZE,\r\n    height: HANDLE_SIZE\r\n  });\r\n  svgClasses(visual).add(CLS_RESIZER + '-visual');\r\n\r\n  svgAppend(group, visual);\r\n\r\n  var hit = svgCreate('rect');\r\n  svgAttr(hit, {\r\n    x: origin,\r\n    y: origin,\r\n    width: HANDLE_HIT_SIZE,\r\n    height: HANDLE_HIT_SIZE\r\n  });\r\n  svgClasses(hit).add(CLS_RESIZER + '-hit');\r\n\r\n  svgAppend(group, hit);\r\n\r\n  transform(group, x, y, rotation);\r\n\r\n  return group;\r\n};\r\n\r\nResizeHandles.prototype.createResizer = function(element, direction) {\r\n  var resizer;\r\n\r\n  var trbl = asTRBL(element);\r\n\r\n  if (direction === 'nw') {\r\n    resizer = this._createResizer(element, trbl.left, trbl.top, 0, direction);\r\n  } else if (direction === 'ne') {\r\n    resizer = this._createResizer(element, trbl.right, trbl.top, 90, direction);\r\n  } else if (direction === 'se') {\r\n    resizer = this._createResizer(element, trbl.right, trbl.bottom, 180, direction);\r\n  } else {\r\n    resizer = this._createResizer(element, trbl.left, trbl.bottom, 270, direction);\r\n  }\r\n\r\n  this.makeDraggable(element, resizer, direction);\r\n};\r\n\r\n// resize handles implementation ///////////////////////////////\r\n\r\n/**\r\n * Add resizers for a given element.\r\n *\r\n * @param {djs.model.Shape} shape\r\n */\r\nResizeHandles.prototype.addResizer = function(shape) {\r\n  var resize = this._resize;\r\n\r\n  if (!resize.canResize({ shape: shape })) {\r\n    return;\r\n  }\r\n\r\n  this.createResizer(shape, 'nw');\r\n  this.createResizer(shape, 'ne');\r\n  this.createResizer(shape, 'se');\r\n  this.createResizer(shape, 'sw');\r\n};\r\n\r\n/**\r\n * Remove all resizers\r\n */\r\nResizeHandles.prototype.removeResizers = function() {\r\n  var resizersParent = this._getResizersParent();\r\n\r\n  svgClear(resizersParent);\r\n};\r\n\r\nResizeHandles.prototype._getResizersParent = function() {\r\n  return this._canvas.getLayer('resizers');\r\n};\r\n\r\nResizeHandles.$inject = [ 'eventBus', 'canvas', 'selection', 'resize' ];\r\n\r\nmodule.exports = ResizeHandles;\r\n","'use strict';\r\n\r\nvar MARKER_RESIZING = 'djs-resizing',\r\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nvar svgAttr = require(473),\r\n    svgRemove = require(480);\r\n\r\nvar svgClasses = require(474);\r\n\r\n\r\n/**\r\n * Provides previews for resizing shapes when resizing.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n */\r\nfunction ResizePreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\r\n\r\n  // add and update previews\r\n  eventBus.on('resize.move', LOW_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        bounds = context.newBounds,\r\n        frame = context.frame;\r\n\r\n    if (!frame) {\r\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getDefaultLayer());\r\n\r\n      canvas.addMarker(shape, MARKER_RESIZING);\r\n    }\r\n\r\n    if (bounds.width > 5) {\r\n      svgAttr(frame, { x: bounds.x, width: bounds.width });\r\n    }\r\n\r\n    if (bounds.height > 5) {\r\n      svgAttr(frame, { y: bounds.y, height: bounds.height });\r\n    }\r\n\r\n    if (context.canExecute) {\r\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\r\n    } else {\r\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\r\n    }\r\n\r\n  });\r\n\r\n  // remove previews\r\n  eventBus.on('resize.cleanup', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        frame = context.frame;\r\n\r\n    if (frame) {\r\n      svgRemove(context.frame);\r\n    }\r\n\r\n    canvas.removeMarker(shape, MARKER_RESIZING);\r\n  });\r\n}\r\n\r\nResizePreview.$inject = [ 'eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport'];\r\n\r\nmodule.exports = ResizePreview;\r\n","'use strict';\r\n\r\nvar filter = require(301);\r\n\r\nvar max = Math.max,\r\n    min = Math.min;\r\n\r\nvar DEFAULT_CHILD_BOX_PADDING = 20;\r\n\r\nvar getBBox = require(266).getBBox;\r\n\r\n\r\nvar asTRBL = require(252).asTRBL,\r\n    asBounds = require(252).asBounds;\r\n\r\nfunction isNumber(a) {\r\n  return typeof a === 'number';\r\n}\r\n\r\n/**\r\n * Substract a TRBL from another\r\n *\r\n * @param  {TRBL} trblA\r\n * @param  {TRBL} trblB\r\n *\r\n * @return {TRBL}\r\n */\r\nmodule.exports.substractTRBL = function(trblA, trblB) {\r\n  return {\r\n    top: trblA.top - trblB.top,\r\n    right: trblA.right - trblB.right,\r\n    bottom: trblA.bottom - trblB.bottom,\r\n    left: trblA.left - trblB.left\r\n  };\r\n};\r\n\r\n/**\r\n * Resize the given bounds by the specified delta from a given anchor point.\r\n *\r\n * @param {Bounds} bounds the bounding box that should be resized\r\n * @param {String} direction in which the element is resized (nw, ne, se, sw)\r\n * @param {Point} delta of the resize operation\r\n *\r\n * @return {Bounds} resized bounding box\r\n */\r\nmodule.exports.resizeBounds = function(bounds, direction, delta) {\r\n\r\n  var dx = delta.x,\r\n      dy = delta.y;\r\n\r\n  switch (direction) {\r\n\r\n  case 'nw':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y + dy,\r\n      width: bounds.width - dx,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 'sw':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y,\r\n      width: bounds.width - dx,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  case 'ne':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y + dy,\r\n      width: bounds.width + dx,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 'se':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width + dx,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  default:\r\n    throw new Error('unrecognized direction: ' + direction);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Resize the given bounds by applying the passed\r\n * { top, right, bottom, left } delta.\r\n *\r\n * @param {Bounds} bounds\r\n * @param {TRBL} trblResize\r\n *\r\n * @return {Bounds}\r\n */\r\nmodule.exports.resizeTRBL = function(bounds, resize) {\r\n  return {\r\n    x: bounds.x + (resize.left || 0),\r\n    y: bounds.y + (resize.top || 0),\r\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\r\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\r\n  };\r\n};\r\n\r\n\r\nmodule.exports.reattachPoint = function(bounds, newBounds, point) {\r\n\r\n  var sx = bounds.width / newBounds.width,\r\n      sy = bounds.height / newBounds.height;\r\n\r\n  return {\r\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\r\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\r\n  };\r\n};\r\n\r\n\r\nfunction applyConstraints(attr, trbl, resizeConstraints) {\r\n\r\n  var value = trbl[attr],\r\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\r\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\r\n\r\n  if (isNumber(minValue)) {\r\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\r\n  }\r\n\r\n  if (isNumber(maxValue)) {\r\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nmodule.exports.ensureConstraints = function(currentBounds, resizeConstraints) {\r\n\r\n  if (!resizeConstraints) {\r\n    return currentBounds;\r\n  }\r\n\r\n  var currentTrbl = asTRBL(currentBounds);\r\n\r\n  return asBounds({\r\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\r\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\r\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\r\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\r\n  });\r\n};\r\n\r\n\r\nmodule.exports.getMinResizeBounds = function(direction, currentBounds, minDimensions, childrenBounds) {\r\n\r\n  var currentBox = asTRBL(currentBounds);\r\n\r\n  var minBox = {\r\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\r\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\r\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\r\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\r\n  };\r\n\r\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\r\n\r\n  var combinedBox = {\r\n    top: min(minBox.top, childrenBox.top),\r\n    left: min(minBox.left, childrenBox.left),\r\n    bottom: max(minBox.bottom, childrenBox.bottom),\r\n    right: max(minBox.right, childrenBox.right)\r\n  };\r\n\r\n  return asBounds(combinedBox);\r\n};\r\n\r\nfunction asPadding(mayBePadding, defaultValue) {\r\n  if (typeof mayBePadding !== 'undefined') {\r\n    return mayBePadding;\r\n  } else {\r\n    return DEFAULT_CHILD_BOX_PADDING;\r\n  }\r\n}\r\n\r\nfunction addPadding(bbox, padding) {\r\n  var left, right, top, bottom;\r\n\r\n  if (typeof padding === 'object') {\r\n    left = asPadding(padding.left);\r\n    right = asPadding(padding.right);\r\n    top = asPadding(padding.top);\r\n    bottom = asPadding(padding.bottom);\r\n  } else {\r\n    left = right = top = bottom = asPadding(padding);\r\n  }\r\n\r\n  return {\r\n    x: bbox.x - left,\r\n    y: bbox.y - top,\r\n    width: bbox.width + left + right,\r\n    height: bbox.height + top + bottom\r\n  };\r\n}\r\n\r\nmodule.exports.addPadding = addPadding;\r\n\r\n\r\n/**\r\n * Is the given element part of the resize\r\n * targets min boundary box?\r\n *\r\n * This is the default implementation which excludes\r\n * connections and labels.\r\n *\r\n * @param {djs.model.Base} element\r\n */\r\nfunction isBBoxChild(element) {\r\n\r\n  // exclude connections\r\n  if (element.waypoints) {\r\n    return false;\r\n  }\r\n\r\n  // exclude labels\r\n  if (element.type === 'label') {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Return children bounding computed from a shapes children\r\n * or a list of prefiltered children.\r\n *\r\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\r\n * @param  {Number|Object} padding\r\n *\r\n * @return {Bounds}\r\n */\r\nfunction computeChildrenBBox(shapeOrChildren, padding) {\r\n\r\n  var elements;\r\n\r\n  // compute based on shape\r\n  if (shapeOrChildren.length === undefined) {\r\n    // grab all the children that are part of the\r\n    // parents children box\r\n    elements = filter(shapeOrChildren.children, isBBoxChild);\r\n\r\n  } else {\r\n    elements = shapeOrChildren;\r\n  }\r\n\r\n  if (elements.length) {\r\n    return addPadding(getBBox(elements), padding);\r\n  }\r\n}\r\n\r\nmodule.exports.computeChildrenBBox = computeChildrenBBox;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(227),\r\n    require(162),\r\n    require(217)\r\n  ],\r\n  __init__: [ 'resize', 'resizePreview', 'resizeHandles' ],\r\n  resize: [ 'type', require(220) ],\r\n  resizePreview: [ 'type', require(222) ],\r\n  resizeHandles: [ 'type', require(221) ]\r\n};\r\n","\r\n'use strict';\r\n\r\nvar inherits = require(289);\r\n\r\nvar CommandInterceptor = require(119);\r\n\r\n/**\r\n * A basic provider that may be extended to implement modeling rules.\r\n *\r\n * Extensions should implement the init method to actually add their custom\r\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction RuleProvider(eventBus) {\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.init();\r\n}\r\n\r\nRuleProvider.$inject = [ 'eventBus' ];\r\n\r\ninherits(RuleProvider, CommandInterceptor);\r\n\r\nmodule.exports = RuleProvider;\r\n\r\n\r\n/**\r\n * Adds a modeling rule for the given action, implemented through\r\n * a callback function.\r\n *\r\n * The function will receive the modeling specific action context\r\n * to perform its check. It must return `false` to disallow the\r\n * action from happening or `true` to allow the action.\r\n *\r\n * A rule provider may pass over the evaluation to lower priority\r\n * rules by returning return nothing (or <code>undefined</code>).\r\n *\r\n * @example\r\n *\r\n * ResizableRules.prototype.init = function() {\r\n *\r\n *   //**\r\n *    * Return `true`, `false` or nothing to denote\r\n *    * _allowed_, _not allowed_ and _continue evaluating_.\r\n *    *//\r\n *   this.addRule('shape.resize', function(context) {\r\n *\r\n *     var shape = context.shape;\r\n *\r\n *     if (!context.newBounds) {\r\n *       // check general resizability\r\n *       if (!shape.resizable) {\r\n *         return false;\r\n *       }\r\n *\r\n *       // not returning anything (read: undefined)\r\n *       // will continue the evaluation of other rules\r\n *       // (with lower priority)\r\n *       return;\r\n *     } else {\r\n *       // element must have minimum size of 10*10 points\r\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\r\n *     }\r\n *   });\r\n * };\r\n *\r\n * @param {String|Array<String>} actions the identifier for the modeling action to check\r\n * @param {Number} [priority] the priority at which this rule is being applied\r\n * @param {Function} fn the callback function that performs the actual check\r\n */\r\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\r\n\r\n  var self = this;\r\n\r\n  if (typeof actions === 'string') {\r\n    actions = [ actions ];\r\n  }\r\n\r\n  actions.forEach(function(action) {\r\n\r\n    self.canExecute(action, priority, function(context, action, event) {\r\n      return fn(context);\r\n    }, true);\r\n  });\r\n};\r\n\r\n/**\r\n * Implement this method to add new rules during provider initialization.\r\n */\r\nRuleProvider.prototype.init = function() {};","'use strict';\r\n\r\n/**\r\n * A service that provides rules for certain diagram actions.\r\n *\r\n * The default implementation will hook into the {@link CommandStack}\r\n * to perform the actual rule evaluation. Make sure to provide the\r\n * `commandStack` service with this module if you plan to use it.\r\n *\r\n * Together with this implementation you may use the {@link RuleProvider}\r\n * to implement your own rule checkers.\r\n *\r\n * This module is ment to be easily replaced, thus the tiny foot print.\r\n *\r\n * @param {Injector} injector\r\n */\r\nfunction Rules(injector) {\r\n  this._commandStack = injector.get('commandStack', false);\r\n}\r\n\r\nRules.$inject = [ 'injector' ];\r\n\r\nmodule.exports = Rules;\r\n\r\n\r\n/**\r\n * Returns whether or not a given modeling action can be executed\r\n * in the specified context.\r\n *\r\n * This implementation will respond with allow unless anyone\r\n * objects.\r\n *\r\n * @param {String} action the action to be checked\r\n * @param {Object} [context] the context to check the action in\r\n *\r\n * @return {Boolean} returns true, false or null depending on whether the\r\n *                   operation is allowed, not allowed or should be ignored.\r\n */\r\nRules.prototype.allowed = function(action, context) {\r\n  var allowed = true;\r\n\r\n  var commandStack = this._commandStack;\r\n\r\n  if (commandStack) {\r\n    allowed = commandStack.canExecute(action, context);\r\n  }\r\n\r\n  // map undefined to true, i.e. no rules\r\n  return allowed === undefined ? true : allowed;\r\n};","module.exports = {\r\n  __init__: [ 'rules' ],\r\n  rules: [ 'type', require(226) ]\r\n};\r\n","'use strict';\r\n\r\nvar domClear = require(446),\r\n    domDelegate = require(448),\r\n    domQuery = require(452),\r\n    domClasses = require(445),\r\n    domAttr = require(444),\r\n    domify = require(449);\r\n\r\nvar getBoundingBox = require(266).getBBox;\r\n\r\n\r\n/**\r\n * Provides searching infrastructure\r\n */\r\nfunction SearchPad(canvas, eventBus, overlays, selection) {\r\n  this._open = false;\r\n  this._results = [];\r\n  this._eventMaps = [];\r\n\r\n  this._canvas = canvas;\r\n  this._eventBus = eventBus;\r\n  this._overlays = overlays;\r\n  this._selection = selection;\r\n\r\n  // setup elements\r\n  this._container = domify(SearchPad.BOX_HTML);\r\n  this._searchInput = domQuery(SearchPad.INPUT_SELECTOR, this._container);\r\n  this._resultsContainer = domQuery(SearchPad.RESULTS_CONTAINER_SELECTOR, this._container);\r\n\r\n  // attach search pad\r\n  this._canvas.getContainer().appendChild(this._container);\r\n\r\n  // cleanup on destroy\r\n  eventBus.on([ 'canvas.destroy', 'diagram.destroy' ], this.close, this);\r\n}\r\n\r\n\r\nSearchPad.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'overlays',\r\n  'selection'\r\n];\r\n\r\n\r\n/**\r\n * Binds and keeps track of all event listereners\r\n */\r\nSearchPad.prototype._bindEvents = function() {\r\n  var self = this;\r\n\r\n  function listen(el, selector, type, fn) {\r\n    self._eventMaps.push({\r\n      el: el,\r\n      type: type,\r\n      listener: domDelegate.bind(el, selector, type, fn)\r\n    });\r\n  }\r\n\r\n  // close search on clicking anywhere outside\r\n  listen(document, 'html', 'click', function(e) {\r\n    self.close();\r\n  }, true);\r\n\r\n  // stop event from propagating and closing search\r\n  // focus on input\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'click', function(e) {\r\n    e.stopPropagation();\r\n    e.delegateTarget.focus();\r\n  });\r\n\r\n  // preselect result on hover\r\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'mouseover', function(e) {\r\n    e.stopPropagation();\r\n    self._scrollToNode(e.delegateTarget);\r\n    self._preselect(e.delegateTarget);\r\n  });\r\n\r\n  // selects desired result on mouse click\r\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'click', function(e) {\r\n    e.stopPropagation();\r\n    self._select(e.delegateTarget);\r\n  });\r\n\r\n  // prevent cursor in input from going left and right when using up/down to\r\n  // navigate results\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keydown', function(e) {\r\n    // up\r\n    if (e.keyCode === 38) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    // down\r\n    if (e.keyCode === 40) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n\r\n  // handle keyboard input\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keyup', function(e) {\r\n    // escape\r\n    if (e.keyCode === 27) {\r\n      return self.close();\r\n    }\r\n\r\n    // enter\r\n    if (e.keyCode === 13) {\r\n      var selected = self._getCurrentResult();\r\n\r\n      return selected ? self._select(selected) : self.close();\r\n    }\r\n\r\n    // up\r\n    if (e.keyCode === 38) {\r\n      return self._scrollToDirection(true);\r\n    }\r\n\r\n    // down\r\n    if (e.keyCode === 40) {\r\n      return self._scrollToDirection();\r\n    }\r\n\r\n    // left && right\r\n    // do not search while navigating text input\r\n    if (e.keyCode === 37 || e.keyCode === 39) {\r\n      return;\r\n    }\r\n\r\n    // anything else\r\n    self._search(e.delegateTarget.value);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Unbinds all previously established listeners\r\n */\r\nSearchPad.prototype._unbindEvents = function() {\r\n  this._eventMaps.forEach(function(m) {\r\n    domDelegate.unbind(m.el, m.type, m.listener);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Performs a search for the given pattern.\r\n *\r\n * @param  {String} pattern\r\n */\r\nSearchPad.prototype._search = function(pattern) {\r\n  var self = this;\r\n\r\n  this._clearResults();\r\n\r\n  // do not search on empty query\r\n  if (!pattern || pattern === '') {\r\n    return;\r\n  }\r\n\r\n  var searchResults = this._searchProvider.find(pattern);\r\n\r\n  if (!searchResults.length) {\r\n    return;\r\n  }\r\n\r\n  // append new results\r\n  searchResults.forEach(function(result) {\r\n    var id = result.element.id;\r\n    var node = self._createResultNode(result, id);\r\n    self._results[id] = {\r\n      element: result.element,\r\n      node: node\r\n    };\r\n  });\r\n\r\n  // preselect first result\r\n  var node = domQuery(SearchPad.RESULT_SELECTOR, this._resultsContainer);\r\n  this._scrollToNode(node);\r\n  this._preselect(node);\r\n};\r\n\r\n\r\n/**\r\n * Navigate to the previous/next result. Defaults to next result.\r\n * @param  {Boolean} previous\r\n */\r\nSearchPad.prototype._scrollToDirection = function(previous) {\r\n  var selected = this._getCurrentResult();\r\n  if (!selected) {\r\n    return;\r\n  }\r\n\r\n  var node = previous ? selected.previousElementSibling : selected.nextElementSibling;\r\n  if (node) {\r\n    this._scrollToNode(node);\r\n    this._preselect(node);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Scroll to the node if it is not visible.\r\n *\r\n * @param  {Element} node\r\n */\r\nSearchPad.prototype._scrollToNode = function(node) {\r\n  if (!node || node === this._getCurrentResult()) {\r\n    return;\r\n  }\r\n\r\n  var nodeOffset = node.offsetTop;\r\n  var containerScroll = this._resultsContainer.scrollTop;\r\n\r\n  var bottomScroll = nodeOffset - this._resultsContainer.clientHeight + node.clientHeight;\r\n\r\n  if (nodeOffset < containerScroll) {\r\n    this._resultsContainer.scrollTop = nodeOffset;\r\n  } else if (containerScroll < bottomScroll) {\r\n    this._resultsContainer.scrollTop = bottomScroll;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Clears all results data.\r\n */\r\nSearchPad.prototype._clearResults = function() {\r\n  domClear(this._resultsContainer);\r\n\r\n  this._results = [];\r\n\r\n  this._resetOverlay();\r\n\r\n  this._eventBus.fire('searchPad.cleared');\r\n};\r\n\r\n\r\n/**\r\n * Get currently selected result.\r\n *\r\n * @return {Element}\r\n */\r\nSearchPad.prototype._getCurrentResult = function() {\r\n  return domQuery(SearchPad.RESULT_SELECTED_SELECTOR, this._resultsContainer);\r\n};\r\n\r\n\r\n/**\r\n * Create result DOM element within results container\r\n * that corresponds to a search result.\r\n *\r\n * 'result' : one of the elements returned by SearchProvider\r\n * 'id' : id attribute value to assign to the new DOM node\r\n * return : created DOM element\r\n *\r\n * @param  {SearchResult} result\r\n * @param  {String} id\r\n * @return {Element}\r\n */\r\nSearchPad.prototype._createResultNode = function(result, id) {\r\n  var node = domify(SearchPad.RESULT_HTML);\r\n\r\n  // create only if available\r\n  if (result.primaryTokens.length > 0) {\r\n    createInnerTextNode(node, result.primaryTokens, SearchPad.RESULT_PRIMARY_HTML);\r\n  }\r\n\r\n  // secondary tokens (represent element ID) are allways available\r\n  createInnerTextNode(node, result.secondaryTokens, SearchPad.RESULT_SECONDARY_HTML);\r\n\r\n  domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE, id);\r\n\r\n  this._resultsContainer.appendChild(node);\r\n\r\n  return node;\r\n};\r\n\r\n\r\n/**\r\n * Register search element provider.\r\n *\r\n * SearchProvider.find - provides search function over own elements\r\n *  (pattern) => [{ text: <String>, element: <Element>}, ...]\r\n *\r\n * @param  {SearchProvider} provider\r\n */\r\nSearchPad.prototype.registerProvider = function(provider) {\r\n  this._searchProvider = provider;\r\n};\r\n\r\n\r\n/**\r\n * Open search pad.\r\n */\r\nSearchPad.prototype.open = function() {\r\n  if (!this._searchProvider) {\r\n    throw new Error('no search provider registered');\r\n  }\r\n\r\n  if (this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._bindEvents();\r\n\r\n  this._open = true;\r\n\r\n  domClasses(this._container).add('open');\r\n\r\n  this._searchInput.focus();\r\n\r\n  this._eventBus.fire('searchPad.opened');\r\n};\r\n\r\n\r\n/**\r\n * Close search pad.\r\n */\r\nSearchPad.prototype.close = function() {\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._unbindEvents();\r\n\r\n  this._open = false;\r\n\r\n  domClasses(this._container).remove('open');\r\n\r\n  this._clearResults();\r\n\r\n  this._searchInput.value = '';\r\n  this._searchInput.blur();\r\n\r\n  this._resetOverlay();\r\n\r\n  this._eventBus.fire('searchPad.closed');\r\n};\r\n\r\n\r\n/**\r\n * Toggles search pad on/off.\r\n */\r\nSearchPad.prototype.toggle = function() {\r\n  this.isOpen() ? this.close() : this.open();\r\n};\r\n\r\n\r\n/**\r\n * Report state of search pad.\r\n */\r\nSearchPad.prototype.isOpen = function() {\r\n  return this._open;\r\n};\r\n\r\n\r\n/**\r\n * Preselect result entry.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._preselect = function(node) {\r\n  var selectedNode = this._getCurrentResult();\r\n\r\n  // already selected\r\n  if (node === selectedNode) {\r\n    return;\r\n  }\r\n\r\n  // removing preselection from current node\r\n  if (selectedNode) {\r\n    domClasses(selectedNode).remove(SearchPad.RESULT_SELECTED_CLASS);\r\n  }\r\n\r\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\r\n  var element = this._results[id].element;\r\n\r\n  domClasses(node).add(SearchPad.RESULT_SELECTED_CLASS);\r\n\r\n  this._resetOverlay(element);\r\n\r\n  this._centerViewbox(element);\r\n\r\n  this._selection.select(element);\r\n\r\n  this._eventBus.fire('searchPad.preselected', element);\r\n};\r\n\r\n\r\n/**\r\n * Select result node.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._select = function(node) {\r\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\r\n  var element = this._results[id].element;\r\n\r\n  this.close();\r\n\r\n  this._resetOverlay();\r\n\r\n  this._centerViewbox(element);\r\n\r\n  this._selection.select(element);\r\n\r\n  this._eventBus.fire('searchPad.selected', element);\r\n};\r\n\r\n\r\n/**\r\n * Center viewbox on the element middle point.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._centerViewbox = function(element) {\r\n  var viewbox = this._canvas.viewbox();\r\n\r\n  var box = getBoundingBox(element);\r\n\r\n  var newViewbox = {\r\n    x: (box.x + box.width/2) - viewbox.outer.width/2,\r\n    y: (box.y + box.height/2) - viewbox.outer.height/2,\r\n    width: viewbox.outer.width,\r\n    height: viewbox.outer.height\r\n  };\r\n\r\n  this._canvas.viewbox(newViewbox);\r\n\r\n  this._canvas.zoom(viewbox.scale);\r\n};\r\n\r\n\r\n/**\r\n * Reset overlay removes and, optionally, set\r\n * overlay to a new element.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._resetOverlay = function(element) {\r\n  if (this._overlayId) {\r\n    this._overlays.remove(this._overlayId);\r\n  }\r\n\r\n  if (element) {\r\n    var box = getBoundingBox(element);\r\n    var overlay = constructOverlay(box);\r\n    this._overlayId = this._overlays.add(element, overlay);\r\n  }\r\n};\r\n\r\n\r\nmodule.exports = SearchPad;\r\n\r\n/**\r\n * Construct overlay object for the given bounding box.\r\n *\r\n * @param  {BoundingBox} box\r\n * @return {Object}\r\n */\r\nfunction constructOverlay(box) {\r\n\r\n  var offset = 6;\r\n  var w = box.width + offset * 2;\r\n  var h = box.height + offset * 2;\r\n\r\n  var styles = [\r\n    'width: '+ w +'px',\r\n    'height: '+ h + 'px'\r\n  ].join('; ');\r\n\r\n  return {\r\n    position: {\r\n      bottom: h - offset,\r\n      right: w - offset\r\n    },\r\n    show: true,\r\n    html: '<div style=\"' + styles + '\" class=\"' + SearchPad.OVERLAY_CLASS + '\"></div>'\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Creates and appends child node from result tokens and HTML template.\r\n *\r\n * @param  {Element} node\r\n * @param  {Array<Object>} tokens\r\n * @param  {String} template\r\n */\r\nfunction createInnerTextNode(parentNode, tokens, template) {\r\n  var text = createHtmlText(tokens);\r\n  var childNode = domify(template);\r\n  childNode.innerHTML = text;\r\n  parentNode.appendChild(childNode);\r\n}\r\n\r\n/**\r\n * Create internal HTML markup from result tokens.\r\n * Caters for highlighting pattern matched tokens.\r\n *\r\n * @param  {Array<Object>} tokens\r\n * @return {String}\r\n */\r\nfunction createHtmlText(tokens) {\r\n  var htmlText = '';\r\n\r\n  tokens.forEach(function(t) {\r\n    if (t.matched) {\r\n      htmlText += '<strong class=\"' + SearchPad.RESULT_HIGHLIGHT_CLASS + '\">' + t.matched + '</strong>';\r\n    } else {\r\n      htmlText += t.normal;\r\n    }\r\n  });\r\n\r\n  return htmlText !== '' ? htmlText : null;\r\n}\r\n\r\n\r\n/**\r\n * CONSTANTS\r\n */\r\nSearchPad.CONTAINER_SELECTOR = '.djs-search-container';\r\nSearchPad.INPUT_SELECTOR = '.djs-search-input input';\r\nSearchPad.RESULTS_CONTAINER_SELECTOR = '.djs-search-results';\r\nSearchPad.RESULT_SELECTOR = '.djs-search-result';\r\nSearchPad.RESULT_SELECTED_CLASS = 'djs-search-result-selected';\r\nSearchPad.RESULT_SELECTED_SELECTOR = '.' + SearchPad.RESULT_SELECTED_CLASS;\r\nSearchPad.RESULT_ID_ATTRIBUTE = 'data-result-id';\r\nSearchPad.RESULT_HIGHLIGHT_CLASS = 'djs-search-highlight';\r\nSearchPad.OVERLAY_CLASS = 'djs-search-overlay';\r\n\r\nSearchPad.BOX_HTML =\r\n  '<div class=\"djs-search-container djs-draggable djs-scrollable\">' +\r\n    '<div class=\"djs-search-input\">' +\r\n      '<input type=\"text\"/>' +\r\n    '</div>' +\r\n    '<div class=\"djs-search-results\"></div>' +\r\n  '</div>';\r\n\r\nSearchPad.RESULT_HTML =\r\n  '<div class=\"djs-search-result\"></div>';\r\n\r\nSearchPad.RESULT_PRIMARY_HTML =\r\n  '<div class=\"djs-search-result-primary\"></div>';\r\n\r\nSearchPad.RESULT_SECONDARY_HTML =\r\n  '<p class=\"djs-search-result-secondary\"></p>';\r\n","module.exports = {\r\n  __depends__: [\r\n    require(211),\r\n    require(233)\r\n  ],\r\n  searchPad: [ 'type', require(228) ]\r\n};\r\n","'use strict';\r\n\r\nvar isArray = require(422),\r\n    forEach = require(303);\r\n\r\n\r\n/**\r\n * A service that offers the current selection in a diagram.\r\n * Offers the api to control the selection, too.\r\n *\r\n * @class\r\n *\r\n * @param {EventBus} eventBus the event bus\r\n */\r\nfunction Selection(eventBus) {\r\n\r\n  this._eventBus = eventBus;\r\n\r\n  this._selectedElements = [];\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\r\n    var element = e.element;\r\n    self.deselect(element);\r\n  });\r\n\r\n  eventBus.on([ 'diagram.clear' ], function(e) {\r\n    self.select(null);\r\n  });\r\n}\r\n\r\nSelection.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = Selection;\r\n\r\n\r\nSelection.prototype.deselect = function(element) {\r\n  var selectedElements = this._selectedElements;\r\n\r\n  var idx = selectedElements.indexOf(element);\r\n\r\n  if (idx !== -1) {\r\n    var oldSelection = selectedElements.slice();\r\n\r\n    selectedElements.splice(idx, 1);\r\n\r\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\r\n  }\r\n};\r\n\r\n\r\nSelection.prototype.get = function() {\r\n  return this._selectedElements;\r\n};\r\n\r\nSelection.prototype.isSelected = function(element) {\r\n  return this._selectedElements.indexOf(element) !== -1;\r\n};\r\n\r\n\r\n/**\r\n * This method selects one or more elements on the diagram.\r\n *\r\n * By passing an additional add parameter you can decide whether or not the element(s)\r\n * should be added to the already existing selection or not.\r\n *\r\n * @method Selection#select\r\n *\r\n * @param  {Object|Object[]} elements element or array of elements to be selected\r\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\r\n */\r\nSelection.prototype.select = function(elements, add) {\r\n  var selectedElements = this._selectedElements,\r\n      oldSelection = selectedElements.slice();\r\n\r\n  if (!isArray(elements)) {\r\n    elements = elements ? [ elements ] : [];\r\n  }\r\n\r\n  // selection may be cleared by passing an empty array or null\r\n  // to the method\r\n  if (add) {\r\n    forEach(elements, function(element) {\r\n      if (selectedElements.indexOf(element) !== -1) {\r\n        // already selected\r\n        return;\r\n      } else {\r\n        selectedElements.push(element);\r\n      }\r\n    });\r\n  } else {\r\n    this._selectedElements = selectedElements = elements.slice();\r\n  }\r\n\r\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\r\n};\r\n","'use strict';\r\n\r\nvar hasPrimaryModifier = require(274).hasPrimaryModifier;\r\n\r\nvar find = require(302);\r\n\r\n\r\nfunction SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\r\n\r\n  eventBus.on('create.end', 500, function(e) {\r\n\r\n    // select the created shape after a\r\n    // successful create operation\r\n    if (e.context.canExecute) {\r\n      selection.select(e.context.shape);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connect.end', 500, function(e) {\r\n\r\n    // select the connect end target\r\n    // after a connect operation\r\n    if (e.context.canExecute && e.context.target) {\r\n      selection.select(e.context.target);\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.move.end', 500, function(e) {\r\n    var previousSelection = e.previousSelection || [];\r\n\r\n    var shape = elementRegistry.get(e.context.shape.id);\r\n\r\n    // make sure at least the main moved element is being\r\n    // selected after a move operation\r\n    var inSelection = find(previousSelection, function(selectedShape) {\r\n      return shape.id === selectedShape.id;\r\n    });\r\n\r\n    if (!inSelection) {\r\n      selection.select(shape);\r\n    }\r\n  });\r\n\r\n  // Shift + click selection\r\n  eventBus.on('element.click', function(event) {\r\n\r\n    var element = event.element;\r\n\r\n    // do not select the root element\r\n    // or connections\r\n    if (element === canvas.getRootElement()) {\r\n      element = null;\r\n    }\r\n\r\n    var isSelected = selection.isSelected(element),\r\n        isMultiSelect = selection.get().length > 1;\r\n\r\n    // mouse-event: SELECTION_KEY\r\n    var add = hasPrimaryModifier(event);\r\n\r\n    // select OR deselect element in multi selection\r\n    if (isSelected && isMultiSelect) {\r\n      if (add) {\r\n        return selection.deselect(element);\r\n      } else {\r\n        return selection.select(element);\r\n      }\r\n    } else\r\n    if (!isSelected) {\r\n      selection.select(element, add);\r\n    } else {\r\n      selection.deselect(element);\r\n    }\r\n  });\r\n}\r\n\r\nSelectionBehavior.$inject = [ 'eventBus', 'selection', 'canvas', 'elementRegistry' ];\r\nmodule.exports = SelectionBehavior;\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar MARKER_HOVER = 'hover',\r\n    MARKER_SELECTED = 'selected';\r\n\r\n\r\n/**\r\n * A plugin that adds a visible selection UI to shapes and connections\r\n * by appending the <code>hover</code> and <code>selected</code> classes to them.\r\n *\r\n * @class\r\n *\r\n * Makes elements selectable, too.\r\n *\r\n * @param {EventBus} events\r\n * @param {SelectionService} selection\r\n * @param {Canvas} canvas\r\n */\r\nfunction SelectionVisuals(events, canvas, selection, styles) {\r\n\r\n  this._multiSelectionBox = null;\r\n\r\n  function addMarker(e, cls) {\r\n    canvas.addMarker(e, cls);\r\n  }\r\n\r\n  function removeMarker(e, cls) {\r\n    canvas.removeMarker(e, cls);\r\n  }\r\n\r\n  events.on('element.hover', function(event) {\r\n    addMarker(event.element, MARKER_HOVER);\r\n  });\r\n\r\n  events.on('element.out', function(event) {\r\n    removeMarker(event.element, MARKER_HOVER);\r\n  });\r\n\r\n  events.on('selection.changed', function(event) {\r\n\r\n    function deselect(s) {\r\n      removeMarker(s, MARKER_SELECTED);\r\n    }\r\n\r\n    function select(s) {\r\n      addMarker(s, MARKER_SELECTED);\r\n    }\r\n\r\n    var oldSelection = event.oldSelection,\r\n        newSelection = event.newSelection;\r\n\r\n    forEach(oldSelection, function(e) {\r\n      if (newSelection.indexOf(e) === -1) {\r\n        deselect(e);\r\n      }\r\n    });\r\n\r\n    forEach(newSelection, function(e) {\r\n      if (oldSelection.indexOf(e) === -1) {\r\n        select(e);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nSelectionVisuals.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection',\r\n  'styles'\r\n];\r\n\r\nmodule.exports = SelectionVisuals;\r\n","module.exports = {\r\n  __init__: [ 'selectionVisuals', 'selectionBehavior' ],\r\n  __depends__: [\r\n    require(170),\r\n    require(209)\r\n  ],\r\n  selection: [ 'type', require(230) ],\r\n  selectionVisuals: [ 'type', require(232) ],\r\n  selectionBehavior: [ 'type', require(231) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar snapTo = require(235).snapTo;\r\n\r\n\r\n/**\r\n * A snap context, containing the (possibly incomplete)\r\n * mappings of drop targets (to identify the snapping)\r\n * to computed snap points.\r\n */\r\nfunction SnapContext() {\r\n\r\n  /**\r\n   * Map<String, SnapPoints> mapping drop targets to\r\n   * a list of possible snappings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._targets = {};\r\n\r\n  /**\r\n   * Map<String, Point> initial positioning of element\r\n   * regarding various snap directions.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._snapOrigins = {};\r\n\r\n  /**\r\n   * List of snap locations\r\n   *\r\n   * @type {Array<String>}\r\n   */\r\n  this._snapLocations = [];\r\n\r\n  /**\r\n   * Map<String, Array<Point>> of default snapping locations\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._defaultSnaps = {};\r\n}\r\n\r\n\r\nSnapContext.prototype.getSnapOrigin = function(snapLocation) {\r\n  return this._snapOrigins[snapLocation];\r\n};\r\n\r\n\r\nSnapContext.prototype.setSnapOrigin = function(snapLocation, initialValue) {\r\n  this._snapOrigins[snapLocation] = initialValue;\r\n\r\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\r\n    this._snapLocations.push(snapLocation);\r\n  }\r\n};\r\n\r\n\r\nSnapContext.prototype.addDefaultSnap = function(type, point) {\r\n\r\n  var snapValues = this._defaultSnaps[type];\r\n\r\n  if (!snapValues) {\r\n    snapValues = this._defaultSnaps[type] = [];\r\n  }\r\n\r\n  snapValues.push(point);\r\n};\r\n\r\n/**\r\n * Return a number of initialized snaps, i.e. snap locations such as\r\n * top-left, mid, bottom-right and so forth.\r\n *\r\n * @return {Array<String>} snapLocations\r\n */\r\nSnapContext.prototype.getSnapLocations = function() {\r\n  return this._snapLocations;\r\n};\r\n\r\n/**\r\n * Set the snap locations for this context.\r\n *\r\n * The order of locations determines precedence.\r\n *\r\n * @param {Array<String>} snapLocations\r\n */\r\nSnapContext.prototype.setSnapLocations = function(snapLocations) {\r\n  this._snapLocations = snapLocations;\r\n};\r\n\r\n/**\r\n * Get snap points for a given target\r\n *\r\n * @param {Element|String} target\r\n */\r\nSnapContext.prototype.pointsForTarget = function(target) {\r\n\r\n  var targetId = target.id || target;\r\n\r\n  var snapPoints = this._targets[targetId];\r\n\r\n  if (!snapPoints) {\r\n    snapPoints = this._targets[targetId] = new SnapPoints();\r\n    snapPoints.initDefaults(this._defaultSnaps);\r\n  }\r\n\r\n  return snapPoints;\r\n};\r\n\r\nmodule.exports = SnapContext;\r\n\r\n\r\n/**\r\n * Creates the snap points and initializes them with the\r\n * given default values.\r\n *\r\n * @param {Object<String, Array<Point>>} [defaultPoints]\r\n */\r\nfunction SnapPoints(defaultSnaps) {\r\n\r\n  /**\r\n   * Map<String, Map<(x|y), Array<Number>>> mapping snap locations,\r\n   * i.e. top-left, bottom-right, center to actual snap values.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._snapValues = {};\r\n}\r\n\r\nSnapPoints.prototype.add = function(snapLocation, point) {\r\n\r\n  var snapValues = this._snapValues[snapLocation];\r\n\r\n  if (!snapValues) {\r\n    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };\r\n  }\r\n\r\n  if (snapValues.x.indexOf(point.x) === -1) {\r\n    snapValues.x.push(point.x);\r\n  }\r\n\r\n  if (snapValues.y.indexOf(point.y) === -1) {\r\n    snapValues.y.push(point.y);\r\n  }\r\n};\r\n\r\n\r\nSnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {\r\n  var snappingValues = this._snapValues[snapLocation];\r\n  \r\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\r\n};\r\n\r\n/**\r\n * Initialize a number of default snapping points.\r\n *\r\n * @param  {Object} defaultSnaps\r\n */\r\nSnapPoints.prototype.initDefaults = function(defaultSnaps) {\r\n\r\n  var self = this;\r\n\r\n  forEach(defaultSnaps || {}, function(snapPoints, snapLocation) {\r\n    forEach(snapPoints, function(point) {\r\n      self.add(snapLocation, point);\r\n    });\r\n  });\r\n};","'use strict';\r\n\r\nvar abs = Math.abs,\r\n    round = Math.round;\r\n\r\n\r\n/**\r\n * Snap value to a collection of reference values.\r\n *\r\n * @param  {Number} value\r\n * @param  {Array<Number>} values\r\n * @param  {Number} [tolerance=10]\r\n *\r\n * @return {Number} the value we snapped to or null, if none snapped\r\n */\r\nfunction snapTo(value, values, tolerance) {\r\n  tolerance = tolerance === undefined ? 10 : tolerance;\r\n\r\n  var idx, snapValue;\r\n\r\n  for (idx = 0; idx < values.length; idx++) {\r\n    snapValue = values[idx];\r\n\r\n    if (abs(snapValue - value) <= tolerance) {\r\n      return snapValue;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports.snapTo = snapTo;\r\n\r\n\r\nfunction topLeft(bounds) {\r\n  return {\r\n    x: bounds.x,\r\n    y: bounds.y\r\n  };\r\n}\r\n\r\nmodule.exports.topLeft = topLeft;\r\n\r\n\r\nfunction mid(bounds, defaultValue) {\r\n\r\n  if (!bounds || isNaN(bounds.x) || isNaN(bounds.y)) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return {\r\n    x: round(bounds.x + bounds.width / 2),\r\n    y: round(bounds.y + bounds.height / 2)\r\n  };\r\n}\r\n\r\nmodule.exports.mid = mid;\r\n\r\n\r\nfunction bottomRight(bounds) {\r\n  return {\r\n    x: bounds.x + bounds.width,\r\n    y: bounds.y + bounds.height\r\n  };\r\n}\r\n\r\nmodule.exports.bottomRight = bottomRight;\r\n\r\n\r\n/**\r\n * Retrieve the snap state of the given event.\r\n *\r\n * @param  {Event} event\r\n * @param  {String} axis\r\n *\r\n * @return {Boolean} the snapped state\r\n *\r\n */\r\nmodule.exports.isSnapped = function(event, axis) {\r\n  var snapped = event.snapped;\r\n\r\n  if (!snapped) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof axis === 'string') {\r\n    return snapped[axis];\r\n  }\r\n\r\n  return snapped.x && snapped.y;\r\n};\r\n\r\n/**\r\n * Set the given event as snapped.\r\n *\r\n * This method may change the x and/or y position of the shape\r\n * from the given event!\r\n *\r\n * @param {Event} event\r\n * @param {String} axis\r\n * @param {Number|Boolean} value\r\n *\r\n * @return {Number} old value\r\n */\r\nmodule.exports.setSnapped = function(event, axis, value) {\r\n  if (typeof axis !== 'string') {\r\n    throw new Error('axis must be in [x, y]');\r\n  }\r\n\r\n  if (typeof value !== 'number' && value !== false) {\r\n    throw new Error('value must be Number or false');\r\n  }\r\n\r\n  var delta,\r\n      previousValue = event[axis];\r\n\r\n  var snapped = event.snapped = (event.snapped || {});\r\n\r\n\r\n  if (value === false) {\r\n    snapped[axis] = false;\r\n  } else {\r\n    snapped[axis] = true;\r\n\r\n    delta = value - previousValue;\r\n\r\n    event[axis] += delta;\r\n    event['d' + axis] += delta;\r\n  }\r\n\r\n  return previousValue;\r\n};","'use strict';\r\n\r\nvar filter = require(301),\r\n    forEach = require(303),\r\n    debounce = require(313);\r\n\r\nvar mid = require(235).mid;\r\n\r\nvar SnapContext = require(234);\r\n\r\nvar SnapUtil = require(235);\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\nvar isSnapped = SnapUtil.isSnapped,\r\n    setSnapped = SnapUtil.setSnapped;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477);\r\n\r\n\r\n/**\r\n * A general purpose snapping component for diagram elements.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nfunction Snapping(eventBus, canvas) {\r\n\r\n  this._canvas = canvas;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'shape.move.start', 'create.start' ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.move', 'shape.move.end', 'create.move', 'create.end' ], HIGHER_PRIORITY, function(event) {\r\n\r\n    if (event.originalEvent && event.originalEvent.ctrlKey) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event)) {\r\n      return;\r\n    }\r\n\r\n    self.snap(event);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.cleanup', 'create.cleanup' ], function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  // delay hide by 1000 seconds since last match\r\n  this._asyncHide = debounce(this.hide, 1000);\r\n}\r\n\r\nSnapping.$inject = [ 'eventBus', 'canvas' ];\r\n\r\nmodule.exports = Snapping;\r\n\r\n\r\nSnapping.prototype.initSnap = function(event) {\r\n\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var snapMid = mid(shape, event);\r\n\r\n  snapContext.setSnapOrigin('mid', {\r\n    x: snapMid.x - event.x,\r\n    y: snapMid.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\n\r\nSnapping.prototype.snap = function(event) {\r\n\r\n  var context = event.context,\r\n      snapContext = context.snapContext,\r\n      shape = context.shape,\r\n      target = context.target,\r\n      snapLocations = snapContext.getSnapLocations();\r\n\r\n  if (!target) {\r\n    return;\r\n  }\r\n\r\n  var snapPoints = snapContext.pointsForTarget(target);\r\n\r\n  if (!snapPoints.initialized) {\r\n    this.addTargetSnaps(snapPoints, shape, target);\r\n\r\n    snapPoints.initialized = true;\r\n  }\r\n\r\n\r\n  var snapping = {\r\n    x: isSnapped(event, 'x'),\r\n    y: isSnapped(event, 'y')\r\n  };\r\n\r\n\r\n  forEach(snapLocations, function(location) {\r\n\r\n    var snapOrigin = snapContext.getSnapOrigin(location);\r\n\r\n    var snapCurrent = {\r\n      x: event.x + snapOrigin.x,\r\n      y: event.y + snapOrigin.y\r\n    };\r\n\r\n    // snap on both axis, if not snapped already\r\n    forEach([ 'x', 'y' ], function(axis) {\r\n      var locationSnapping;\r\n\r\n      if (!snapping[axis]) {\r\n        locationSnapping = snapPoints.snap(snapCurrent, location, axis, 7);\r\n\r\n        if (locationSnapping !== undefined) {\r\n          snapping[axis] = {\r\n            value: locationSnapping,\r\n            originValue: locationSnapping - snapOrigin[axis]\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    // no more need to snap, drop out of interation\r\n    if (snapping.x && snapping.y) {\r\n      return false;\r\n    }\r\n  });\r\n\r\n\r\n  // show snap visuals\r\n\r\n  this.showSnapLine('vertical', snapping.x && snapping.x.value);\r\n  this.showSnapLine('horizontal', snapping.y && snapping.y.value);\r\n\r\n\r\n  // adjust event { x, y, dx, dy } and mark as snapping\r\n  forEach([ 'x', 'y' ], function(axis) {\r\n\r\n    var axisSnapping = snapping[axis];\r\n\r\n    if (typeof axisSnapping === 'object') {\r\n      // set as snapped and adjust the x and/or y position of the event\r\n      setSnapped(event, axis, axisSnapping.originValue);\r\n    }\r\n  });\r\n};\r\n\r\n\r\nSnapping.prototype._createLine = function(orientation) {\r\n\r\n  var root = this._canvas.getLayer('snap');\r\n\r\n  // var line = root.path('M0,0 L0,0').addClass('djs-snap-line');\r\n\r\n  var line = svgCreate('path');\r\n  svgAttr(line, { d: 'M0,0 L0,0' });\r\n  svgClasses(line).add('djs-snap-line');\r\n\r\n  svgAppend(root, line);\r\n\r\n  return {\r\n    update: function(position) {\r\n\r\n      if (typeof position !== 'number') {\r\n        svgAttr(line, { display: 'none' });\r\n      } else {\r\n        if (orientation === 'horizontal') {\r\n          svgAttr(line, {\r\n            d: 'M-100000,' + position + ' L+100000,' + position,\r\n            display: ''\r\n          });\r\n        } else {\r\n          svgAttr(line, {\r\n            d: 'M ' + position + ',-100000 L ' + position + ', +100000',\r\n            display: ''\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nSnapping.prototype._createSnapLines = function() {\r\n\r\n  this._snapLines = {\r\n    horizontal: this._createLine('horizontal'),\r\n    vertical: this._createLine('vertical')\r\n  };\r\n};\r\n\r\nSnapping.prototype.showSnapLine = function(orientation, position) {\r\n\r\n  var line = this.getSnapLine(orientation);\r\n\r\n  if (line) {\r\n    line.update(position);\r\n  }\r\n\r\n  this._asyncHide();\r\n};\r\n\r\nSnapping.prototype.getSnapLine = function(orientation) {\r\n  if (!this._snapLines) {\r\n    this._createSnapLines();\r\n  }\r\n\r\n  return this._snapLines[orientation];\r\n};\r\n\r\nSnapping.prototype.hide = function() {\r\n  forEach(this._snapLines, function(l) {\r\n    l.update();\r\n  });\r\n};\r\n\r\nSnapping.prototype.addTargetSnaps = function(snapPoints, shape, target) {\r\n\r\n  var siblings = this.getSiblings(shape, target);\r\n\r\n  forEach(siblings, function(s) {\r\n    snapPoints.add('mid', mid(s));\r\n  });\r\n\r\n};\r\n\r\nSnapping.prototype.getSiblings = function(element, target) {\r\n\r\n  // snap to all siblings that are not hidden, labels, attached to element or element itself\r\n  return target && filter(target.children, function(e) {\r\n    return !e.hidden && !e.labelTarget && e.host !== element && e !== element;\r\n  });\r\n};\r\n","'use strict';\r\n\r\nvar SpaceUtil = require(239);\r\n\r\nvar Cursor = require(265);\r\n\r\nvar hasPrimaryModifier = require(274).hasPrimaryModifier;\r\n\r\nvar abs = Math.abs,\r\n    round = Math.round;\r\n\r\nvar HIGH_PRIORITY = 1500,\r\n    SPACE_TOOL_CURSOR = 'crosshair';\r\n\r\nvar AXIS_TO_DIMENSION = { x: 'width', y: 'height' },\r\n    AXIS_INVERTED = { x: 'y', y: 'x' };\r\n\r\nvar getAllChildren = require(266).selfAndAllChildren;\r\n\r\nvar assign = require(431),\r\n    forEach = require(303);\r\n\r\n\r\n/**\r\n * A tool that allows users to create and remove space in a diagram.\r\n *\r\n * The tool needs to be activated manually via {@link SpaceTool#activate(MouseEvent)}.\r\n */\r\nfunction SpaceTool(eventBus, dragging, canvas, modeling, rules, toolManager) {\r\n\r\n  this._canvas = canvas;\r\n  this._dragging = dragging;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n  this._toolManager = toolManager;\r\n\r\n  var self = this;\r\n\r\n  toolManager.registerTool('space', {\r\n    tool: 'spaceTool.selection',\r\n    dragging: 'spaceTool'\r\n  });\r\n\r\n  eventBus.on('spaceTool.selection.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('spaceTool.selection.ended', function() {\r\n      self.activateMakeSpace(event.originalEvent);\r\n    });\r\n  });\r\n\r\n\r\n  eventBus.on('spaceTool.move', HIGH_PRIORITY , function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    if (!context.initialized) {\r\n      context.initialized = self.initializeMakeSpace(event, context);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on('spaceTool.end', function(event) {\r\n\r\n    var context = event.context,\r\n        axis = context.axis,\r\n        direction = context.direction,\r\n        movingShapes = context.movingShapes,\r\n        resizingShapes = context.resizingShapes;\r\n\r\n    // skip if create space has not been initialized yet\r\n    if (!context.initialized) {\r\n      return;\r\n    }\r\n\r\n    var delta = { x: round(event.dx), y: round(event.dy) };\r\n    delta[ AXIS_INVERTED[ axis ] ] = 0;\r\n\r\n    var insideBounds = true;\r\n\r\n    // check if the space tool cursor is inside of bounds of\r\n    // any of the shapes that would be resized.\r\n    forEach(resizingShapes, function(shape) {\r\n\r\n      if ((direction === 'w' && event.x > shape.x + shape.width) ||\r\n          (direction === 'e' && event.x < shape.x) ||\r\n          (direction === 'n' && event.y > shape.y + shape.height) ||\r\n          (direction === 's' && event.y < shape.y)) {\r\n\r\n        insideBounds = false;\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (insideBounds) {\r\n      // make space only if the cursor is inside bounds\r\n      self.makeSpace(movingShapes, resizingShapes, delta, direction);\r\n    }\r\n\r\n    eventBus.once('spaceTool.ended', function(event) {\r\n      // reactivate space tool after usage\r\n      self.activateSelection(event.originalEvent, true, true);\r\n    });\r\n\r\n  });\r\n}\r\n\r\nSpaceTool.$inject = [ 'eventBus', 'dragging', 'canvas', 'modeling', 'rules', 'toolManager' ];\r\n\r\nmodule.exports = SpaceTool;\r\n\r\n\r\n/**\r\n * Activate space tool selection\r\n *\r\n * @param  {MouseEvent} event\r\n * @param  {Boolean} autoActivate\r\n */\r\nSpaceTool.prototype.activateSelection = function(event, autoActivate, reactivate) {\r\n  this._dragging.init(event, 'spaceTool.selection', {\r\n    trapClick: false,\r\n    cursor: SPACE_TOOL_CURSOR,\r\n    autoActivate: autoActivate,\r\n    data: {\r\n      context: {\r\n        reactivate: reactivate\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Activate make space\r\n *\r\n * @param  {MouseEvent} event\r\n */\r\nSpaceTool.prototype.activateMakeSpace = function(event) {\r\n  this._dragging.init(event, 'spaceTool', {\r\n    autoActivate: true,\r\n    cursor: SPACE_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Actually make space on the diagram\r\n *\r\n * @param  {Array<djs.model.Shape>} movingShapes\r\n * @param  {Array<djs.model.Shape>} resizingShapes\r\n * @param  {Point} delta\r\n * @param  {String} direction\r\n */\r\nSpaceTool.prototype.makeSpace = function(movingShapes, resizingShapes, delta, direction) {\r\n  return this._modeling.createSpace(movingShapes, resizingShapes, delta, direction);\r\n};\r\n\r\n/**\r\n * Initialize make space and return true if that was successful.\r\n *\r\n * @param {Event} event\r\n * @param {Object} context\r\n *\r\n * @return {Boolean} true, if successful\r\n */\r\nSpaceTool.prototype.initializeMakeSpace = function(event, context) {\r\n\r\n  var axis = abs(event.dx) > abs(event.dy) ? 'x' : 'y',\r\n      offset = event['d' + axis],\r\n      // start point of create space operation\r\n      spacePos = event[axis] - offset;\r\n\r\n  if (abs(offset) < 5) {\r\n    return false;\r\n  }\r\n\r\n  // invert the offset in order to remove space when moving left\r\n  if (offset < 0) {\r\n    offset *= -1;\r\n  }\r\n\r\n  // inverts the offset to choose the shapes\r\n  // on the opposite side of the resizer if\r\n  // a key modifier is pressed\r\n  if (hasPrimaryModifier(event)) {\r\n    offset *= -1;\r\n  }\r\n\r\n  var rootShape = this._canvas.getRootElement();\r\n\r\n  var allShapes = getAllChildren(rootShape, true);\r\n\r\n  var adjustments = this.calculateAdjustments(allShapes, axis, offset, spacePos);\r\n\r\n  // store data in context\r\n  assign(context, adjustments, {\r\n    axis: axis,\r\n    direction: SpaceUtil.getDirection(axis, offset)\r\n  });\r\n\r\n  Cursor.set('resize-' + (axis === 'x' ? 'ew' : 'ns'));\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Calculate adjustments needed when making space\r\n *\r\n * @param  {Array<djs.model.Shape>} elements\r\n * @param  {String} axis\r\n * @param  {Number} offset\r\n * @param  {Number} spacePos\r\n *\r\n * @return {Object}\r\n */\r\nSpaceTool.prototype.calculateAdjustments = function(elements, axis, offset, spacePos) {\r\n\r\n  var movingShapes = [],\r\n      resizingShapes = [];\r\n\r\n  var rules = this._rules;\r\n\r\n  // collect all elements that need to be moved _AND_\r\n  // resized given on the initial create space position\r\n  elements.forEach(function(shape) {\r\n\r\n    var shapeStart = shape[axis],\r\n        shapeEnd = shapeStart + shape[AXIS_TO_DIMENSION[axis]];\r\n\r\n    // checking if it's root\r\n    if (!shape.parent) {\r\n      return;\r\n    }\r\n\r\n    // checking if it's a shape\r\n    if (shape.waypoints) {\r\n      return;\r\n    }\r\n\r\n    // shape after spacePos\r\n    if (offset > 0 && shapeStart > spacePos) {\r\n      return movingShapes.push(shape);\r\n    }\r\n\r\n    // shape before spacePos\r\n    if (offset < 0 && shapeEnd < spacePos) {\r\n      return movingShapes.push(shape);\r\n    }\r\n\r\n    // shape on top of spacePos, resize only if allowed\r\n    if (shapeStart < spacePos &&\r\n        shapeEnd > spacePos &&\r\n        rules.allowed('shape.resize', { shape: shape })) {\r\n\r\n      return resizingShapes.push(shape);\r\n    }\r\n  });\r\n\r\n  return {\r\n    movingShapes: movingShapes,\r\n    resizingShapes: resizingShapes\r\n  };\r\n};\r\n\r\nSpaceTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateSelection();\r\n  }\r\n};\r\n\r\nSpaceTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^spaceTool/.test(context.prefix);\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar MARKER_DRAGGING = 'djs-dragging',\r\n    MARKER_RESIZING = 'djs-resizing';\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgClasses = require(474),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar translate = require(279).translate;\r\n\r\n\r\n/**\r\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n */\r\n\r\nfunction SpaceToolPreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\r\n\r\n  function addPreviewGfx(collection, dragGroup) {\r\n    forEach(collection, function(element) {\r\n      previewSupport.addDragger(element, dragGroup);\r\n\r\n      canvas.addMarker(element, MARKER_DRAGGING);\r\n    });\r\n  }\r\n\r\n  // add crosshair\r\n  eventBus.on('spaceTool.selection.start', function(event) {\r\n    var space = canvas.getLayer('space'),\r\n        context = event.context;\r\n\r\n    var orientation = {\r\n      x: 'M 0,-10000 L 0,10000',\r\n      y: 'M -10000,0 L 10000,0'\r\n    };\r\n\r\n    var crosshairGroup = svgCreate('g');\r\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\r\n\r\n    svgAppend(space, crosshairGroup);\r\n\r\n    // horizontal path\r\n    var pathX = svgCreate('path');\r\n    svgAttr(pathX, 'd', orientation.x);\r\n    svgClasses(pathX).add('djs-crosshair');\r\n\r\n    svgAppend(crosshairGroup, pathX);\r\n\r\n    // vertical path\r\n    var pathY = svgCreate('path');\r\n    svgAttr(pathY, 'd', orientation.y);\r\n    svgClasses(pathY).add('djs-crosshair');\r\n\r\n    svgAppend(crosshairGroup, pathY);\r\n\r\n    context.crosshairGroup = crosshairGroup;\r\n  });\r\n\r\n  // update crosshair\r\n  eventBus.on('spaceTool.selection.move', function(event) {\r\n    var crosshairGroup = event.context.crosshairGroup;\r\n\r\n    translate(crosshairGroup, event.x, event.y);\r\n  });\r\n\r\n  // remove crosshair\r\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\r\n    var context = event.context,\r\n        crosshairGroup = context.crosshairGroup;\r\n\r\n    if (crosshairGroup) {\r\n      svgRemove(crosshairGroup);\r\n    }\r\n  });\r\n\r\n  // add and update move/resize previews\r\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        line = context.line,\r\n        axis = context.axis,\r\n        movingShapes = context.movingShapes,\r\n        resizingShapes = context.resizingShapes;\r\n\r\n    if (!context.initialized) {\r\n      return;\r\n    }\r\n\r\n    if (!context.dragGroup) {\r\n      var spaceLayer = canvas.getLayer('space');\r\n\r\n      line = svgCreate('path');\r\n      svgAttr(line, 'd', 'M0,0 L0,0');\r\n      svgClasses(line).add('djs-crosshair');\r\n\r\n      svgAppend(spaceLayer, line);\r\n\r\n      context.line  = line;\r\n\r\n      var dragGroup = svgCreate('g');\r\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n      svgAppend(canvas.getDefaultLayer(), dragGroup);\r\n\r\n      // shapes\r\n      addPreviewGfx(movingShapes, dragGroup);\r\n\r\n      // connections\r\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\r\n        var sourceIsMoving = false;\r\n\r\n        forEach(movingShapes, function(shape) {\r\n          forEach(shape.outgoing, function(connection) {\r\n            if (element === connection) {\r\n              sourceIsMoving = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var targetIsMoving = false;\r\n\r\n        forEach(movingShapes, function(shape) {\r\n          forEach(shape.incoming, function(connection) {\r\n            if (element === connection) {\r\n              targetIsMoving = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var sourceIsResizing = false;\r\n\r\n        forEach(resizingShapes, function(shape) {\r\n          forEach(shape.outgoing, function(connection) {\r\n            if (element === connection) {\r\n              sourceIsResizing = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var targetIsResizing = false;\r\n\r\n        forEach(resizingShapes, function(shape) {\r\n          forEach(shape.incoming, function(connection) {\r\n            if (element === connection) {\r\n              targetIsResizing = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        return isConnection(element)\r\n          && (sourceIsMoving || sourceIsResizing)\r\n          && (targetIsMoving || targetIsResizing);\r\n      });\r\n\r\n\r\n      addPreviewGfx(movingConnections, dragGroup);\r\n\r\n      context.dragGroup = dragGroup;\r\n    }\r\n\r\n    if (!context.frameGroup) {\r\n      var frameGroup = svgCreate('g');\r\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\r\n\r\n      svgAppend(canvas.getDefaultLayer(), frameGroup);\r\n\r\n      var frames = [];\r\n\r\n      forEach(resizingShapes, function(shape) {\r\n        var frame = previewSupport.addFrame(shape, frameGroup);\r\n\r\n        frames.push({\r\n          element: frame,\r\n          initialWidth: frame.getBBox().width,\r\n          initialHeight: frame.getBBox().height\r\n        });\r\n\r\n        canvas.addMarker(shape, MARKER_RESIZING);\r\n      });\r\n\r\n      context.frameGroup = frameGroup;\r\n      context.frames = frames;\r\n    }\r\n\r\n    var orientation = {\r\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\r\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\r\n    };\r\n\r\n    svgAttr(line, { path: orientation[ axis ], display: '' });\r\n\r\n    var opposite = { x: 'y', y: 'x' };\r\n    var delta = { x: event.dx, y: event.dy };\r\n    delta[ opposite[ context.axis ] ] = 0;\r\n\r\n    // update move previews\r\n    translate(context.dragGroup, delta.x, delta.y);\r\n\r\n    // update resize previews\r\n    forEach(context.frames, function(frame) {\r\n      if (frame.initialWidth + delta.x > 5) {\r\n        svgAttr(frame.element, { width: frame.initialWidth + delta.x });\r\n      }\r\n\r\n      if (frame.initialHeight + delta.y > 5) {\r\n        svgAttr(frame.element, { height: frame.initialHeight + delta.y });\r\n      }\r\n    });\r\n\r\n  });\r\n\r\n  // remove move/resize previews\r\n  eventBus.on('spaceTool.cleanup', function(event) {\r\n\r\n    var context = event.context,\r\n        movingShapes = context.movingShapes,\r\n        movingConnections = context.movingConnections,\r\n        resizingShapes = context.resizingShapes,\r\n        line = context.line,\r\n        dragGroup = context.dragGroup,\r\n        frameGroup = context.frameGroup;\r\n\r\n    // moving shapes\r\n    forEach(movingShapes, function(shape) {\r\n      canvas.removeMarker(shape, MARKER_DRAGGING);\r\n    });\r\n\r\n    // moving connections\r\n    forEach(movingConnections, function(connection) {\r\n      canvas.removeMarker(connection, MARKER_DRAGGING);\r\n    });\r\n\r\n    if (dragGroup) {\r\n      svgRemove(line);\r\n      svgRemove(dragGroup);\r\n    }\r\n\r\n    forEach(resizingShapes, function(shape) {\r\n      canvas.removeMarker(shape, MARKER_RESIZING);\r\n    });\r\n\r\n    if (frameGroup) {\r\n      svgRemove(frameGroup);\r\n    }\r\n  });\r\n}\r\n\r\nSpaceToolPreview.$inject = [ 'eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport' ];\r\n\r\nmodule.exports = SpaceToolPreview;\r\n\r\n////////// helpers //////////\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Get Resize direction given axis + offset\r\n *\r\n * @param {String} axis (x|y)\r\n * @param {Number} offset\r\n *\r\n * @return {String} (e|w|n|s)\r\n */\r\nfunction getDirection(axis, offset) {\r\n\r\n  if (axis === 'x') {\r\n    if (offset > 0) {\r\n      return 'e';\r\n    }\r\n\r\n    if (offset < 0) {\r\n      return 'w';\r\n    }\r\n  }\r\n\r\n  if (axis === 'y') {\r\n    if (offset > 0) {\r\n      return 's';\r\n    }\r\n\r\n    if (offset < 0) {\r\n      return 'n';\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nmodule.exports.getDirection = getDirection;\r\n\r\n/**\r\n * Resize the given bounds by the specified delta from a given anchor point.\r\n *\r\n * @param {Bounds} bounds the bounding box that should be resized\r\n * @param {String} direction in which the element is resized (n, s, e, w)\r\n * @param {Point} delta of the resize operation\r\n *\r\n * @return {Bounds} resized bounding box\r\n */\r\nmodule.exports.resizeBounds = function(bounds, direction, delta) {\r\n\r\n  var dx = delta.x,\r\n      dy = delta.y;\r\n\r\n  switch (direction) {\r\n\r\n  case 'n':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y + dy,\r\n      width: bounds.width,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 's':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  case 'w':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y,\r\n      width: bounds.width - dx,\r\n      height: bounds.height\r\n    };\r\n\r\n  case 'e':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width + dx,\r\n      height: bounds.height\r\n    };\r\n\r\n  default:\r\n    throw new Error('unrecognized direction: ' + direction);\r\n  }\r\n};","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: ['spaceToolPreview'],\r\n  __depends__: [\r\n    require(162),\r\n    require(227),\r\n    require(242),\r\n    require(217)\r\n  ],\r\n  spaceTool: ['type', require(237)],\r\n  spaceToolPreview: ['type', require(238) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\n/**\r\n * The tool manager acts as middle-man between the available tool's and the Palette,\r\n * it takes care of making sure that the correct active state is set.\r\n *\r\n * @param  {Object}    eventBus\r\n * @param  {Object}    dragging\r\n */\r\nfunction ToolManager(eventBus, dragging) {\r\n  this._eventBus = eventBus;\r\n  this._dragging = dragging;\r\n\r\n  this._tools = [];\r\n  this._active = null;\r\n}\r\n\r\nToolManager.$inject = [ 'eventBus', 'dragging' ];\r\n\r\nmodule.exports = ToolManager;\r\n\r\nToolManager.prototype.registerTool = function(name, events) {\r\n  var tools = this._tools;\r\n\r\n  if (!events) {\r\n    throw new Error('A tool has to be registered with it/'s \"events\"');\r\n  }\r\n\r\n  tools.push(name);\r\n\r\n  this.bindEvents(name, events);\r\n};\r\n\r\nToolManager.prototype.isActive = function(tool) {\r\n  return tool && this._active === tool;\r\n};\r\n\r\nToolManager.prototype.length = function(tool) {\r\n  return this._tools.length;\r\n};\r\n\r\nToolManager.prototype.setActive = function(tool) {\r\n  var eventBus = this._eventBus;\r\n\r\n  if (this._active !== tool) {\r\n    this._active = tool;\r\n\r\n    eventBus.fire('tool-manager.update', { tool: tool });\r\n  }\r\n};\r\n\r\nToolManager.prototype.bindEvents = function(name, events) {\r\n  var eventBus = this._eventBus,\r\n      dragging = this._dragging;\r\n\r\n  var eventsToRegister = [];\r\n\r\n  eventBus.on(events.tool + '.init', function(event) {\r\n    var context = event.context;\r\n\r\n    // Active tools that want to reactivate themselves must do this explicitly\r\n    if (!context.reactivate && this.isActive(name)) {\r\n      this.setActive(null);\r\n\r\n      dragging.cancel();\r\n      return;\r\n    }\r\n\r\n    this.setActive(name);\r\n\r\n  }, this);\r\n\r\n  // Todo[ricardo]: add test cases\r\n  forEach(events, function(event) {\r\n    eventsToRegister.push(event + '.ended');\r\n    eventsToRegister.push(event + '.canceled');\r\n  });\r\n\r\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function(event) {\r\n    var originalEvent = event.originalEvent;\r\n\r\n    // We defer the de-activation of the tool to the .activate phase,\r\n    // so we're able to check if we want to toggle off the current active tool or switch to a new one\r\n    if (!this._active ||\r\n        (originalEvent && originalEvent.target.parentNode.getAttribute('data-group') === 'tools')) {\r\n      return;\r\n    }\r\n\r\n    this.setActive(null);\r\n  }, this);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [ require(162) ],\r\n  __init__: [ 'toolManager' ],\r\n  toolManager: [ 'type', require(241) ]\r\n};\r\n","'use strict';\r\n\r\nvar isString = require(428),\r\n    assign = require(431),\r\n    forEach = require(303);\r\n\r\nvar domify = require(449),\r\n    domAttr = require(444),\r\n    domClasses = require(445),\r\n    domRemove = require(453),\r\n    domDelegate = require(448);\r\n\r\n\r\n// document wide unique tooltip ids\r\nvar ids = new (require(270))('tt');\r\n\r\n\r\nfunction createRoot(parent) {\r\n  var root = domify('<div class=\"djs-tooltip-container\" style=\"position: absolute; width: 0; height: 0;\" />');\r\n  parent.insertBefore(root, parent.firstChild);\r\n\r\n  return root;\r\n}\r\n\r\n\r\nfunction setPosition(el, x, y) {\r\n  assign(el.style, { left: x + 'px', top: y + 'px' });\r\n}\r\n\r\nfunction setVisible(el, visible) {\r\n  el.style.display = visible === false ? 'none' : '';\r\n}\r\n\r\n\r\nvar tooltipClass = 'djs-tooltip',\r\n    tooltipSelector = '.' + tooltipClass;\r\n\r\n/**\r\n * A service that allows users to render tool tips on the diagram.\r\n *\r\n * The tooltip service will take care of updating the tooltip positioning\r\n * during navigation + zooming.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n *\r\n * // add a pink badge on the top left of the shape\r\n * tooltips.add({\r\n *   position: {\r\n *     x: 50,\r\n *     y: 100\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or with optional life span\r\n * tooltips.add({\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>',\r\n *   ttl: 2000\r\n * });\r\n *\r\n * // remove a tool tip\r\n * var id = tooltips.add(...);\r\n * tooltips.remove(id);\r\n * ```\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nfunction Tooltips(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._ids = ids;\r\n\r\n  this._tooltipDefaults = {\r\n    show: {\r\n      minZoom: 0.7,\r\n      maxZoom: 5.0\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mapping tooltipId -> tooltip\r\n   */\r\n  this._tooltips = {};\r\n\r\n  // root html element for all tooltips\r\n  this._tooltipRoot = createRoot(canvas.getContainer());\r\n\r\n\r\n  var self = this;\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseover', function(event) {\r\n    self.trigger('mouseover', event);\r\n  });\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseout', function(event) {\r\n    self.trigger('mouseout', event);\r\n  });\r\n\r\n  this._init();\r\n}\r\n\r\n\r\nTooltips.$inject = [ 'eventBus', 'canvas' ];\r\n\r\nmodule.exports = Tooltips;\r\n\r\n\r\n/**\r\n * Adds a HTML tooltip to the diagram\r\n *\r\n * @param {Object}               tooltip   the tooltip configuration\r\n *\r\n * @param {String|DOMElement}    tooltip.html                 html element to use as an tooltip\r\n * @param {Object}               [tooltip.show]               show configuration\r\n * @param {Number}               [tooltip.show.minZoom]       minimal zoom level to show the tooltip\r\n * @param {Number}               [tooltip.show.maxZoom]       maximum zoom level to show the tooltip\r\n * @param {Object}               tooltip.position             where to attach the tooltip\r\n * @param {Number}               [tooltip.position.left]      relative to element bbox left attachment\r\n * @param {Number}               [tooltip.position.top]       relative to element bbox top attachment\r\n * @param {Number}               [tooltip.position.bottom]    relative to element bbox bottom attachment\r\n * @param {Number}               [tooltip.position.right]     relative to element bbox right attachment\r\n * @param {Number}               [tooltip.timeout=-1]\r\n *\r\n * @return {String}              id that may be used to reference the tooltip for update or removal\r\n */\r\nTooltips.prototype.add = function(tooltip) {\r\n\r\n  if (!tooltip.position) {\r\n    throw new Error('must specifiy tooltip position');\r\n  }\r\n\r\n  if (!tooltip.html) {\r\n    throw new Error('must specifiy tooltip html');\r\n  }\r\n\r\n  var id = this._ids.next();\r\n\r\n  tooltip = assign({}, this._tooltipDefaults, tooltip, {\r\n    id: id\r\n  });\r\n\r\n  this._addTooltip(tooltip);\r\n\r\n  if (tooltip.timeout) {\r\n    this.setTimeout(tooltip);\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nTooltips.prototype.trigger = function(action, event) {\r\n\r\n  var node = event.delegateTarget || event.target;\r\n\r\n  var tooltip = this.get(domAttr(node, 'data-tooltip-id'));\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  if (action === 'mouseover' && tooltip.timeout) {\r\n    this.clearTimeout(tooltip);\r\n  }\r\n\r\n  if (action === 'mouseout' && tooltip.timeout) {\r\n    // cut timeout after mouse out\r\n    tooltip.timeout = 1000;\r\n\r\n    this.setTimeout(tooltip);\r\n  }\r\n};\r\n\r\n/**\r\n * Get a tooltip with the given id\r\n *\r\n * @param {String} id\r\n */\r\nTooltips.prototype.get = function(id) {\r\n\r\n  if (typeof id !== 'string') {\r\n    id = id.id;\r\n  }\r\n\r\n  return this._tooltips[id];\r\n};\r\n\r\nTooltips.prototype.clearTimeout = function(tooltip) {\r\n\r\n  tooltip = this.get(tooltip);\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  var removeTimer = tooltip.removeTimer;\r\n\r\n  if (removeTimer) {\r\n    clearTimeout(removeTimer);\r\n    tooltip.removeTimer = null;\r\n  }\r\n};\r\n\r\nTooltips.prototype.setTimeout = function(tooltip) {\r\n\r\n  tooltip = this.get(tooltip);\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  this.clearTimeout(tooltip);\r\n\r\n  var self = this;\r\n\r\n  tooltip.removeTimer = setTimeout(function() {\r\n    self.remove(tooltip);\r\n  }, tooltip.timeout);\r\n};\r\n\r\n/**\r\n * Remove an tooltip with the given id\r\n *\r\n * @param {String} id\r\n */\r\nTooltips.prototype.remove = function(id) {\r\n\r\n  var tooltip = this.get(id);\r\n\r\n  if (tooltip) {\r\n    domRemove(tooltip.html);\r\n    domRemove(tooltip.htmlContainer);\r\n\r\n    delete tooltip.htmlContainer;\r\n\r\n    delete this._tooltips[tooltip.id];\r\n  }\r\n};\r\n\r\n\r\nTooltips.prototype.show = function() {\r\n  setVisible(this._tooltipRoot);\r\n};\r\n\r\n\r\nTooltips.prototype.hide = function() {\r\n  setVisible(this._tooltipRoot, false);\r\n};\r\n\r\n\r\nTooltips.prototype._updateRoot = function(viewbox) {\r\n  var a = viewbox.scale || 1;\r\n  var d = viewbox.scale || 1;\r\n\r\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\r\n\r\n  this._tooltipRoot.style.transform = matrix;\r\n  this._tooltipRoot.style['-ms-transform'] = matrix;\r\n};\r\n\r\n\r\nTooltips.prototype._addTooltip = function(tooltip) {\r\n\r\n  var id = tooltip.id,\r\n      html = tooltip.html,\r\n      htmlContainer,\r\n      tooltipRoot = this._tooltipRoot;\r\n\r\n  // unwrap jquery (for those who need it)\r\n  if (html.get && html.constructor.prototype.jquery) {\r\n    html = html.get(0);\r\n  }\r\n\r\n  // create proper html elements from\r\n  // tooltip HTML strings\r\n  if (isString(html)) {\r\n    html = domify(html);\r\n  }\r\n\r\n  htmlContainer = domify('<div data-tooltip-id=\"' + id + '\" class=\"' + tooltipClass + '\" style=\"position: absolute\">');\r\n\r\n  htmlContainer.appendChild(html);\r\n\r\n  if (tooltip.type) {\r\n    domClasses(htmlContainer).add('djs-tooltip-' + tooltip.type);\r\n  }\r\n\r\n  if (tooltip.className) {\r\n    domClasses(htmlContainer).add(tooltip.className);\r\n  }\r\n\r\n  tooltip.htmlContainer = htmlContainer;\r\n\r\n  tooltipRoot.appendChild(htmlContainer);\r\n\r\n  this._tooltips[id] = tooltip;\r\n\r\n  this._updateTooltip(tooltip);\r\n};\r\n\r\n\r\nTooltips.prototype._updateTooltip = function(tooltip) {\r\n\r\n  var position = tooltip.position,\r\n      htmlContainer = tooltip.htmlContainer;\r\n\r\n  // update overlay html based on tooltip x, y\r\n\r\n  setPosition(htmlContainer, position.x, position.y);\r\n};\r\n\r\n\r\nTooltips.prototype._updateTooltipVisibilty = function(viewbox) {\r\n\r\n  forEach(this._tooltips, function(tooltip) {\r\n    var show = tooltip.show,\r\n        htmlContainer = tooltip.htmlContainer,\r\n        visible = true;\r\n\r\n    if (show) {\r\n      if (show.minZoom > viewbox.scale ||\r\n          show.maxZoom < viewbox.scale) {\r\n        visible = false;\r\n      }\r\n\r\n      setVisible(htmlContainer, visible);\r\n    }\r\n  });\r\n};\r\n\r\nTooltips.prototype._init = function() {\r\n\r\n  var self = this;\r\n\r\n  // scroll/zoom integration\r\n\r\n  function updateViewbox(viewbox) {\r\n    self._updateRoot(viewbox);\r\n    self._updateTooltipVisibilty(viewbox);\r\n\r\n    self.show();\r\n  }\r\n\r\n  this._eventBus.on('canvas.viewbox.changing', function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  this._eventBus.on('canvas.viewbox.changed', function(event) {\r\n    updateViewbox(event.viewbox);\r\n  });\r\n};\r\n","module.exports = {\r\n  __init__: [ 'tooltips' ],\r\n  tooltips: [ 'type', require(243) ]\r\n};","'use strict';\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477);\r\n\r\n\r\nfunction TouchFix(canvas, eventBus) {\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('canvas.init', function(e) {\r\n    self.addBBoxMarker(e.svg);\r\n  });\r\n}\r\n\r\nTouchFix.$inject = [ 'canvas', 'eventBus' ];\r\n\r\nmodule.exports = TouchFix;\r\n\r\n\r\n/**\r\n * Safari mobile (iOS 7) does not fire touchstart event in <SVG> element\r\n * if there is no shape between 0,0 and viewport elements origin.\r\n *\r\n * So touchstart event is only fired when the <g class=\"viewport\"> element was hit.\r\n * Putting an element over and below the 'viewport' fixes that behavior.\r\n */\r\nTouchFix.prototype.addBBoxMarker = function(svg) {\r\n\r\n  var markerStyle = {\r\n    fill: 'none',\r\n    class: 'outer-bound-marker'\r\n  };\r\n\r\n  var rect1 = svgCreate('rect');\r\n  svgAttr(rect1, {\r\n    x: -10000,\r\n    y: 10000,\r\n    width: 10,\r\n    height: 10\r\n  });\r\n  svgAttr(rect1, markerStyle);\r\n\r\n  svgAppend(svg, rect1);\r\n\r\n  var rect2 = svgCreate('rect');\r\n  svgAttr(rect2, {\r\n    x: 10000,\r\n    y: 10000,\r\n    width: 10,\r\n    height: 10\r\n  });\r\n  svgAttr(rect2, markerStyle);\r\n\r\n  svgAppend(svg, rect2);\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303),\r\n    domEvent = require(450),\r\n    domClosest = require(447),\r\n    Hammer = require(286),\r\n    Event = require(267);\r\n\r\nvar MIN_ZOOM = 0.2,\r\n    MAX_ZOOM = 4;\r\n\r\nvar mouseEvents = [\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'click',\r\n  'dblclick'\r\n];\r\n\r\nfunction log() {\r\n  // console.log.apply(console, arguments);\r\n}\r\n\r\nfunction get(service, injector) {\r\n  return injector.get(service, false);\r\n}\r\n\r\nfunction createTouchRecognizer(node) {\r\n\r\n  function stopEvent(event) {\r\n    Event.stopEvent(event, true);\r\n  }\r\n\r\n  function stopMouse(event) {\r\n\r\n    forEach(mouseEvents, function(e) {\r\n      domEvent.bind(node, e, stopEvent, true);\r\n    });\r\n  }\r\n\r\n  function allowMouse(event) {\r\n    setTimeout(function() {\r\n      forEach(mouseEvents, function(e) {\r\n        domEvent.unbind(node, e, stopEvent, true);\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  domEvent.bind(node, 'touchstart', stopMouse, true);\r\n  domEvent.bind(node, 'touchend', allowMouse, true);\r\n  domEvent.bind(node, 'touchcancel', allowMouse, true);\r\n\r\n  // A touch event recognizer that handles\r\n  // touch events only (we know, we can already handle\r\n  // mouse events out of the box)\r\n\r\n  var recognizer = new Hammer.Manager(node, {\r\n    inputClass: Hammer.TouchInput,\r\n    recognizers: []\r\n  });\r\n\r\n\r\n  var tap = new Hammer.Tap();\r\n  var pan = new Hammer.Pan({ threshold: 10 });\r\n  var press = new Hammer.Press();\r\n  var pinch = new Hammer.Pinch();\r\n\r\n  var doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\r\n\r\n  pinch.requireFailure(pan);\r\n  pinch.requireFailure(press);\r\n\r\n  recognizer.add([ pan, press, pinch, doubleTap, tap ]);\r\n\r\n  recognizer.reset = function(force) {\r\n    var recognizers = this.recognizers,\r\n        session = this.session;\r\n\r\n    if (session.stopped) {\r\n      return;\r\n    }\r\n\r\n    log('recognizer', 'stop');\r\n\r\n    recognizer.stop(force);\r\n\r\n    setTimeout(function() {\r\n      var i, r;\r\n\r\n      log('recognizer', 'reset');\r\n      for (i = 0; (r = recognizers[i]); i++) {\r\n        r.reset();\r\n        r.state = 8; // FAILED STATE\r\n      }\r\n\r\n      session.curRecognizer = null;\r\n    }, 0);\r\n  };\r\n\r\n  recognizer.on('hammer.input', function(event) {\r\n    if (event.srcEvent.defaultPrevented) {\r\n      recognizer.reset(true);\r\n    }\r\n  });\r\n\r\n  return recognizer;\r\n}\r\n\r\n/**\r\n * A plugin that provides touch events for elements.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {InteractionEvents} interactionEvents\r\n */\r\nfunction TouchInteractionEvents(injector, canvas, eventBus, elementRegistry, interactionEvents) {\r\n\r\n  // optional integrations\r\n  var dragging = get('dragging', injector),\r\n      move = get('move', injector),\r\n      contextPad = get('contextPad', injector),\r\n      palette = get('palette', injector);\r\n\r\n  // the touch recognizer\r\n  var recognizer;\r\n\r\n  function handler(type) {\r\n\r\n    return function(event) {\r\n      log('element', type, event);\r\n\r\n      interactionEvents.fire(type, event);\r\n    };\r\n  }\r\n\r\n  function getGfx(target) {\r\n    var node = domClosest(target, 'svg, .djs-element', true);\r\n    return node;\r\n  }\r\n\r\n  function initEvents(svg) {\r\n\r\n    // touch recognizer\r\n    recognizer = createTouchRecognizer(svg);\r\n\r\n    recognizer.on('doubletap', handler('element.dblclick'));\r\n\r\n    recognizer.on('tap', handler('element.click'));\r\n\r\n    function startGrabCanvas(event) {\r\n\r\n      log('canvas', 'grab start');\r\n\r\n      var lx = 0, ly = 0;\r\n\r\n      function update(e) {\r\n\r\n        var dx = e.deltaX - lx,\r\n            dy = e.deltaY - ly;\r\n\r\n        canvas.scroll({ dx: dx, dy: dy });\r\n\r\n        lx = e.deltaX;\r\n        ly = e.deltaY;\r\n      }\r\n\r\n      function end(e) {\r\n        recognizer.off('panmove', update);\r\n        recognizer.off('panend', end);\r\n        recognizer.off('pancancel', end);\r\n\r\n        log('canvas', 'grab end');\r\n      }\r\n\r\n      recognizer.on('panmove', update);\r\n      recognizer.on('panend', end);\r\n      recognizer.on('pancancel', end);\r\n    }\r\n\r\n    function startGrab(event) {\r\n\r\n      var gfx = getGfx(event.target),\r\n          element = gfx && elementRegistry.get(gfx);\r\n\r\n      // recognizer\r\n      if (move && canvas.getRootElement() !== element) {\r\n        log('element', 'move start', element, event, true);\r\n        return move.start(event, element, true);\r\n      } else {\r\n        startGrabCanvas(event);\r\n      }\r\n    }\r\n\r\n    function startZoom(e) {\r\n\r\n      log('canvas', 'zoom start');\r\n\r\n      var zoom = canvas.zoom(),\r\n          mid = e.center;\r\n\r\n      function update(e) {\r\n\r\n        var ratio = 1 - (1 - e.scale) / 1.50,\r\n            newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, ratio * zoom));\r\n\r\n        canvas.zoom(newZoom, mid);\r\n\r\n        Event.stopEvent(e, true);\r\n      }\r\n\r\n      function end(e) {\r\n        recognizer.off('pinchmove', update);\r\n        recognizer.off('pinchend', end);\r\n        recognizer.off('pinchcancel', end);\r\n\r\n        recognizer.reset(true);\r\n\r\n        log('canvas', 'zoom end');\r\n      }\r\n\r\n      recognizer.on('pinchmove', update);\r\n      recognizer.on('pinchend', end);\r\n      recognizer.on('pinchcancel', end);\r\n    }\r\n\r\n    recognizer.on('panstart', startGrab);\r\n    recognizer.on('press', startGrab);\r\n\r\n    recognizer.on('pinchstart', startZoom);\r\n  }\r\n\r\n  if (dragging) {\r\n\r\n    // simulate hover during dragging\r\n    eventBus.on('drag.move', function(event) {\r\n\r\n      var originalEvent = event.originalEvent;\r\n\r\n      if (!originalEvent || originalEvent instanceof MouseEvent) {\r\n        return;\r\n      }\r\n\r\n      var position = Event.toPoint(originalEvent);\r\n\r\n      // this gets really expensive ...\r\n      var node = document.elementFromPoint(position.x, position.y),\r\n          gfx = getGfx(node),\r\n          element = gfx && elementRegistry.get(gfx);\r\n\r\n      if (element !== event.hover) {\r\n        if (event.hover) {\r\n          dragging.out(event);\r\n        }\r\n\r\n        if (element) {\r\n          dragging.hover({ element: element, gfx: gfx });\r\n\r\n          event.hover = element;\r\n          event.hoverGfx = gfx;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (contextPad) {\r\n\r\n    eventBus.on('contextPad.create', function(event) {\r\n      var node = event.pad.html;\r\n\r\n      // touch recognizer\r\n      var padRecognizer = createTouchRecognizer(node);\r\n\r\n      padRecognizer.on('panstart', function(event) {\r\n        log('context-pad', 'panstart', event);\r\n        contextPad.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('press', function(event) {\r\n        log('context-pad', 'press', event);\r\n        contextPad.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('tap', function(event) {\r\n        log('context-pad', 'tap', event);\r\n        contextPad.trigger('click', event);\r\n      });\r\n    });\r\n  }\r\n\r\n  if (palette) {\r\n    eventBus.on('palette.create', function(event) {\r\n      var node = event.html;\r\n\r\n      // touch recognizer\r\n      var padRecognizer = createTouchRecognizer(node);\r\n\r\n      padRecognizer.on('panstart', function(event) {\r\n        log('palette', 'panstart', event);\r\n        palette.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('press', function(event) {\r\n        log('palette', 'press', event);\r\n        palette.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('tap', function(event) {\r\n        log('palette', 'tap', event);\r\n        palette.trigger('click', event);\r\n      });\r\n    });\r\n  }\r\n\r\n  eventBus.on('canvas.init', function(event) {\r\n    initEvents(event.svg);\r\n  });\r\n}\r\n\r\n\r\nTouchInteractionEvents.$inject = [\r\n  'injector',\r\n  'canvas',\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'interactionEvents',\r\n  'touchFix'\r\n];\r\n\r\nmodule.exports = TouchInteractionEvents;\r\n","module.exports = {\r\n  __depends__: [ require(170) ],\r\n  __init__: [ 'touchInteractionEvents' ],\r\n  touchInteractionEvents: [ 'type', require(246) ],\r\n  touchFix: [ 'type', require(245) ]\r\n};","module.exports = {\r\n  translate: [ 'value', require(249) ]\r\n};","'use strict';\r\n\r\n/**\r\n * A simple translation stub to be used for multi-language support\r\n * in diagrams. Can be easily replaced with a more sophisticated\r\n * solution.\r\n *\r\n * @example\r\n *\r\n * // use it inside any diagram component by injecting `translate`.\r\n *\r\n * function MyService(translate) {\r\n *   alert(translate('HELLO {you}', { you: 'You!' }));\r\n * }\r\n *\r\n * @param {String} template to interpolate\r\n * @param {Object} [replacements] a map with substitutes\r\n *\r\n * @return {String} the translated string\r\n */\r\nmodule.exports = function translate(template, replacements) {\r\n\r\n  replacements = replacements || {};\r\n\r\n  return template.replace(/{([^}]+)}/g, function(_, key) {\r\n    return replacements[key] || '{' + key + '}';\r\n  });\r\n};","'use strict';\r\n\r\nvar getMid = require(252).getMid;\r\n\r\n\r\n/**\r\n * A base connection layouter implementation\r\n * that layouts the connection by directly connecting\r\n * mid(source) + mid(target).\r\n */\r\nfunction BaseLayouter() {}\r\n\r\nmodule.exports = BaseLayouter;\r\n\r\n\r\n/**\r\n * Return the new layouted waypoints for the given connection.\r\n *\r\n * The connection passed is still unchanged; you may figure out about\r\n * the new connection start / end via the layout hints provided.\r\n *\r\n * @param {djs.model.Connection} connection\r\n * @param {Object} [hints]\r\n * @param {Point} [hints.connectionStart]\r\n * @param {Point} [hints.connectionEnd]\r\n *\r\n * @return {Array<Point>} the layouted connection waypoints\r\n */\r\nBaseLayouter.prototype.layoutConnection = function(connection, hints) {\r\n\r\n  hints = hints || {};\r\n\r\n  return [\r\n    hints.connectionStart || getMid(connection.source),\r\n    hints.connectionEnd || getMid(connection.target)\r\n  ];\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(431);\r\n\r\nvar LayoutUtil = require(252);\r\n\r\n\r\nfunction dockingToPoint(docking) {\r\n  // use the dockings actual point and\r\n  // retain the original docking\r\n  return assign({ original: docking.point.original || docking.point }, docking.actual);\r\n}\r\n\r\n\r\n/**\r\n * A {@link ConnectionDocking} that crops connection waypoints based on\r\n * the path(s) of the connection source and target.\r\n *\r\n * @param {djs.core.ElementRegistry} elementRegistry\r\n */\r\nfunction CroppingConnectionDocking(elementRegistry, graphicsFactory) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n}\r\n\r\nCroppingConnectionDocking.$inject = [ 'elementRegistry', 'graphicsFactory' ];\r\n\r\nmodule.exports = CroppingConnectionDocking;\r\n\r\n\r\n/**\r\n * @inheritDoc ConnectionDocking#getCroppedWaypoints\r\n */\r\nCroppingConnectionDocking.prototype.getCroppedWaypoints = function(connection, source, target) {\r\n\r\n  source = source || connection.source;\r\n  target = target || connection.target;\r\n\r\n  var sourceDocking = this.getDockingPoint(connection, source, true),\r\n      targetDocking = this.getDockingPoint(connection, target);\r\n\r\n  var croppedWaypoints = connection.waypoints.slice(sourceDocking.idx + 1, targetDocking.idx);\r\n\r\n  croppedWaypoints.unshift(dockingToPoint(sourceDocking));\r\n  croppedWaypoints.push(dockingToPoint(targetDocking));\r\n\r\n  return croppedWaypoints;\r\n};\r\n\r\n/**\r\n * Return the connection docking point on the specified shape\r\n *\r\n * @inheritDoc ConnectionDocking#getDockingPoint\r\n */\r\nCroppingConnectionDocking.prototype.getDockingPoint = function(connection, shape, dockStart) {\r\n\r\n  var waypoints = connection.waypoints,\r\n      dockingIdx,\r\n      dockingPoint,\r\n      croppedPoint;\r\n\r\n  dockingIdx = dockStart ? 0 : waypoints.length - 1;\r\n  dockingPoint = waypoints[dockingIdx];\r\n\r\n  croppedPoint = this._getIntersection(shape, connection, dockStart);\r\n\r\n  return {\r\n    point: dockingPoint,\r\n    actual: croppedPoint || dockingPoint,\r\n    idx: dockingIdx\r\n  };\r\n};\r\n\r\n\r\n////// helper methods ///////////////////////////////////////////////////\r\n\r\nCroppingConnectionDocking.prototype._getIntersection = function(shape, connection, takeFirst) {\r\n\r\n  var shapePath = this._getShapePath(shape),\r\n      connectionPath = this._getConnectionPath(connection);\r\n\r\n  return LayoutUtil.getElementLineIntersection(shapePath, connectionPath, takeFirst);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getConnectionPath = function(connection) {\r\n  return this._graphicsFactory.getConnectionPath(connection);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getShapePath = function(shape) {\r\n  return this._graphicsFactory.getShapePath(shape);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n","'use strict';\r\n\r\nvar isObject = require(426),\r\n    sortBy = require(310),\r\n    pointDistance = require(268).pointDistance;\r\n\r\nvar intersection = require(271).intersection;\r\n\r\n\r\nfunction roundBounds(bounds) {\r\n  return {\r\n    x: Math.round(bounds.x),\r\n    y: Math.round(bounds.y),\r\n    width: Math.round(bounds.width),\r\n    height: Math.round(bounds.height)\r\n  };\r\n}\r\n\r\nmodule.exports.roundBounds = roundBounds;\r\n\r\n\r\nfunction roundPoint(point) {\r\n\r\n  return {\r\n    x: Math.round(point.x),\r\n    y: Math.round(point.y)\r\n  };\r\n}\r\n\r\nmodule.exports.roundPoint = roundPoint;\r\n\r\n\r\n/**\r\n * Convert the given bounds to a { top, left, bottom, right } descriptor.\r\n *\r\n * @param {Bounds|Point} bounds\r\n *\r\n * @return {Object}\r\n */\r\nfunction asTRBL(bounds) {\r\n  return {\r\n    top: bounds.y,\r\n    right: bounds.x + (bounds.width || 0),\r\n    bottom: bounds.y + (bounds.height || 0),\r\n    left: bounds.x\r\n  };\r\n}\r\n\r\nmodule.exports.asTRBL = asTRBL;\r\n\r\n/**\r\n * Convert a { top, left, bottom, right } to an objects bounds.\r\n *\r\n * @param {Object} trbl\r\n *\r\n * @return {Bounds}\r\n */\r\nfunction asBounds(trbl) {\r\n  return {\r\n    x: trbl.left,\r\n    y: trbl.top,\r\n    width: trbl.right - trbl.left,\r\n    height: trbl.bottom - trbl.top\r\n  };\r\n}\r\n\r\nmodule.exports.asBounds = asBounds;\r\n\r\n\r\n/**\r\n * Get the mid of the given bounds or point.\r\n *\r\n * @param {Bounds|Point} bounds\r\n *\r\n * @return {Point}\r\n */\r\nfunction getMid(bounds) {\r\n  return roundPoint({\r\n    x: bounds.x + (bounds.width || 0) / 2,\r\n    y: bounds.y + (bounds.height || 0) / 2\r\n  });\r\n}\r\n\r\nmodule.exports.getMid = getMid;\r\n\r\n\r\n////// orientation utils //////////////////////////////\r\n\r\n/**\r\n * Get orientation of the given rectangle with respect to\r\n * the reference rectangle.\r\n *\r\n * A padding (positive or negative) may be passed to influence\r\n * horizontal / vertical orientation and intersection.\r\n *\r\n * @param {Bounds} rect\r\n * @param {Bounds} reference\r\n * @param {Point|Number} padding\r\n *\r\n * @return {String} the orientation; one of top, top-left, left, ..., bottom, right or intersect.\r\n */\r\nfunction getOrientation(rect, reference, padding) {\r\n\r\n  padding = padding || 0;\r\n\r\n  // make sure we can use an object, too\r\n  // for individual { x, y } padding\r\n  if (!isObject(padding)) {\r\n    padding = { x: padding, y: padding };\r\n  }\r\n\r\n\r\n  var rectOrientation = asTRBL(rect),\r\n      referenceOrientation = asTRBL(reference);\r\n\r\n  var top = rectOrientation.bottom + padding.y <= referenceOrientation.top,\r\n      right = rectOrientation.left - padding.x >= referenceOrientation.right,\r\n      bottom = rectOrientation.top - padding.y >= referenceOrientation.bottom,\r\n      left = rectOrientation.right + padding.x <= referenceOrientation.left;\r\n\r\n  var vertical = top ? 'top' : (bottom ? 'bottom' : null),\r\n      horizontal = left ? 'left' : (right ? 'right' : null);\r\n\r\n  if (horizontal && vertical) {\r\n    return vertical + '-' + horizontal;\r\n  } else {\r\n    return horizontal || vertical || 'intersect';\r\n  }\r\n}\r\n\r\nmodule.exports.getOrientation = getOrientation;\r\n\r\n\r\n////// intersection utils //////////////////////////////\r\n\r\n/**\r\n * Get intersection between an element and a line path.\r\n *\r\n * @param {PathDef} elementPath\r\n * @param {PathDef} linePath\r\n * @param {Boolean} cropStart crop from start or end\r\n *\r\n * @return {Point}\r\n */\r\nfunction getElementLineIntersection(elementPath, linePath, cropStart) {\r\n\r\n  var intersections = getIntersections(elementPath, linePath);\r\n\r\n  // recognize intersections\r\n  // only one -> choose\r\n  // two close together -> choose first\r\n  // two or more distinct -> pull out appropriate one\r\n  // none -> ok (fallback to point itself)\r\n  if (intersections.length === 1) {\r\n    return roundPoint(intersections[0]);\r\n  } else if (intersections.length === 2 && pointDistance(intersections[0], intersections[1]) < 1) {\r\n    return roundPoint(intersections[0]);\r\n  } else if (intersections.length > 1) {\r\n\r\n    // sort by intersections based on connection segment +\r\n    // distance from start\r\n    intersections = sortBy(intersections, function(i) {\r\n      var distance = Math.floor(i.t2 * 100) || 1;\r\n\r\n      distance = 100 - distance;\r\n\r\n      distance = (distance < 10 ? '0' : '') + distance;\r\n\r\n      // create a sort string that makes sure we sort\r\n      // line segment ASC + line segment position DESC (for cropStart)\r\n      // line segment ASC + line segment position ASC (for cropEnd)\r\n      return i.segment2 + '#' + distance;\r\n    });\r\n\r\n    return roundPoint(intersections[cropStart ? 0 : intersections.length - 1]);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nmodule.exports.getElementLineIntersection = getElementLineIntersection;\r\n\r\n\r\nfunction getIntersections(a, b) {\r\n  return intersection(a, b);\r\n}\r\n\r\nmodule.exports.getIntersections = getIntersections;\r\n","'use strict';\r\n\r\nvar isArray = require(422),\r\n    find = require(302),\r\n    without = require(297),\r\n    assign = require(431);\r\n\r\nvar LayoutUtil = require(252),\r\n    Geometry = require(268);\r\n\r\nvar getOrientation = LayoutUtil.getOrientation,\r\n    getMid = LayoutUtil.getMid,\r\n    pointsAligned = Geometry.pointsAligned;\r\n\r\nvar pointInRect = Geometry.pointInRect,\r\n    pointDistance = Geometry.pointDistance;\r\n\r\nvar INTERSECTION_THRESHOLD = 20,\r\n    ORIENTATION_THRESHOLD = {\r\n      'h:h': 20,\r\n      'v:v': 20,\r\n      'h:v': -10,\r\n      'v:h': -10\r\n    };\r\n\r\n\r\n/**\r\n * Returns the mid points for a manhattan connection between two points.\r\n *\r\n * @example\r\n *\r\n * [a]----[x]\r\n *         |\r\n *        [x]----[b]\r\n *\r\n * @example\r\n *\r\n * [a]----[x]\r\n *         |\r\n *        [b]\r\n *\r\n * @param  {Point} a\r\n * @param  {Point} b\r\n * @param  {String} directions\r\n *\r\n * @return {Array<Point>}\r\n */\r\nmodule.exports.getBendpoints = function(a, b, directions) {\r\n\r\n  directions = directions || 'h:h';\r\n\r\n  var xmid, ymid;\r\n\r\n  // one point, next to a\r\n  if (directions === 'h:v') {\r\n    return [ { x: b.x, y: a.y } ];\r\n  } else\r\n  // one point, above a\r\n  if (directions === 'v:h') {\r\n    return [ { x: a.x, y: b.y } ];\r\n  } else\r\n  // vertical edge xmid\r\n  if (directions === 'h:h') {\r\n    xmid = Math.round((b.x - a.x) / 2 + a.x);\r\n\r\n    return [\r\n      { x: xmid, y: a.y },\r\n      { x: xmid, y: b.y }\r\n    ];\r\n  } else\r\n  // horizontal edge ymid\r\n  if (directions === 'v:v') {\r\n    ymid = Math.round((b.y - a.y) / 2 + a.y);\r\n\r\n    return [\r\n      { x: a.x, y: ymid },\r\n      { x: b.x, y: ymid }\r\n    ];\r\n  } else {\r\n    throw new Error(\r\n      'unknown directions: <' + directions + '>: ' +\r\n      'directions must be specified as {a direction}:{b direction} (direction in h|v)');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Create a connection between the two points according\r\n * to the manhattan layout (only horizontal and vertical) edges.\r\n *\r\n * @param {Point} a\r\n * @param {Point} b\r\n *\r\n * @param {String} [directions='h:h'] specifies manhattan directions for each point as {adirection}:{bdirection}.\r\n                   A directionfor a point is either `h` (horizontal) or `v` (vertical)\r\n *\r\n * @return {Array<Point>}\r\n */\r\nmodule.exports.connectPoints = function(a, b, directions) {\r\n\r\n  var points = [];\r\n\r\n  if (!pointsAligned(a, b)) {\r\n    points = this.getBendpoints(a, b, directions);\r\n  }\r\n\r\n  points.unshift(a);\r\n  points.push(b);\r\n\r\n  return points;\r\n};\r\n\r\n\r\n/**\r\n * Connect two rectangles using a manhattan layouted connection.\r\n *\r\n * @param {Bounds} source source rectangle\r\n * @param {Bounds} target target rectangle\r\n * @param {Point} [start] source docking\r\n * @param {Point} [end] target docking\r\n *\r\n * @param {Object} [hints]\r\n * @param {String} [hints.preserveDocking=source] preserve docking on selected side\r\n * @param {Array<String>} [hints.preferredLayouts]\r\n * @param {Point|Boolean} [hints.connectionStart] whether the start changed\r\n * @param {Point|Boolean} [hints.connectionEnd] whether the end changed\r\n *\r\n * @return {Array<Point>} connection points\r\n */\r\nmodule.exports.connectRectangles = function(source, target, start, end, hints) {\r\n\r\n  var preferredLayouts = hints && hints.preferredLayouts || [];\r\n\r\n  var preferredLayout = without(preferredLayouts, 'straight')[0] || 'h:h';\r\n\r\n  var threshold = ORIENTATION_THRESHOLD[preferredLayout] || 0;\r\n\r\n  var orientation = getOrientation(source, target, threshold);\r\n\r\n  var directions = getDirections(orientation, preferredLayout);\r\n\r\n  start = start || getMid(source);\r\n  end = end || getMid(target);\r\n\r\n  // overlapping elements\r\n  if (!directions) {\r\n    return;\r\n  }\r\n\r\n  if (directions === 'h:h') {\r\n\r\n    switch (orientation) {\r\n    case 'top-right':\r\n    case 'right':\r\n    case 'bottom-right':\r\n      start = { original: start, x: source.x, y: start.y };\r\n      end = { original: end, x: target.x + target.width, y: end.y };\r\n      break;\r\n    case 'top-left':\r\n    case 'left':\r\n    case 'bottom-left':\r\n      start = { original: start, x: source.x + source.width, y: start.y };\r\n      end = { original: end, x: target.x, y: end.y };\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (directions === 'v:v') {\r\n\r\n    switch (orientation) {\r\n    case 'top-left':\r\n    case 'top':\r\n    case 'top-right':\r\n      start = { original: start, x: start.x, y: source.y + source.height };\r\n      end = { original: end, x: end.x, y: target.y };\r\n      break;\r\n    case 'bottom-left':\r\n    case 'bottom':\r\n    case 'bottom-right':\r\n      start = { original: start, x: start.x, y: source.y };\r\n      end = { original: end, x: end.x, y: target.y + target.height };\r\n      break;\r\n    }\r\n  }\r\n\r\n  return this.connectPoints(start, end, directions);\r\n};\r\n\r\n/**\r\n * Repair the connection between two rectangles, of which one has been updated.\r\n *\r\n * @param {Bounds} source\r\n * @param {Bounds} target\r\n * @param {Point} [start]\r\n * @param {Point} [end]\r\n * @param {Array<Point>} waypoints\r\n * @param {Object} [hints]\r\n * @param {Array<String>} [hints.preferredLayouts] list of preferred layouts\r\n * @param {Boolean} [hints.connectionStart]\r\n * @param {Boolean} [hints.connectionEnd]\r\n *\r\n * @return {Array<Point>} repaired waypoints\r\n */\r\nmodule.exports.repairConnection = function(source, target, start, end, waypoints, hints) {\r\n\r\n  if (isArray(start)) {\r\n    waypoints = start;\r\n    hints = end;\r\n\r\n    start = getMid(source);\r\n    end = getMid(target);\r\n  }\r\n\r\n  hints = assign({ preferredLayouts: [] }, hints);\r\n  waypoints = waypoints || [];\r\n\r\n  var preferredLayouts = hints.preferredLayouts,\r\n      layoutStraight = preferredLayouts.indexOf('straight') !== -1,\r\n      repairedWaypoints;\r\n\r\n  // just layout non-existing or simple connections\r\n  // attempt to render straight lines, if required\r\n\r\n  if (layoutStraight) {\r\n    // attempt to layout a straight line\r\n    repairedWaypoints = this.layoutStraight(source, target, start, end, hints);\r\n  }\r\n\r\n  if (!repairedWaypoints) {\r\n    // check if we layout from start or end\r\n    if (hints.connectionEnd) {\r\n      repairedWaypoints = this._repairConnectionSide(target, source, end, waypoints.slice().reverse());\r\n      repairedWaypoints = repairedWaypoints && repairedWaypoints.reverse();\r\n    } else\r\n    if (hints.connectionStart) {\r\n      repairedWaypoints = this._repairConnectionSide(source, target, start, waypoints);\r\n    } else\r\n    // or whether nothing seems to have changed\r\n    if (waypoints && waypoints.length) {\r\n      repairedWaypoints = waypoints;\r\n    }\r\n  }\r\n\r\n  // simply reconnect if nothing else worked\r\n  if (!repairedWaypoints) {\r\n    repairedWaypoints = this.connectRectangles(source, target, start, end, hints);\r\n  }\r\n\r\n  return repairedWaypoints;\r\n};\r\n\r\n\r\nfunction inRange(a, start, end) {\r\n  return a >= start && a <= end;\r\n}\r\n\r\nfunction isInRange(axis, a, b) {\r\n  var size = {\r\n    x: 'width',\r\n    y: 'height'\r\n  };\r\n\r\n  return inRange(a[axis], b[axis], b[axis] + b[size[axis]]);\r\n}\r\n\r\n/**\r\n * Layout a straight connection\r\n *\r\n * @param {Bounds} source\r\n * @param {Bounds} target\r\n * @param {Point} start\r\n * @param {Point} end\r\n * @param {Object} [hints]\r\n *\r\n * @return {Array<Point>} waypoints if straight layout worked\r\n */\r\nmodule.exports.layoutStraight = function(source, target, start, end, hints) {\r\n  var axis = {},\r\n      primaryAxis,\r\n      orientation;\r\n\r\n  orientation = getOrientation(source, target);\r\n\r\n  // We're only interested in layouting a straight connection\r\n  // if the shapes are horizontally or vertically aligned\r\n  if (!/^(top|bottom|left|right)$/.test(orientation)) {\r\n    return null;\r\n  }\r\n\r\n  if (/top|bottom/.test(orientation)) {\r\n    primaryAxis = 'x';\r\n  }\r\n\r\n  if (/left|right/.test(orientation)) {\r\n    primaryAxis = 'y';\r\n  }\r\n\r\n  if (hints.preserveDocking === 'target') {\r\n\r\n    if (!isInRange(primaryAxis, end, source)) {\r\n      return null;\r\n    }\r\n\r\n    axis[primaryAxis] = end[primaryAxis];\r\n\r\n    return [\r\n      {\r\n        x: axis.x !== undefined ? axis.x : start.x,\r\n        y: axis.y !== undefined ? axis.y : start.y,\r\n        original: {\r\n          x: axis.x !== undefined ? axis.x : start.x,\r\n          y: axis.y !== undefined ? axis.y : start.y\r\n        }\r\n      },\r\n      {\r\n        x: end.x,\r\n        y: end.y\r\n      }\r\n    ];\r\n\r\n  } else {\r\n\r\n    if (!isInRange(primaryAxis, start, target)) {\r\n      return null;\r\n    }\r\n\r\n    axis[primaryAxis] = start[primaryAxis];\r\n\r\n    return [\r\n      {\r\n        x: start.x,\r\n        y: start.y\r\n      },\r\n      {\r\n        x: axis.x !== undefined ? axis.x : end.x,\r\n        y: axis.y !== undefined ? axis.y : end.y,\r\n        original: {\r\n          x: axis.x !== undefined ? axis.x : end.x,\r\n          y: axis.y !== undefined ? axis.y : end.y\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Repair a connection from one side that moved.\r\n *\r\n * @param {Bounds} moved\r\n * @param {Bounds} other\r\n * @param {Point} newDocking\r\n * @param {Array<Point>} points originalPoints from moved to other\r\n *\r\n * @return {Array<Point>} the repaired points between the two rectangles\r\n */\r\nmodule.exports._repairConnectionSide = function(moved, other, newDocking, points) {\r\n\r\n  function needsRelayout(moved, other, points) {\r\n\r\n    if (points.length < 3) {\r\n      return true;\r\n    }\r\n\r\n    if (points.length > 4) {\r\n      return false;\r\n    }\r\n\r\n    // relayout if two points overlap\r\n    // this is most likely due to\r\n    return !!find(points, function(p, idx) {\r\n      var q = points[idx - 1];\r\n\r\n      return q && pointDistance(p, q) < 3;\r\n    });\r\n  }\r\n\r\n  function repairBendpoint(candidate, oldPeer, newPeer) {\r\n\r\n    var alignment = pointsAligned(oldPeer, candidate);\r\n\r\n    switch (alignment) {\r\n    case 'v':\r\n        // repair vertical alignment\r\n      return { x: candidate.x, y: newPeer.y };\r\n    case 'h':\r\n        // repair horizontal alignment\r\n      return { x: newPeer.x, y: candidate.y };\r\n    }\r\n\r\n    return { x: candidate.x, y: candidate. y };\r\n  }\r\n\r\n  function removeOverlapping(points, a, b) {\r\n    var i;\r\n\r\n    for (i = points.length - 2; i !== 0; i--) {\r\n\r\n      // intersects (?) break, remove all bendpoints up to this one and relayout\r\n      if (pointInRect(points[i], a, INTERSECTION_THRESHOLD) ||\r\n          pointInRect(points[i], b, INTERSECTION_THRESHOLD)) {\r\n\r\n        // return sliced old connection\r\n        return points.slice(i);\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n\r\n  // (0) only repair what has layoutable bendpoints\r\n\r\n  // (1) if only one bendpoint and on shape moved onto other shapes axis\r\n  //     (horizontally / vertically), relayout\r\n\r\n  if (needsRelayout(moved, other, points)) {\r\n    return null;\r\n  }\r\n\r\n  var oldDocking = points[0],\r\n      newPoints = points.slice(),\r\n      slicedPoints;\r\n\r\n  // (2) repair only last line segment and only if it was layouted before\r\n\r\n  newPoints[0] = newDocking;\r\n  newPoints[1] = repairBendpoint(newPoints[1], oldDocking, newDocking);\r\n\r\n\r\n  // (3) if shape intersects with any bendpoint after repair,\r\n  //     remove all segments up to this bendpoint and repair from there\r\n\r\n  slicedPoints = removeOverlapping(newPoints, moved, other);\r\n\r\n  if (slicedPoints !== newPoints) {\r\n    return this._repairConnectionSide(moved, other, newDocking, slicedPoints);\r\n  }\r\n\r\n  return newPoints;\r\n};\r\n\r\n/**\r\n * Returns the manhattan directions connecting two rectangles\r\n * with the given orientation.\r\n *\r\n * @example\r\n *\r\n * getDirections('top'); // -> 'v:v'\r\n *\r\n * getDirections('top-right', 'v:h'); // -> 'v:h'\r\n * getDirections('top-right', 'h:h'); // -> 'h:h'\r\n *\r\n *\r\n * @param {String} orientation\r\n * @param {String} defaultLayout\r\n *\r\n * @return {String}\r\n */\r\nfunction getDirections(orientation, defaultLayout) {\r\n\r\n  switch (orientation) {\r\n  case 'intersect':\r\n    return null;\r\n\r\n  case 'top':\r\n  case 'bottom':\r\n    return 'v:v';\r\n\r\n  case 'left':\r\n  case 'right':\r\n    return 'h:h';\r\n\r\n    // 'top-left'\r\n    // 'top-right'\r\n    // 'bottom-left'\r\n    // 'bottom-right'\r\n  default:\r\n    return defaultLayout;\r\n  }\r\n}\r\n","'use strict';\r\n\r\nvar assign = require(431),\r\n    inherits = require(289);\r\n\r\nvar Refs = require(466);\r\n\r\nvar parentRefs = new Refs({ name: 'children', enumerable: true, collection: true }, { name: 'parent' }),\r\n    labelRefs = new Refs({ name: 'label', enumerable: true }, { name: 'labelTarget' }),\r\n    attacherRefs = new Refs({ name: 'attachers', collection: true }, { name: 'host' }),\r\n    outgoingRefs = new Refs({ name: 'outgoing', collection: true }, { name: 'source' }),\r\n    incomingRefs = new Refs({ name: 'incoming', collection: true }, { name: 'target' });\r\n\r\n/**\r\n * @namespace djs.model\r\n */\r\n\r\n/**\r\n * @memberOf djs.model\r\n */\r\n\r\n/**\r\n * The basic graphical representation\r\n *\r\n * @class\r\n *\r\n * @abstract\r\n */\r\nfunction Base() {\r\n\r\n  /**\r\n   * The object that backs up the shape\r\n   *\r\n   * @name Base#businessObject\r\n   * @type Object\r\n   */\r\n  Object.defineProperty(this, 'businessObject', {\r\n    writable: true\r\n  });\r\n\r\n  /**\r\n   * The parent shape\r\n   *\r\n   * @name Base#parent\r\n   * @type Shape\r\n   */\r\n  parentRefs.bind(this, 'parent');\r\n\r\n  /**\r\n   * @name Base#label\r\n   * @type Label\r\n   */\r\n  labelRefs.bind(this, 'label');\r\n\r\n  /**\r\n   * The list of outgoing connections\r\n   *\r\n   * @name Base#outgoing\r\n   * @type Array<Connection>\r\n   */\r\n  outgoingRefs.bind(this, 'outgoing');\r\n\r\n  /**\r\n   * The list of incoming connections\r\n   *\r\n   * @name Base#incoming\r\n   * @type Array<Connection>\r\n   */\r\n  incomingRefs.bind(this, 'incoming');\r\n}\r\n\r\n\r\n/**\r\n * A graphical object\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Base\r\n */\r\nfunction Shape() {\r\n  Base.call(this);\r\n\r\n  /**\r\n   * The list of children\r\n   *\r\n   * @name Shape#children\r\n   * @type Array<Base>\r\n   */\r\n  parentRefs.bind(this, 'children');\r\n\r\n  /**\r\n   * @name Shape#host\r\n   * @type Shape\r\n   */\r\n  attacherRefs.bind(this, 'host');\r\n\r\n  /**\r\n   * @name Shape#attachers\r\n   * @type Shape\r\n   */\r\n  attacherRefs.bind(this, 'attachers');\r\n}\r\n\r\ninherits(Shape, Base);\r\n\r\n\r\n/**\r\n * A root graphical object\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Shape\r\n */\r\nfunction Root() {\r\n  Shape.call(this);\r\n}\r\n\r\ninherits(Root, Shape);\r\n\r\n\r\n/**\r\n * A label for an element\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Shape\r\n */\r\nfunction Label() {\r\n  Shape.call(this);\r\n\r\n  /**\r\n   * The labeled element\r\n   *\r\n   * @name Label#labelTarget\r\n   * @type Base\r\n   */\r\n  labelRefs.bind(this, 'labelTarget');\r\n}\r\n\r\ninherits(Label, Shape);\r\n\r\n\r\n/**\r\n * A connection between two elements\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Base\r\n */\r\nfunction Connection() {\r\n  Base.call(this);\r\n\r\n  /**\r\n   * The element this connection originates from\r\n   *\r\n   * @name Connection#source\r\n   * @type Base\r\n   */\r\n  outgoingRefs.bind(this, 'source');\r\n\r\n  /**\r\n   * The element this connection points to\r\n   *\r\n   * @name Connection#target\r\n   * @type Base\r\n   */\r\n  incomingRefs.bind(this, 'target');\r\n}\r\n\r\ninherits(Connection, Base);\r\n\r\n\r\nvar types = {\r\n  connection: Connection,\r\n  shape: Shape,\r\n  label: Label,\r\n  root: Root\r\n};\r\n\r\n/**\r\n * Creates a new model element of the specified type\r\n *\r\n * @method create\r\n *\r\n * @example\r\n *\r\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\r\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\r\n *\r\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\r\n *\r\n * @param  {String} type lower-cased model name\r\n * @param  {Object} attrs attributes to initialize the new model instance with\r\n *\r\n * @return {Base} the new model instance\r\n */\r\nmodule.exports.create = function(type, attrs) {\r\n  var Type = types[type];\r\n  if (!Type) {\r\n    throw new Error('unknown type: <' + type + '>');\r\n  }\r\n  return assign(new Type(), attrs);\r\n};\r\n\r\n\r\nmodule.exports.Base = Base;\r\nmodule.exports.Root = Root;\r\nmodule.exports.Shape = Shape;\r\nmodule.exports.Connection = Connection;\r\nmodule.exports.Label = Label;\r\n","'use strict';\r\n\r\nvar Cursor = require(265),\r\n    ClickTrap = require(262),\r\n    substract = require(273).substract,\r\n    domEvent = require(450),\r\n    domClosest = require(447),\r\n    EventUtil = require(267);\r\n\r\n\r\nfunction length(point) {\r\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\r\n}\r\n\r\n\r\nvar THRESHOLD = 15;\r\n\r\n\r\nfunction MoveCanvas(eventBus, canvas) {\r\n\r\n  var container = canvas._container,\r\n      context;\r\n\r\n\r\n  function handleMove(event) {\r\n\r\n    var start = context.start,\r\n        position = EventUtil.toPoint(event),\r\n        delta = substract(position, start);\r\n\r\n    if (!context.dragging && length(delta) > THRESHOLD) {\r\n      context.dragging = true;\r\n\r\n      // prevent mouse click in this\r\n      // interaction sequence\r\n      ClickTrap.install();\r\n\r\n      Cursor.set('grab');\r\n    }\r\n\r\n    if (context.dragging) {\r\n\r\n      var lastPosition = context.last || context.start;\r\n\r\n      delta = substract(position, lastPosition);\r\n\r\n      canvas.scroll({\r\n        dx: delta.x,\r\n        dy: delta.y\r\n      });\r\n\r\n      context.last = position;\r\n    }\r\n\r\n    // prevent select\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  function handleEnd(event) {\r\n    domEvent.unbind(document, 'mousemove', handleMove);\r\n    domEvent.unbind(document, 'mouseup', handleEnd);\r\n\r\n    context = null;\r\n\r\n    Cursor.unset();\r\n  }\r\n\r\n  function handleStart(event) {\r\n    // event is already handled by '.djs-draggable'\r\n    if (domClosest(event.target, '.djs-draggable')) {\r\n      return;\r\n    }\r\n\r\n\r\n    // reject non-left left mouse button or modifier key\r\n    if (event.button || event.ctrlKey || event.shiftKey || event.altKey) {\r\n      return;\r\n    }\r\n\r\n    context = {\r\n      start: EventUtil.toPoint(event)\r\n    };\r\n\r\n    domEvent.bind(document, 'mousemove', handleMove);\r\n    domEvent.bind(document, 'mouseup', handleEnd);\r\n  }\r\n\r\n  domEvent.bind(container, 'mousedown', handleStart);\r\n}\r\n\r\n\r\nMoveCanvas.$inject = [ 'eventBus', 'canvas' ];\r\n\r\nmodule.exports = MoveCanvas;\r\n","module.exports = {\r\n  __init__: [ 'moveCanvas' ],\r\n  moveCanvas: [ 'type', require(255) ]\r\n};","module.exports = {\r\n  __depends__: [ require(247) ]\r\n};","'use strict';\r\n\r\nvar domEvent = require(450),\r\n    domClosest = require(447);\r\n\r\nvar hasPrimaryModifier = require(274).hasPrimaryModifier,\r\n    hasSecondaryModifier = require(274).hasSecondaryModifier;\r\n\r\nvar isMac = require(275).isMac;\r\n\r\nvar getStepRange = require(259).getStepRange,\r\n    cap = require(259).cap;\r\n\r\nvar log10 = require(273).log10;\r\n\r\nvar bind = require(312);\r\n\r\nvar RANGE = { min: 0.2, max: 4 },\r\n    NUM_STEPS = 10;\r\n\r\n\r\n/**\r\n * An implementation of zooming and scrolling within the\r\n * {@link Canvas} via the mouse wheel.\r\n *\r\n * Mouse wheel zooming / scrolling may be disabled using\r\n * the {@link toggle(enabled)} method.\r\n *\r\n * Additionally users can define the initial enabled state\r\n * by passing `{ zoomScroll: { enabled: false } }` at diagram\r\n * initialization.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {Object} config\r\n */\r\nfunction ZoomScroll(eventBus, canvas, config) {\r\n\r\n  this._enabled = false;\r\n\r\n  this._canvas = canvas;\r\n  this._container = canvas._container;\r\n\r\n  this._handleWheel = bind(this._handleWheel, this);\r\n\r\n  var newEnabled = !config || config.enabled !== false;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('canvas.init', function(e) {\r\n    self._init(newEnabled);\r\n  });\r\n}\r\n\r\nZoomScroll.$inject = [ 'eventBus', 'canvas', 'config.zoomScroll' ];\r\n\r\nmodule.exports = ZoomScroll;\r\n\r\nZoomScroll.prototype.scroll = function scroll(delta) {\r\n  this._canvas.scroll(delta);\r\n};\r\n\r\n\r\nZoomScroll.prototype.reset = function reset() {\r\n  this._canvas.zoom('fit-viewport');\r\n};\r\n\r\n\r\nZoomScroll.prototype.zoom = function zoom(direction, position) {\r\n  var canvas = this._canvas;\r\n  var currentZoom = canvas.zoom(false);\r\n\r\n  var factor = Math.pow(1 + Math.abs(direction) , direction > 0 ? 1 : -1);\r\n\r\n  canvas.zoom(cap(RANGE, currentZoom * factor), position);\r\n};\r\n\r\n\r\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\r\n  // event is already handled by '.djs-scrollable'\r\n  if (domClosest(event.target, '.djs-scrollable', true)) {\r\n    return;\r\n  }\r\n\r\n  var element = this._container;\r\n\r\n  event.preventDefault();\r\n\r\n  // mouse-event: SELECTION_KEY\r\n  // mouse-event: AND_KEY\r\n  var isVerticalScroll = hasPrimaryModifier(event),\r\n      isHorizontalScroll = hasSecondaryModifier(event);\r\n\r\n  var factor;\r\n\r\n  if (isVerticalScroll || isHorizontalScroll) {\r\n\r\n    if (isMac) {\r\n      factor = event.deltaMode === 0 ? 1.25 : 50;\r\n    } else {\r\n      factor = event.deltaMode === 0 ? 1/40 : 1/2;\r\n    }\r\n\r\n    var delta = {};\r\n\r\n    if (isHorizontalScroll) {\r\n      delta.dx = (factor * (event.deltaX || event.deltaY));\r\n    } else {\r\n      delta.dy = (factor * event.deltaY);\r\n    }\r\n    this.scroll(delta);\r\n  } else {\r\n    factor = (event.deltaMode === 0 ? 1/40 : 1/2);\r\n\r\n    var elementRect = element.getBoundingClientRect();\r\n\r\n    var offset =  {\r\n      x: event.clientX - elementRect.left,\r\n      y: event.clientY - elementRect.top\r\n    };\r\n\r\n    // zoom in relative to diagram {x,y} coordinates\r\n    this.zoom(event.deltaY * factor / (-5), offset);\r\n  }\r\n};\r\n\r\n/**\r\n * Zoom along fixed zoom steps\r\n *\r\n * @param {Integer} direction zoom direction (1 for zooming in, -1 for out)\r\n */\r\nZoomScroll.prototype.stepZoom = function stepZoom(direction, position) {\r\n\r\n  var canvas = this._canvas,\r\n      stepRange = getStepRange(RANGE, NUM_STEPS);\r\n\r\n  direction = direction > 0 ? 1 : -1;\r\n\r\n  var currentLinearZoomLevel = log10(canvas.zoom());\r\n\r\n  // snap to a proximate zoom step\r\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepRange) * stepRange;\r\n\r\n  // increase or decrease one zoom step in the given direction\r\n  newLinearZoomLevel += stepRange * direction;\r\n\r\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\r\n  // (e.g. 2 for an absolute x2 zoom)\r\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\r\n\r\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\r\n};\r\n\r\n\r\n/**\r\n * Toggle the zoom scroll ability via mouse wheel.\r\n *\r\n * @param  {Boolean} [newEnabled] new enabled state\r\n */\r\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\r\n\r\n  var element = this._container;\r\n  var handleWheel = this._handleWheel;\r\n\r\n  var oldEnabled = this._enabled;\r\n\r\n  if (typeof newEnabled === 'undefined') {\r\n    newEnabled = !oldEnabled;\r\n  }\r\n\r\n  // only react on actual changes\r\n  if (oldEnabled !== newEnabled) {\r\n\r\n    // add or remove wheel listener based on\r\n    // changed enabled state\r\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\r\n  }\r\n\r\n  this._enabled = newEnabled;\r\n\r\n  return newEnabled;\r\n};\r\n\r\n\r\nZoomScroll.prototype._init = function(newEnabled) {\r\n  this.toggle(newEnabled);\r\n};\r\n","'use strict';\r\n\r\n\r\nvar log10 = require(273).log10;\r\n\r\n/**\r\n * Get the linear range between two zoom steps based on the\r\n * total number of zoom steps (defined as NUM_STEPS)\r\n */\r\nmodule.exports.getStepRange = function(range, steps) {\r\n\r\n  var minLinearRange = log10(range.min),\r\n      maxLinearRange = log10(range.max);\r\n\r\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\r\n\r\n  return absoluteLinearRange / steps;\r\n};\r\n\r\nmodule.exports.cap = function(range, scale) {\r\n  return Math.max(range.min, Math.min(range.max, scale));\r\n};\r\n","module.exports = {\r\n  __init__: [ 'zoomScroll' ],\r\n  zoomScroll: [ 'type', require(258) ]\r\n};","'use strict';\r\n\r\nvar roundPoint = require(252).roundPoint;\r\n\r\nvar center = require(276).center,\r\n    delta = require(276).delta;\r\n\r\n\r\n/**\r\n * Calculates the absolute point relative to the new element's position\r\n *\r\n * @param {point} point [absolute]\r\n * @param {bounds} oldBounds\r\n * @param {bounds} newBounds\r\n *\r\n * @return {point} point [absolute]\r\n */\r\nfunction getNewAttachPoint(point, oldBounds, newBounds) {\r\n  var oldCenter = center(oldBounds),\r\n      newCenter = center(newBounds),\r\n      oldDelta = delta(point, oldCenter);\r\n\r\n  var newDelta = {\r\n    x: oldDelta.x * (newBounds.width / oldBounds.width),\r\n    y: oldDelta.y * (newBounds.height / oldBounds.height)\r\n  };\r\n\r\n  return roundPoint({\r\n    x: newCenter.x + newDelta.x,\r\n    y: newCenter.y + newDelta.y\r\n  });\r\n}\r\n\r\nmodule.exports.getNewAttachPoint = getNewAttachPoint;\r\n\r\n\r\n/**\r\n * Calculates the shape's delta relative to a new position\r\n * of a certain element's bounds\r\n *\r\n * @param {djs.model.Shape} point [absolute]\r\n * @param {bounds} oldBounds\r\n * @param {bounds} newBounds\r\n *\r\n * @return {delta} delta\r\n */\r\nfunction getNewAttachShapeDelta(shape, oldBounds, newBounds) {\r\n  var shapeCenter = center(shape),\r\n      oldCenter = center(oldBounds),\r\n      newCenter = center(newBounds),\r\n      shapeDelta = delta(shape, shapeCenter),\r\n      oldCenterDelta = delta(shapeCenter, oldCenter);\r\n\r\n  var newCenterDelta = {\r\n    x: oldCenterDelta.x * (newBounds.width / oldBounds.width),\r\n    y: oldCenterDelta.y * (newBounds.height / oldBounds.height)\r\n  };\r\n\r\n  var newShapeCenter = {\r\n    x: newCenter.x + newCenterDelta.x,\r\n    y: newCenter.y + newCenterDelta.y\r\n  };\r\n\r\n  return roundPoint({\r\n    x: newShapeCenter.x + shapeDelta.x - shape.x,\r\n    y: newShapeCenter.y + shapeDelta.y - shape.y\r\n  });\r\n}\r\n\r\nmodule.exports.getNewAttachShapeDelta = getNewAttachShapeDelta;\r\n","'use strict';\r\n\r\nvar domEvent = require(450),\r\n    stopEvent = require(267).stopEvent;\r\n\r\nfunction trap(event) {\r\n  stopEvent(event);\r\n\r\n  toggle(false);\r\n}\r\n\r\nfunction toggle(active) {\r\n  domEvent[active ? 'bind' : 'unbind'](document.body, 'click', trap, true);\r\n}\r\n\r\n/**\r\n * Installs a click trap that prevents a ghost click following a dragging operation.\r\n *\r\n * @return {Function} a function to immediately remove the installed trap.\r\n */\r\nfunction install() {\r\n\r\n  toggle(true);\r\n\r\n  return function() {\r\n    toggle(false);\r\n  };\r\n}\r\n\r\nmodule.exports.install = install;","'use strict';\r\n\r\n/**\r\n * Failsafe remove an element from a collection\r\n *\r\n * @param  {Array<Object>} [collection]\r\n * @param  {Object} [element]\r\n *\r\n * @return {Number} the previous index of the element\r\n */\r\nmodule.exports.remove = function(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  var idx = collection.indexOf(element);\r\n\r\n  if (idx !== -1) {\r\n    collection.splice(idx, 1);\r\n  }\r\n\r\n  return idx;\r\n};\r\n\r\n/**\r\n * Fail save add an element to the given connection, ensuring\r\n * it does not yet exist.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n * @param {Number} idx\r\n */\r\nmodule.exports.add = function(collection, element, idx) {\r\n\r\n  if (!collection || !element) {\r\n    return;\r\n  }\r\n\r\n  if (typeof idx !== 'number') {\r\n    idx = -1;\r\n  }\r\n\r\n  var currentIdx = collection.indexOf(element);\r\n\r\n  if (currentIdx !== -1) {\r\n\r\n    if (currentIdx === idx) {\r\n      // nothing to do, position has not changed\r\n      return;\r\n    } else {\r\n\r\n      if (idx !== -1) {\r\n        // remove from current position\r\n        collection.splice(currentIdx, 1);\r\n      } else {\r\n        // already exists in collection\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (idx !== -1) {\r\n    // insert at specified position\r\n    collection.splice(idx, 0, element);\r\n  } else {\r\n    // push to end\r\n    collection.push(element);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Fail save get the index of an element in a collection.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n *\r\n * @return {Number} the index or -1 if collection or element do\r\n *                  not exist or the element is not contained.\r\n */\r\nmodule.exports.indexOf = function(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  return collection.indexOf(element);\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(303);\r\n\r\nfunction getTopLevel(elements) {\r\n  var topLevel = {},\r\n      parents = [],\r\n      result = [],\r\n      clearedParents = [];\r\n\r\n  forEach(elements, function(element) {\r\n    var parent = element.parent;\r\n\r\n    if (!topLevel[parent.id]) {\r\n      topLevel[parent.id] = [];\r\n    }\r\n\r\n    if (parents.indexOf(parent.id) === -1) {\r\n      parents.push(parent.id);\r\n    }\r\n\r\n    topLevel[parent.id].push(element);\r\n  });\r\n\r\n  forEach(parents, function(parent) {\r\n    forEach(topLevel[parent], function(element) {\r\n      if (topLevel[element.id]) {\r\n        clearedParents.push(element.id);\r\n      }\r\n    });\r\n  });\r\n\r\n  forEach(parents, function(parent) {\r\n    var idx = clearedParents.indexOf(parent);\r\n\r\n    if (idx === -1) {\r\n      result = result.concat(topLevel[parent]);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.getTopLevel = getTopLevel;\r\n","'use strict';\r\n\r\nvar domClasses = require(445);\r\n\r\nvar CURSOR_CLS_PATTERN = /^djs-cursor-.*$/;\r\n\r\n\r\nmodule.exports.set = function(mode) {\r\n  var classes = domClasses(document.body);\r\n\r\n  classes.removeMatching(CURSOR_CLS_PATTERN);\r\n\r\n  if (mode) {\r\n    classes.add('djs-cursor-' + mode);\r\n  }\r\n};\r\n\r\nmodule.exports.unset = function() {\r\n  this.set(null);\r\n};\r\n\r\nmodule.exports.has = function(mode) {\r\n  var classes = domClasses(document.body);\r\n\r\n  return classes.has('djs-cursor-' + mode);\r\n};\r\n","'use strict';\r\n\r\nvar isArray = require(422),\r\n    isNumber = require(425),\r\n    groupBy = require(304),\r\n    forEach = require(303);\r\n\r\n/**\r\n * Adds an element to a collection and returns true if the\r\n * element was added.\r\n *\r\n * @param {Array<Object>} elements\r\n * @param {Object} e\r\n * @param {Boolean} unique\r\n */\r\nfunction add(elements, e, unique) {\r\n  var canAdd = !unique || elements.indexOf(e) === -1;\r\n\r\n  if (canAdd) {\r\n    elements.push(e);\r\n  }\r\n\r\n  return canAdd;\r\n}\r\n\r\n/**\r\n * Iterate over each element in a collection, calling the iterator function `fn`\r\n * with (element, index, recursionDepth).\r\n *\r\n * Recurse into all elements that are returned by `fn`.\r\n *\r\n * @param  {Object|Array<Object>} elements\r\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\r\n * @param  {Number} [depth] maximum recursion depth\r\n */\r\nfunction eachElement(elements, fn, depth) {\r\n\r\n  depth = depth || 0;\r\n\r\n  if (!isArray(elements)) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  forEach(elements, function(s, i) {\r\n    var filter = fn(s, i, depth);\r\n\r\n    if (isArray(filter) && filter.length) {\r\n      eachElement(filter, fn, depth + 1);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Collects self + child elements up to a given depth from a list of elements.\r\n *\r\n * @param  {djs.model.Base|Array<djs.model.Base>} elements the elements to select the children from\r\n * @param  {Boolean} unique whether to return a unique result set (no duplicates)\r\n * @param  {Number} maxDepth the depth to search through or -1 for infinite\r\n *\r\n * @return {Array<djs.model.Base>} found elements\r\n */\r\nfunction selfAndChildren(elements, unique, maxDepth) {\r\n  var result = [],\r\n      processedChildren = [];\r\n\r\n  eachElement(elements, function(element, i, depth) {\r\n    add(result, element, unique);\r\n\r\n    var children = element.children;\r\n\r\n    // max traversal depth not reached yet\r\n    if (maxDepth === -1 || depth < maxDepth) {\r\n\r\n      // children exist && children not yet processed\r\n      if (children && add(processedChildren, children, unique)) {\r\n        return children;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Return self + direct children for a number of elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements to query\r\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\r\n *\r\n * @return {Array<djs.model.Base>} the collected elements\r\n */\r\nfunction selfAndDirectChildren(elements, allowDuplicates) {\r\n  return selfAndChildren(elements, !allowDuplicates, 1);\r\n}\r\n\r\n/**\r\n * Return self + ALL children for a number of elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements to query\r\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\r\n *\r\n * @return {Array<djs.model.Base>} the collected elements\r\n */\r\nfunction selfAndAllChildren(elements, allowDuplicates) {\r\n  return selfAndChildren(elements, !allowDuplicates, -1);\r\n}\r\n\r\n/**\r\n * Gets the the closure for all selected elements,\r\n * their connections and their attachment's connections\r\n *\r\n * @param {Array<djs.model.Base>} elements\r\n * @return {Object} enclosure\r\n */\r\nfunction getClosure(elements) {\r\n\r\n  // original elements passed to this function\r\n  var topLevel = groupBy(elements, function(e) { return e.id; });\r\n\r\n  var allShapes = {},\r\n      allConnections = {},\r\n      enclosedElements = {},\r\n      enclosedConnections = {};\r\n\r\n  function handleConnection(c) {\r\n    if (topLevel[c.source.id] && topLevel[c.target.id]) {\r\n      topLevel[c.id] = c;\r\n    }\r\n\r\n    // not enclosed as a child, but maybe logically\r\n    // (connecting two moved elements?)\r\n    if (allShapes[c.source.id] && allShapes[c.target.id]) {\r\n      enclosedConnections[c.id] = enclosedElements[c.id] = c;\r\n    }\r\n\r\n    allConnections[c.id] = c;\r\n  }\r\n\r\n  function handleElement(element) {\r\n\r\n    enclosedElements[element.id] = element;\r\n\r\n    if (element.waypoints) {\r\n      // remember connection\r\n      enclosedConnections[element.id] = allConnections[element.id] = element;\r\n    } else {\r\n      // remember shape\r\n      allShapes[element.id] = element;\r\n\r\n      // remember all connections\r\n      forEach(element.incoming, handleConnection);\r\n\r\n      forEach(element.outgoing, handleConnection);\r\n\r\n      // recurse into children\r\n      return element.children;\r\n    }\r\n  }\r\n\r\n  eachElement(elements, handleElement);\r\n\r\n  return {\r\n    allShapes: allShapes,\r\n    allConnections: allConnections,\r\n    topLevel: topLevel,\r\n    enclosedConnections: enclosedConnections,\r\n    enclosedElements: enclosedElements\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the surrounding bbox for all elements in\r\n * the array or the element primitive.\r\n *\r\n * @param {Array<djs.model.Shape>|djs.model.Shape} elements\r\n * @param {Boolean} stopRecursion\r\n */\r\nfunction getBBox(elements, stopRecursion) {\r\n\r\n  stopRecursion = !!stopRecursion;\r\n  if (!isArray(elements)) {\r\n    elements = [elements];\r\n  }\r\n\r\n  var minX,\r\n      minY,\r\n      maxX,\r\n      maxY;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    // If element is a connection the bbox must be computed first\r\n    var bbox = element;\r\n    if (element.waypoints && !stopRecursion) {\r\n      bbox = getBBox(element.waypoints, true);\r\n    }\r\n\r\n    var x = bbox.x,\r\n        y = bbox.y,\r\n        height = bbox.height || 0,\r\n        width  = bbox.width  || 0;\r\n\r\n    if (x < minX || minX === undefined) {\r\n      minX = x;\r\n    }\r\n    if (y < minY || minY === undefined) {\r\n      minY = y;\r\n    }\r\n\r\n    if ((x + width) > maxX || maxX === undefined) {\r\n      maxX = x + width;\r\n    }\r\n    if ((y + height) > maxY || maxY === undefined) {\r\n      maxY = y + height;\r\n    }\r\n  });\r\n\r\n  return {\r\n    x: minX,\r\n    y: minY,\r\n    height: maxY - minY,\r\n    width: maxX - minX\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Returns all elements that are enclosed from the bounding box.\r\n *\r\n *   * If bbox.(width|height) is not specified the method returns\r\n *     all elements with element.x/y > bbox.x/y\r\n *   * If only bbox.x or bbox.y is specified, method return all elements with\r\n *     e.x > bbox.x or e.y > bbox.y\r\n *\r\n * @param {Array<djs.model.Shape>} elements List of Elements to search through\r\n * @param {djs.model.Shape} bbox the enclosing bbox.\r\n *\r\n * @return {Array<djs.model.Shape>} enclosed elements\r\n */\r\nfunction getEnclosedElements(elements, bbox) {\r\n\r\n  var filteredElements = {};\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    var e = element;\r\n\r\n    if (e.waypoints) {\r\n      e = getBBox(e);\r\n    }\r\n\r\n    if (!isNumber(bbox.y) && (e.x > bbox.x)) {\r\n      filteredElements[element.id] = element;\r\n    }\r\n    if (!isNumber(bbox.x) && (e.y > bbox.y)) {\r\n      filteredElements[element.id] = element;\r\n    }\r\n    if (e.x > bbox.x && e.y > bbox.y) {\r\n      if (isNumber(bbox.width) && isNumber(bbox.height) &&\r\n          e.width  + e.x < bbox.width  + bbox.x &&\r\n          e.height + e.y < bbox.height + bbox.y) {\r\n\r\n        filteredElements[element.id] = element;\r\n      } else if (!isNumber(bbox.width) || !isNumber(bbox.height)) {\r\n        filteredElements[element.id] = element;\r\n      }\r\n    }\r\n  });\r\n\r\n  return filteredElements;\r\n}\r\n\r\n\r\nmodule.exports.add = add;\r\nmodule.exports.eachElement = eachElement;\r\nmodule.exports.selfAndDirectChildren = selfAndDirectChildren;\r\nmodule.exports.selfAndAllChildren = selfAndAllChildren;\r\nmodule.exports.getBBox = getBBox;\r\nmodule.exports.getEnclosedElements = getEnclosedElements;\r\n\r\nmodule.exports.getClosure = getClosure;\r\n\r\n\r\nfunction getElementType(element) {\r\n\r\n  if ('waypoints' in element) {\r\n    return 'connection';\r\n  }\r\n\r\n  if ('x' in element) {\r\n    return 'shape';\r\n  }\r\n\r\n  return 'root';\r\n}\r\n\r\nmodule.exports.getType = getElementType;","'use strict';\r\n\r\nfunction __preventDefault(event) {\r\n  return event && event.preventDefault();\r\n}\r\n\r\nfunction __stopPropagation(event, immediate) {\r\n  if (!event) {\r\n    return;\r\n  }\r\n\r\n  if (event.stopPropagation) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  if (immediate && event.stopImmediatePropagation) {\r\n    event.stopImmediatePropagation();\r\n  }\r\n}\r\n\r\n\r\nfunction getOriginal(event) {\r\n  return event.originalEvent || event.srcEvent;\r\n}\r\n\r\nmodule.exports.getOriginal = getOriginal;\r\n\r\n\r\nfunction stopEvent(event, immediate) {\r\n  stopPropagation(event, immediate);\r\n  preventDefault(event);\r\n}\r\n\r\nmodule.exports.stopEvent = stopEvent;\r\n\r\n\r\nfunction preventDefault(event) {\r\n  __preventDefault(event);\r\n  __preventDefault(getOriginal(event));\r\n}\r\n\r\nmodule.exports.preventDefault = preventDefault;\r\n\r\n\r\nfunction stopPropagation(event, immediate) {\r\n  __stopPropagation(event, immediate);\r\n  __stopPropagation(getOriginal(event), immediate);\r\n}\r\n\r\nmodule.exports.stopPropagation = stopPropagation;\r\n\r\n\r\nfunction toPoint(event) {\r\n\r\n  if (event.pointers && event.pointers.length) {\r\n    event = event.pointers[0];\r\n  }\r\n\r\n  if (event.touches && event.touches.length) {\r\n    event = event.touches[0];\r\n  }\r\n\r\n  return event ? {\r\n    x: event.clientX,\r\n    y: event.clientY\r\n  } : null;\r\n}\r\n\r\nmodule.exports.toPoint = toPoint;\r\n","'use strict';\r\n\r\n/**\r\n * Computes the distance between two points\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n *\r\n * @return {Number}  distance\r\n */\r\nfunction pointDistance(a, b) {\r\n  if (!a || !b) {\r\n    return -1;\r\n  }\r\n\r\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n}\r\n\r\nmodule.exports.pointDistance = pointDistance;\r\n\r\n\r\n/**\r\n * Returns true if the point r is on the line between p and y\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n * @param  {Point}  r\r\n *\r\n * @return {Boolean}\r\n */\r\nmodule.exports.pointsOnLine = function(p, q, r) {\r\n\r\n  if (!p || !q || !r) {\r\n    return false;\r\n  }\r\n\r\n  var val = (q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x),\r\n      dist = pointDistance(p, q);\r\n\r\n  // @see http://stackoverflow.com/a/907491/412190\r\n  return Math.abs(val / dist) < 5;\r\n};\r\n\r\n\r\nvar ALIGNED_THRESHOLD = 2;\r\n\r\n/**\r\n * Returns whether two points are in a horizontal or vertical line.\r\n *\r\n * @param {Point} a\r\n * @param {Point} b\r\n *\r\n * @return {String|Boolean} returns false if the points are not\r\n *                          aligned or 'h|v' if they are aligned\r\n *                          horizontally / vertically.\r\n */\r\nfunction pointsAligned(a, b) {\r\n  if (Math.abs(a.x - b.x) <= ALIGNED_THRESHOLD) {\r\n    return 'h';\r\n  }\r\n\r\n  if (Math.abs(a.y - b.y) <= ALIGNED_THRESHOLD) {\r\n    return 'v';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nmodule.exports.pointsAligned = pointsAligned;\r\n\r\n\r\n/**\r\n * Returns true if the point p is inside the rectangle rect\r\n *\r\n * @param  {Point}  p\r\n * @param  {Rect}   rect\r\n * @param  {Number} tolerance\r\n *\r\n * @return {Boolean}\r\n */\r\nmodule.exports.pointInRect = function(p, rect, tolerance) {\r\n  tolerance = tolerance || 0;\r\n\r\n  return p.x > rect.x - tolerance &&\r\n         p.y > rect.y - tolerance &&\r\n         p.x < rect.x + rect.width + tolerance &&\r\n         p.y < rect.y + rect.height + tolerance;\r\n};\r\n\r\n/**\r\n * Returns a point in the middle of points p and q\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n *\r\n * @return {Point} middle point\r\n */\r\nmodule.exports.getMidPoint = function(p, q) {\r\n  return {\r\n    x: Math.round(p.x + ((q.x - p.x) / 2.0)),\r\n    y: Math.round(p.y + ((q.y - p.y) / 2.0))\r\n  };\r\n};\r\n","'use strict';\r\n\r\nvar domQuery = require(452);\r\n\r\n/**\r\n * SVGs for elements are generated by the {@link GraphicsFactory}.\r\n *\r\n * This utility gives quick access to the important semantic\r\n * parts of an element.\r\n */\r\n\r\n/**\r\n * Returns the visual part of a diagram element\r\n *\r\n * @param {Snap<SVGElement>} gfx\r\n *\r\n * @return {Snap<SVGElement>}\r\n */\r\nfunction getVisual(gfx) {\r\n  return domQuery('.djs-visual', gfx);\r\n}\r\n\r\n/**\r\n * Returns the children for a given diagram element.\r\n *\r\n * @param {Snap<SVGElement>} gfx\r\n * @return {Snap<SVGElement>}\r\n */\r\nfunction getChildren(gfx) {\r\n  return gfx.parentNode.childNodes[1];\r\n}\r\n\r\nmodule.exports.getVisual = getVisual;\r\nmodule.exports.getChildren = getChildren;\r\n","'use strict';\r\n\r\n/**\r\n * Util that provides unique IDs.\r\n *\r\n * @class djs.util.IdGenerator\r\n * @constructor\r\n * @memberOf djs.util\r\n *\r\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\r\n *\r\n * @param {String} prefix a prefix to prepend to generated ids (for better readability)\r\n */\r\nfunction IdGenerator(prefix) {\r\n\r\n  this._counter = 0;\r\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\r\n}\r\n\r\nmodule.exports = IdGenerator;\r\n\r\n/**\r\n * Returns a next unique ID.\r\n *\r\n * @method djs.util.IdGenerator#next\r\n *\r\n * @returns {String} the id\r\n */\r\nIdGenerator.prototype.next = function() {\r\n  return this._prefix + (++this._counter);\r\n};\r\n","/* eslint no-fallthrough: \"off\" */\r\n\r\n'use strict';\r\n\r\nvar has = 'hasOwnProperty',\r\n    p2s = /,?([a-z]),?/gi,\r\n    toFloat = parseFloat,\r\n    math = Math,\r\n    PI = math.PI,\r\n    mmin = math.min,\r\n    mmax = math.max,\r\n    pow = math.pow,\r\n    abs = math.abs,\r\n    pathCommand = /([a-z])[/s,]*((-?/d*/.?/d*(?:e[/-+]?/d+)?[/s]*,?[/s]*)+)/ig,\r\n    pathValues = /(-?/d*/.?/d*(?:e[/-+]?//d+)?)[/s]*,?[/s]*/ig;\r\n\r\nfunction is(o, type) {\r\n  type = String.prototype.toLowerCase.call(type);\r\n\r\n  if (type == 'finite') {\r\n    return isFinite(o);\r\n  }\r\n\r\n  if (type == 'array' && (o instanceof Array || Array.isArray && Array.isArray(o))) {\r\n    return true;\r\n  }\r\n\r\n  return  (type == 'null' && o === null) ||\r\n          (type == typeof o && o !== null) ||\r\n          (type == 'object' && o === Object(o)) ||\r\n          Object.prototype.toString.call(o).slice(8, -1).toLowerCase() == type;\r\n}\r\n\r\nfunction clone(obj) {\r\n\r\n  if (typeof obj == 'function' || Object(obj) !== obj) {\r\n    return obj;\r\n  }\r\n\r\n  var res = new obj.constructor;\r\n\r\n  for (var key in obj) if (obj[has](key)) {\r\n    res[key] = clone(obj[key]);\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction repush(array, item) {\r\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n    return array.push(array.splice(i, 1)[0]);\r\n  }\r\n}\r\n\r\nfunction cacher(f, scope, postprocessor) {\r\n\r\n  function newf() {\r\n\r\n    var arg = Array.prototype.slice.call(arguments, 0),\r\n        args = arg.join('/u2400'),\r\n        cache = newf.cache = newf.cache || {},\r\n        count = newf.count = newf.count || [];\r\n\r\n    if (cache[has](args)) {\r\n      repush(count, args);\r\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n    }\r\n\r\n    count.length >= 1e3 && delete cache[count.shift()];\r\n    count.push(args);\r\n    cache[args] = f.apply(scope, arg);\r\n\r\n    return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n  }\r\n  return newf;\r\n}\r\n\r\nfunction parsePathString(pathString) {\r\n\r\n  if (!pathString) {\r\n    return null;\r\n  }\r\n\r\n  var pth = paths(pathString);\r\n\r\n  if (pth.arr) {\r\n    return clone(pth.arr);\r\n  }\r\n\r\n  var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },\r\n      data = [];\r\n\r\n  if (is(pathString, 'array') && is(pathString[0], 'array')) { // rough assumption\r\n    data = clone(pathString);\r\n  }\r\n\r\n  if (!data.length) {\r\n\r\n    String(pathString).replace(pathCommand, function(a, b, c) {\r\n      var params = [],\r\n          name = b.toLowerCase();\r\n\r\n      c.replace(pathValues, function(a, b) {\r\n        b && params.push(+b);\r\n      });\r\n\r\n      if (name == 'm' && params.length > 2) {\r\n        data.push([b].concat(params.splice(0, 2)));\r\n        name = 'l';\r\n        b = b == 'm' ? 'l' : 'L';\r\n      }\r\n\r\n      if (name == 'o' && params.length == 1) {\r\n        data.push([b, params[0]]);\r\n      }\r\n\r\n      if (name == 'r') {\r\n        data.push([b].concat(params));\r\n      } else while (params.length >= paramCounts[name]) {\r\n        data.push([b].concat(params.splice(0, paramCounts[name])));\r\n        if (!paramCounts[name]) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  data.toString = paths.toString;\r\n  pth.arr = clone(data);\r\n\r\n  return data;\r\n}\r\n\r\nfunction paths(ps) {\r\n  var p = paths.ps = paths.ps || {};\r\n\r\n  if (p[ps]) {\r\n    p[ps].sleep = 100;\r\n  } else {\r\n    p[ps] = {\r\n      sleep: 100\r\n    };\r\n  }\r\n\r\n  setTimeout(function() {\r\n    for (var key in p) if (p[has](key) && key != ps) {\r\n      p[key].sleep--;\r\n      !p[key].sleep && delete p[key];\r\n    }\r\n  });\r\n\r\n  return p[ps];\r\n}\r\n\r\nfunction box(x, y, width, height) {\r\n  if (x == null) {\r\n    x = y = width = height = 0;\r\n  }\r\n\r\n  if (y == null) {\r\n    y = x.y;\r\n    width = x.width;\r\n    height = x.height;\r\n    x = x.x;\r\n  }\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    width: width,\r\n    w: width,\r\n    height: height,\r\n    h: height,\r\n    x2: x + width,\r\n    y2: y + height,\r\n    cx: x + width / 2,\r\n    cy: y + height / 2,\r\n    r1: math.min(width, height) / 2,\r\n    r2: math.max(width, height) / 2,\r\n    r0: math.sqrt(width * width + height * height) / 2,\r\n    path: rectPath(x, y, width, height),\r\n    vb: [x, y, width, height].join(' ')\r\n  };\r\n}\r\n\r\nfunction toString() {\r\n  return this.join(',').replace(p2s, '$1');\r\n}\r\n\r\nfunction pathClone(pathArray) {\r\n  var res = clone(pathArray);\r\n  res.toString = toString;\r\n  return res;\r\n}\r\n\r\nfunction getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\r\n  if (length == null) {\r\n    return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\r\n  } else {\r\n    return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\r\n      getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\r\n  }\r\n}\r\n\r\nfunction getLengthFactory(istotal, subpath) {\r\n  function O(val) {\r\n    return +(+val).toFixed(3);\r\n  }\r\n\r\n  return cacher(function(path, length, onlystart) {\r\n\r\n    if (path instanceof Element) {\r\n      path = path.attr('d');\r\n    }\r\n\r\n    path = path2curve(path);\r\n\r\n    var x, y, p, l, sp = '', subpaths = {}, point,\r\n        len = 0;\r\n\r\n    for (var i = 0, ii = path.length; i < ii; i++) {\r\n      p = path[i];\r\n\r\n      if (p[0] == 'M') {\r\n        x = +p[1];\r\n        y = +p[2];\r\n      } else {\r\n        l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n\r\n        if (len + l > length) {\r\n\r\n          if (subpath && !subpaths.start) {\r\n            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n\r\n            sp += [\r\n              'C' + O(point.start.x),\r\n              O(point.start.y),\r\n              O(point.m.x),\r\n              O(point.m.y),\r\n              O(point.x),\r\n              O(point.y)\r\n            ];\r\n\r\n            if (onlystart) {\r\n              return sp;\r\n            }\r\n\r\n            subpaths.start = sp;\r\n            sp = [\r\n              'M' + O(point.x),\r\n              O(point.y) + 'C' + O(point.n.x),\r\n              O(point.n.y),\r\n              O(point.end.x),\r\n              O(point.end.y),\r\n              O(p[5]),\r\n              O(p[6])\r\n            ].join();\r\n            len += l;\r\n            x = +p[5];\r\n            y = +p[6];\r\n            continue;\r\n          }\r\n\r\n          if (!istotal && !subpath) {\r\n            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n            return point;\r\n          }\r\n        }\r\n\r\n        len += l;\r\n        x = +p[5];\r\n        y = +p[6];\r\n      }\r\n\r\n      sp += p.shift() + p;\r\n    }\r\n\r\n    subpaths.end = sp;\r\n    point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\r\n    return point;\r\n  }, null, clone);\r\n}\r\n\r\nvar getTotalLength = getLengthFactory(1),\r\n    getPointAtLength = getLengthFactory();\r\n\r\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n  var t1 = 1 - t,\r\n      t13 = pow(t1, 3),\r\n      t12 = pow(t1, 2),\r\n      t2 = t * t,\r\n      t3 = t2 * t,\r\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n      mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n      my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n      nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n      ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n      ax = t1 * p1x + t * c1x,\r\n      ay = t1 * p1y + t * c1y,\r\n      cx = t1 * c2x + t * p2x,\r\n      cy = t1 * c2y + t * p2y,\r\n      alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n\r\n  // (mx > nx || my < ny) && (alpha += 180);\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    m: { x: mx, y: my },\r\n    n: { x: nx, y: ny },\r\n    start: { x: ax, y: ay },\r\n    end: { x: cx, y: cy },\r\n    alpha: alpha\r\n  };\r\n}\r\n\r\nfunction bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n\r\n  if (!is(p1x, 'array')) {\r\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n  }\r\n\r\n  var bbox = curveDim.apply(null, p1x);\r\n\r\n  return box(\r\n    bbox.min.x,\r\n    bbox.min.y,\r\n    bbox.max.x - bbox.min.x,\r\n    bbox.max.y - bbox.min.y\r\n  );\r\n}\r\n\r\nfunction isPointInsideBBox(bbox, x, y) {\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}\r\n\r\nfunction isBBoxIntersect(bbox1, bbox2) {\r\n  bbox1 = box(bbox1);\r\n  bbox2 = box(bbox2);\r\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\r\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\r\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\r\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n}\r\n\r\nfunction base3(t, p1, p2, p3, p4) {\r\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n  return t * t2 - 3 * p1 + 3 * p2;\r\n}\r\n\r\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n\r\n  if (z == null) {\r\n    z = 1;\r\n  }\r\n\r\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n\r\n  var z2 = z / 2,\r\n      n = 12,\r\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\r\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n      sum = 0;\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var ct = z2 * Tvalues[i] + z2,\r\n        xbase = base3(ct, x1, x2, x3, x4),\r\n        ybase = base3(ct, y1, y2, y3, y4),\r\n        comb = xbase * xbase + ybase * ybase;\r\n\r\n    sum += Cvalues[i] * math.sqrt(comb);\r\n  }\r\n\r\n  return z2 * sum;\r\n}\r\n\r\nfunction getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\r\n\r\n  if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\r\n    return;\r\n  }\r\n\r\n  var t = 1,\r\n      step = t / 2,\r\n      t2 = t - step,\r\n      l,\r\n      e = .01;\r\n\r\n  l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n\r\n  while (abs(l - ll) > e) {\r\n    step /= 2;\r\n    t2 += (l < ll ? 1 : -1) * step;\r\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n  }\r\n\r\n  return t2;\r\n}\r\n\r\nfunction intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\r\n  if (\r\n      mmax(x1, x2) < mmin(x3, x4) ||\r\n      mmin(x1, x2) > mmax(x3, x4) ||\r\n      mmax(y1, y2) < mmin(y3, y4) ||\r\n      mmin(y1, y2) > mmax(y3, y4)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n  if (!denominator) {\r\n    return;\r\n  }\r\n\r\n  var px = nx / denominator,\r\n      py = ny / denominator,\r\n      px2 = +px.toFixed(2),\r\n      py2 = +py.toFixed(2);\r\n\r\n  if (\r\n      px2 < +mmin(x1, x2).toFixed(2) ||\r\n      px2 > +mmax(x1, x2).toFixed(2) ||\r\n      px2 < +mmin(x3, x4).toFixed(2) ||\r\n      px2 > +mmax(x3, x4).toFixed(2) ||\r\n      py2 < +mmin(y1, y2).toFixed(2) ||\r\n      py2 > +mmax(y1, y2).toFixed(2) ||\r\n      py2 < +mmin(y3, y4).toFixed(2) ||\r\n      py2 > +mmax(y3, y4).toFixed(2)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return { x: px, y: py };\r\n}\r\n\r\nfunction interHelper(bez1, bez2, justCount) {\r\n  var bbox1 = bezierBBox(bez1),\r\n      bbox2 = bezierBBox(bez2);\r\n\r\n  if (!isBBoxIntersect(bbox1, bbox2)) {\r\n    return justCount ? 0 : [];\r\n  }\r\n\r\n  var l1 = bezlen.apply(0, bez1),\r\n      l2 = bezlen.apply(0, bez2),\r\n      n1 = ~~(l1 / 8),\r\n      n2 = ~~(l2 / 8),\r\n      dots1 = [],\r\n      dots2 = [],\r\n      xy = {},\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0; i < n1 + 1; i++) {\r\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\r\n  }\r\n\r\n  for (i = 0; i < n2 + 1; i++) {\r\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\r\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\r\n  }\r\n\r\n  for (i = 0; i < n1; i++) {\r\n\r\n    for (var j = 0; j < n2; j++) {\r\n      var di = dots1[i],\r\n          di1 = dots1[i + 1],\r\n          dj = dots2[j],\r\n          dj1 = dots2[j + 1],\r\n          ci = abs(di1.x - di.x) < .001 ? 'y' : 'x',\r\n          cj = abs(dj1.x - dj.x) < .001 ? 'y' : 'x',\r\n          is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n\r\n      if (is) {\r\n\r\n        if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n          continue;\r\n        }\r\n\r\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n\r\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n\r\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n\r\n          if (justCount) {\r\n            res++;\r\n          } else {\r\n            res.push({\r\n              x: is.x,\r\n              y: is.y,\r\n              t1: t1,\r\n              t2: t2\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction pathIntersection(path1, path2) {\r\n  return interPathHelper(path1, path2);\r\n}\r\n\r\nfunction pathIntersectionNumber(path1, path2) {\r\n  return interPathHelper(path1, path2, 1);\r\n}\r\n\r\nfunction interPathHelper(path1, path2, justCount) {\r\n  path1 = path2curve(path1);\r\n  path2 = path2curve(path2);\r\n\r\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0, ii = path1.length; i < ii; i++) {\r\n    var pi = path1[i];\r\n\r\n    if (pi[0] == 'M') {\r\n      x1 = x1m = pi[1];\r\n      y1 = y1m = pi[2];\r\n    } else {\r\n\r\n      if (pi[0] == 'C') {\r\n        bez1 = [x1, y1].concat(pi.slice(1));\r\n        x1 = bez1[6];\r\n        y1 = bez1[7];\r\n      } else {\r\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n        x1 = x1m;\r\n        y1 = y1m;\r\n      }\r\n\r\n      for (var j = 0, jj = path2.length; j < jj; j++) {\r\n        var pj = path2[j];\r\n\r\n        if (pj[0] == 'M') {\r\n          x2 = x2m = pj[1];\r\n          y2 = y2m = pj[2];\r\n        } else {\r\n\r\n          if (pj[0] == 'C') {\r\n            bez2 = [x2, y2].concat(pj.slice(1));\r\n            x2 = bez2[6];\r\n            y2 = bez2[7];\r\n          } else {\r\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n            x2 = x2m;\r\n            y2 = y2m;\r\n          }\r\n\r\n          var intr = interHelper(bez1, bez2, justCount);\r\n\r\n          if (justCount) {\r\n            res += intr;\r\n          } else {\r\n\r\n            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n              intr[k].segment1 = i;\r\n              intr[k].segment2 = j;\r\n              intr[k].bez1 = bez1;\r\n              intr[k].bez2 = bez2;\r\n            }\r\n\r\n            res = res.concat(intr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction isPointInsidePath(path, x, y) {\r\n  var bbox = pathBBox(path);\r\n\r\n  return isPointInsideBBox(bbox, x, y) &&\r\n         interPathHelper(path, [['M', x, y], ['H', bbox.x2 + 10]], 1) % 2 == 1;\r\n}\r\n\r\nfunction pathBBox(path) {\r\n  var pth = paths(path);\r\n\r\n  if (pth.bbox) {\r\n    return clone(pth.bbox);\r\n  }\r\n\r\n  if (!path) {\r\n    return box();\r\n  }\r\n\r\n  path = path2curve(path);\r\n\r\n  var x = 0,\r\n      y = 0,\r\n      X = [],\r\n      Y = [],\r\n      p;\r\n\r\n  for (var i = 0, ii = path.length; i < ii; i++) {\r\n    p = path[i];\r\n\r\n    if (p[0] == 'M') {\r\n      x = p[1];\r\n      y = p[2];\r\n      X.push(x);\r\n      Y.push(y);\r\n    } else {\r\n      var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n      X = X.concat(dim.min.x, dim.max.x);\r\n      Y = Y.concat(dim.min.y, dim.max.y);\r\n      x = p[5];\r\n      y = p[6];\r\n    }\r\n  }\r\n\r\n  var xmin = mmin.apply(0, X),\r\n      ymin = mmin.apply(0, Y),\r\n      xmax = mmax.apply(0, X),\r\n      ymax = mmax.apply(0, Y),\r\n      bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\r\n\r\n  pth.bbox = clone(bb);\r\n\r\n  return bb;\r\n}\r\n\r\nfunction rectPath(x, y, w, h, r) {\r\n  if (r) {\r\n    return [\r\n      ['M', +x + (+r), y],\r\n      ['l', w - r * 2, 0],\r\n      ['a', r, r, 0, 0, 1, r, r],\r\n      ['l', 0, h - r * 2],\r\n      ['a', r, r, 0, 0, 1, -r, r],\r\n      ['l', r * 2 - w, 0],\r\n      ['a', r, r, 0, 0, 1, -r, -r],\r\n      ['l', 0, r * 2 - h],\r\n      ['a', r, r, 0, 0, 1, r, -r],\r\n      ['z']\r\n    ];\r\n  }\r\n\r\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\r\n  res.toString = toString;\r\n\r\n  return res;\r\n}\r\n\r\nfunction ellipsePath(x, y, rx, ry, a) {\r\n  if (a == null && ry == null) {\r\n    ry = rx;\r\n  }\r\n\r\n  x = +x;\r\n  y = +y;\r\n  rx = +rx;\r\n  ry = +ry;\r\n\r\n  if (a != null) {\r\n    var rad = Math.PI / 180,\r\n        x1 = x + rx * Math.cos(-ry * rad),\r\n        x2 = x + rx * Math.cos(-a * rad),\r\n        y1 = y + rx * Math.sin(-ry * rad),\r\n        y2 = y + rx * Math.sin(-a * rad),\r\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\r\n  } else {\r\n    res = [\r\n      ['M', x, y],\r\n      ['m', 0, -ry],\r\n      ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\r\n      ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\r\n      ['z']\r\n    ];\r\n  }\r\n\r\n  res.toString = toString;\r\n\r\n  return res;\r\n}\r\n\r\nfunction pathToRelative(pathArray) {\r\n  var pth = paths(pathArray),\r\n      lowerCase = String.prototype.toLowerCase;\r\n\r\n  if (pth.rel) {\r\n    return pathClone(pth.rel);\r\n  }\r\n\r\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) {\r\n    pathArray = parsePathString(pathArray);\r\n  }\r\n\r\n  var res = [],\r\n      x = 0,\r\n      y = 0,\r\n      mx = 0,\r\n      my = 0,\r\n      start = 0;\r\n\r\n  if (pathArray[0][0] == 'M') {\r\n    x = pathArray[0][1];\r\n    y = pathArray[0][2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res.push(['M', x, y]);\r\n  }\r\n\r\n  for (var i = start, ii = pathArray.length; i < ii; i++) {\r\n    var r = res[i] = [],\r\n        pa = pathArray[i];\r\n\r\n    if (pa[0] != lowerCase.call(pa[0])) {\r\n      r[0] = lowerCase.call(pa[0]);\r\n\r\n      switch (r[0]) {\r\n      case 'a':\r\n        r[1] = pa[1];\r\n        r[2] = pa[2];\r\n        r[3] = pa[3];\r\n        r[4] = pa[4];\r\n        r[5] = pa[5];\r\n        r[6] = +(pa[6] - x).toFixed(3);\r\n        r[7] = +(pa[7] - y).toFixed(3);\r\n        break;\r\n      case 'v':\r\n        r[1] = +(pa[1] - y).toFixed(3);\r\n        break;\r\n      case 'm':\r\n        mx = pa[1];\r\n        my = pa[2];\r\n      default:\r\n        for (var j = 1, jj = pa.length; j < jj; j++) {\r\n          r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\r\n        }\r\n      }\r\n    } else {\r\n      r = res[i] = [];\r\n\r\n      if (pa[0] == 'm') {\r\n        mx = pa[1] + x;\r\n        my = pa[2] + y;\r\n      }\r\n\r\n      for (var k = 0, kk = pa.length; k < kk; k++) {\r\n        res[i][k] = pa[k];\r\n      }\r\n    }\r\n\r\n    var len = res[i].length;\r\n\r\n    switch (res[i][0]) {\r\n    case 'z':\r\n      x = mx;\r\n      y = my;\r\n      break;\r\n    case 'h':\r\n      x += +res[i][len - 1];\r\n      break;\r\n    case 'v':\r\n      y += +res[i][len - 1];\r\n      break;\r\n    default:\r\n      x += +res[i][len - 2];\r\n      y += +res[i][len - 1];\r\n    }\r\n  }\r\n\r\n  res.toString = toString;\r\n  pth.rel = pathClone(res);\r\n\r\n  return res;\r\n}\r\n\r\nfunction pathToAbsolute(pathArray) {\r\n  var pth = paths(pathArray);\r\n\r\n  if (pth.abs) {\r\n    return pathClone(pth.abs);\r\n  }\r\n\r\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) { // rough assumption\r\n    pathArray = parsePathString(pathArray);\r\n  }\r\n\r\n  if (!pathArray || !pathArray.length) {\r\n    return [['M', 0, 0]];\r\n  }\r\n\r\n  var res = [],\r\n      x = 0,\r\n      y = 0,\r\n      mx = 0,\r\n      my = 0,\r\n      start = 0,\r\n      pa0;\r\n\r\n  if (pathArray[0][0] == 'M') {\r\n    x = +pathArray[0][1];\r\n    y = +pathArray[0][2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res[0] = ['M', x, y];\r\n  }\r\n\r\n  var crz = pathArray.length == 3 &&\r\n      pathArray[0][0] == 'M' &&\r\n      pathArray[1][0].toUpperCase() == 'R' &&\r\n      pathArray[2][0].toUpperCase() == 'Z';\r\n\r\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n    res.push(r = []);\r\n    pa = pathArray[i];\r\n    pa0 = pa[0];\r\n\r\n    if (pa0 != pa0.toUpperCase()) {\r\n      r[0] = pa0.toUpperCase();\r\n\r\n      switch (r[0]) {\r\n      case 'A':\r\n        r[1] = pa[1];\r\n        r[2] = pa[2];\r\n        r[3] = pa[3];\r\n        r[4] = pa[4];\r\n        r[5] = pa[5];\r\n        r[6] = +pa[6] + x;\r\n        r[7] = +pa[7] + y;\r\n        break;\r\n      case 'V':\r\n        r[1] = +pa[1] + y;\r\n        break;\r\n      case 'H':\r\n        r[1] = +pa[1] + x;\r\n        break;\r\n      case 'R':\r\n        var dots = [x, y].concat(pa.slice(1));\r\n\r\n        for (var j = 2, jj = dots.length; j < jj; j++) {\r\n          dots[j] = +dots[j] + x;\r\n          dots[++j] = +dots[j] + y;\r\n        }\r\n\r\n        res.pop();\r\n        res = res.concat(catmullRom2bezier(dots, crz));\r\n        break;\r\n      case 'O':\r\n        res.pop();\r\n        dots = ellipsePath(x, y, pa[1], pa[2]);\r\n        dots.push(dots[0]);\r\n        res = res.concat(dots);\r\n        break;\r\n      case 'U':\r\n        res.pop();\r\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n        r = ['U'].concat(res[res.length - 1].slice(-2));\r\n        break;\r\n      case 'M':\r\n        mx = +pa[1] + x;\r\n        my = +pa[2] + y;\r\n      default:\r\n\r\n        for (j = 1, jj = pa.length; j < jj; j++) {\r\n          r[j] = +pa[j] + ((j % 2) ? x : y);\r\n        }\r\n      }\r\n    } else if (pa0 == 'R') {\r\n      dots = [x, y].concat(pa.slice(1));\r\n      res.pop();\r\n      res = res.concat(catmullRom2bezier(dots, crz));\r\n      r = ['R'].concat(pa.slice(-2));\r\n    } else if (pa0 == 'O') {\r\n      res.pop();\r\n      dots = ellipsePath(x, y, pa[1], pa[2]);\r\n      dots.push(dots[0]);\r\n      res = res.concat(dots);\r\n    } else if (pa0 == 'U') {\r\n      res.pop();\r\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n      r = ['U'].concat(res[res.length - 1].slice(-2));\r\n    } else {\r\n\r\n      for (var k = 0, kk = pa.length; k < kk; k++) {\r\n        r[k] = pa[k];\r\n      }\r\n    }\r\n    pa0 = pa0.toUpperCase();\r\n\r\n    if (pa0 != 'O') {\r\n      switch (r[0]) {\r\n      case 'Z':\r\n        x = +mx;\r\n        y = +my;\r\n        break;\r\n      case 'H':\r\n        x = r[1];\r\n        break;\r\n      case 'V':\r\n        y = r[1];\r\n        break;\r\n      case 'M':\r\n        mx = r[r.length - 2];\r\n        my = r[r.length - 1];\r\n      default:\r\n        x = r[r.length - 2];\r\n        y = r[r.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  res.toString = toString;\r\n  pth.abs = pathClone(res);\r\n\r\n  return res;\r\n}\r\n\r\nfunction l2c(x1, y1, x2, y2) {\r\n  return [x1, y1, x2, y2, x2, y2];\r\n}\r\n\r\nfunction q2c(x1, y1, ax, ay, x2, y2) {\r\n  var _13 = 1 / 3,\r\n      _23 = 2 / 3;\r\n\r\n  return [\r\n    _13 * x1 + _23 * ax,\r\n    _13 * y1 + _23 * ay,\r\n    _13 * x2 + _23 * ax,\r\n    _13 * y2 + _23 * ay,\r\n    x2,\r\n    y2\r\n  ];\r\n}\r\n\r\nfunction a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n\r\n  // for more information of where this math came from visit:\r\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n  var _120 = PI * 120 / 180,\r\n      rad = PI / 180 * (+angle || 0),\r\n      res = [],\r\n      xy,\r\n      rotate = cacher(function(x, y, rad) {\r\n        var X = x * math.cos(rad) - y * math.sin(rad),\r\n            Y = x * math.sin(rad) + y * math.cos(rad);\r\n\r\n        return { x: X, y: Y };\r\n      });\r\n\r\n  if (!recursive) {\r\n    xy = rotate(x1, y1, -rad);\r\n    x1 = xy.x;\r\n    y1 = xy.y;\r\n    xy = rotate(x2, y2, -rad);\r\n    x2 = xy.x;\r\n    y2 = xy.y;\r\n\r\n    var x = (x1 - x2) / 2,\r\n        y = (y1 - y2) / 2;\r\n\r\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n\r\n    if (h > 1) {\r\n      h = math.sqrt(h);\r\n      rx = h * rx;\r\n      ry = h * ry;\r\n    }\r\n\r\n    var rx2 = rx * rx,\r\n        ry2 = ry * ry,\r\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n        cx = k * rx * y / ry + (x1 + x2) / 2,\r\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n    f1 = x1 < cx ? PI - f1 : f1;\r\n    f2 = x2 < cx ? PI - f2 : f2;\r\n    f1 < 0 && (f1 = PI * 2 + f1);\r\n    f2 < 0 && (f2 = PI * 2 + f2);\r\n\r\n    if (sweep_flag && f1 > f2) {\r\n      f1 = f1 - PI * 2;\r\n    }\r\n    if (!sweep_flag && f2 > f1) {\r\n      f2 = f2 - PI * 2;\r\n    }\r\n  } else {\r\n    f1 = recursive[0];\r\n    f2 = recursive[1];\r\n    cx = recursive[2];\r\n    cy = recursive[3];\r\n  }\r\n\r\n  var df = f2 - f1;\r\n\r\n  if (abs(df) > _120) {\r\n    var f2old = f2,\r\n        x2old = x2,\r\n        y2old = y2;\r\n\r\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n    x2 = cx + rx * math.cos(f2);\r\n    y2 = cy + ry * math.sin(f2);\r\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n  }\r\n\r\n  df = f2 - f1;\r\n\r\n  var c1 = math.cos(f1),\r\n      s1 = math.sin(f1),\r\n      c2 = math.cos(f2),\r\n      s2 = math.sin(f2),\r\n      t = math.tan(df / 4),\r\n      hx = 4 / 3 * rx * t,\r\n      hy = 4 / 3 * ry * t,\r\n      m1 = [x1, y1],\r\n      m2 = [x1 + hx * s1, y1 - hy * c1],\r\n      m3 = [x2 + hx * s2, y2 - hy * c2],\r\n      m4 = [x2, y2];\r\n\r\n  m2[0] = 2 * m1[0] - m2[0];\r\n  m2[1] = 2 * m1[1] - m2[1];\r\n\r\n  if (recursive) {\r\n    return [m2, m3, m4].concat(res);\r\n  } else {\r\n    res = [m2, m3, m4].concat(res).join().split(',');\r\n    var newres = [];\r\n\r\n    for (var i = 0, ii = res.length; i < ii; i++) {\r\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n    }\r\n\r\n    return newres;\r\n  }\r\n}\r\n\r\n// Returns bounding box of cubic bezier curve.\r\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\r\n// Original version: NISHIO Hirokazu\r\n// Modifications: https://github.com/timo22345\r\nfunction curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n  var tvalues = [],\r\n      bounds = [[], []],\r\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n  for (var i = 0; i < 2; ++i) {\r\n\r\n    if (i == 0) {\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n    } else {\r\n      b = 6 * y0 - 12 * y1 + 6 * y2;\r\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n      c = 3 * y1 - 3 * y0;\r\n    }\r\n\r\n    if (abs(a) < 1e-12) {\r\n\r\n      if (abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n\r\n      t = -c / b;\r\n\r\n      if (0 < t && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    b2ac = b * b - 4 * c * a;\r\n    sqrtb2ac = math.sqrt(b2ac);\r\n\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n\r\n    t1 = (-b + sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t1 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n\r\n    t2 = (-b - sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t2 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  var j = tvalues.length,\r\n      jlen = j,\r\n      mt;\r\n\r\n  while (j--) {\r\n    t = tvalues[j];\r\n    mt = 1 - t;\r\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n  }\r\n\r\n  bounds[0][jlen] = x0;\r\n  bounds[1][jlen] = y0;\r\n  bounds[0][jlen + 1] = x3;\r\n  bounds[1][jlen + 1] = y3;\r\n  bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n  return {\r\n    min: { x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1]) },\r\n    max: { x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1]) }\r\n  };\r\n}\r\n\r\nfunction path2curve(path, path2) {\r\n  var pth = !path2 && paths(path);\r\n\r\n  if (!path2 && pth.curve) {\r\n    return pathClone(pth.curve);\r\n  }\r\n\r\n  var p = pathToAbsolute(path),\r\n      p2 = path2 && pathToAbsolute(path2),\r\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n      attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n      processPath = function(path, d, pcom) {\r\n        var nx, ny;\r\n\r\n        if (!path) {\r\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n        }\r\n\r\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\r\n\r\n        switch (path[0]) {\r\n        case 'M':\r\n          d.X = path[1];\r\n          d.Y = path[2];\r\n          break;\r\n        case 'A':\r\n          path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n          break;\r\n        case 'S':\r\n          if (pcom == 'C' || pcom == 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\r\n            nx = d.x * 2 - d.bx;          // And reflect the previous\r\n            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n          }\r\n          else {                            // or some else or nothing\r\n            nx = d.x;\r\n            ny = d.y;\r\n          }\r\n          path = ['C', nx, ny].concat(path.slice(1));\r\n          break;\r\n        case 'T':\r\n          if (pcom == 'Q' || pcom == 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\r\n            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n            d.qy = d.y * 2 - d.qy;        // to case 'S'.\r\n          }\r\n          else {                            // or something else or nothing\r\n            d.qx = d.x;\r\n            d.qy = d.y;\r\n          }\r\n          path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n          break;\r\n        case 'Q':\r\n          d.qx = path[1];\r\n          d.qy = path[2];\r\n          path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n          break;\r\n        case 'L':\r\n          path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\r\n          break;\r\n        case 'H':\r\n          path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\r\n          break;\r\n        case 'V':\r\n          path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\r\n          break;\r\n        case 'Z':\r\n          path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\r\n          break;\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      fixArc = function(pp, i) {\r\n\r\n        if (pp[i].length > 7) {\r\n          pp[i].shift();\r\n          var pi = pp[i];\r\n\r\n          while (pi.length) {\r\n            pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\r\n            p2 && (pcoms2[i] = 'A'); // the same as above\r\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n          }\r\n\r\n          pp.splice(i, 1);\r\n          ii = mmax(p.length, p2 && p2.length || 0);\r\n        }\r\n      },\r\n\r\n      fixM = function(path1, path2, a1, a2, i) {\r\n\r\n        if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\r\n          path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n          a1.bx = 0;\r\n          a1.by = 0;\r\n          a1.x = path1[i][1];\r\n          a1.y = path1[i][2];\r\n          ii = mmax(p.length, p2 && p2.length || 0);\r\n        }\r\n      },\r\n\r\n      pcoms1 = [], // path commands of original path p\r\n      pcoms2 = [], // path commands of original path p2\r\n      pfirst = '', // temporary holder for original path command\r\n      pcom = ''; // holder for previous path command of original path\r\n\r\n  for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n    p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\r\n    {\r\n      pcoms1[i] = pfirst; // Save current path command\r\n      i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\r\n    }\r\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n    if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\r\n    // which may produce multiple C:s\r\n    // so we have to make sure that C is also C in original path\r\n\r\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n    if (p2) { // the same procedures is done to p2\r\n      p2[i] && (pfirst = p2[i][0]);\r\n\r\n      if (pfirst != 'C') {\r\n        pcoms2[i] = pfirst;\r\n        i && (pcom = pcoms2[i - 1]);\r\n      }\r\n\r\n      p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n      if (pcoms2[i] != 'A' && pfirst == 'C') {\r\n        pcoms2[i] = 'C';\r\n      }\r\n\r\n      fixArc(p2, i);\r\n    }\r\n\r\n    fixM(p, p2, attrs, attrs2, i);\r\n    fixM(p2, p, attrs2, attrs, i);\r\n\r\n    var seg = p[i],\r\n        seg2 = p2 && p2[i],\r\n        seglen = seg.length,\r\n        seg2len = p2 && seg2.length;\r\n\r\n    attrs.x = seg[seglen - 2];\r\n    attrs.y = seg[seglen - 1];\r\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n    attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n    attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n    attrs2.x = p2 && seg2[seg2len - 2];\r\n    attrs2.y = p2 && seg2[seg2len - 1];\r\n  }\r\n\r\n  if (!p2) {\r\n    pth.curve = pathClone(p);\r\n  }\r\n\r\n  return p2 ? [p, p2] : p;\r\n}\r\n\r\nfunction mapPath(path, matrix) {\r\n\r\n  if (!matrix) {\r\n    return path;\r\n  }\r\n\r\n  var x, y, i, j, ii, jj, pathi;\r\n  path = path2curve(path);\r\n\r\n  for (i = 0, ii = path.length; i < ii; i++) {\r\n    pathi = path[i];\r\n\r\n    for (j = 1, jj = pathi.length; j < jj; j += 2) {\r\n      x = matrix.x(pathi[j], pathi[j + 1]);\r\n      y = matrix.y(pathi[j], pathi[j + 1]);\r\n      pathi[j] = x;\r\n      pathi[j + 1] = y;\r\n    }\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\n// http://schepers.cc/getting-to-the-point\r\nfunction catmullRom2bezier(crp, z) {\r\n  var d = [];\r\n\r\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n    var p = [\r\n      { x: +crp[i - 2], y: +crp[i - 1] },\r\n      { x: +crp[i],     y: +crp[i + 1] },\r\n      { x: +crp[i + 2], y: +crp[i + 3] },\r\n      { x: +crp[i + 4], y: +crp[i + 5] }\r\n    ];\r\n\r\n    if (z) {\r\n\r\n      if (!i) {\r\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\r\n      } else if (iLen - 4 == i) {\r\n        p[3] = { x: +crp[0], y: +crp[1] };\r\n      } else if (iLen - 2 == i) {\r\n        p[2] = { x: +crp[0], y: +crp[1] };\r\n        p[3] = { x: +crp[2], y: +crp[3] };\r\n      }\r\n\r\n    } else {\r\n\r\n      if (iLen - 4 == i) {\r\n        p[3] = p[2];\r\n      } else if (!i) {\r\n        p[0] = { x: +crp[i], y: +crp[i + 1] };\r\n      }\r\n\r\n    }\r\n\r\n    d.push(['C',\r\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n      (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n      p[2].x,\r\n      p[2].y\r\n    ]);\r\n  }\r\n\r\n  return d;\r\n}\r\n\r\npaths.getTotalLength = getTotalLength;\r\npaths.getPointAtLength = getPointAtLength;\r\npaths.findDotsAtSegment = findDotsAtSegment;\r\npaths.bezierBBox = bezierBBox;\r\npaths.isPointInsideBBox = isPointInsideBBox;\r\npaths.isBBoxIntersect = isBBoxIntersect;\r\npaths.intersection = pathIntersection;\r\npaths.intersectionNumber = pathIntersectionNumber;\r\npaths.isPointInside = isPointInsidePath;\r\npaths.getBBox = pathBBox;\r\npaths.toRelative = pathToRelative;\r\npaths.toAbsolute = pathToAbsolute;\r\npaths.toCubic = path2curve;\r\npaths.map = mapPath;\r\npaths.toString = toString;\r\npaths.clone = pathClone;\r\n\r\nmodule.exports.intersection = pathIntersection;\r\n","'use strict';\r\n\r\nvar pointDistance = require(268).pointDistance;\r\n\r\nvar intersection = require(271).intersection;\r\n\r\nvar round = Math.round,\r\n    max = Math.max;\r\n\r\n\r\nfunction circlePath(center, r) {\r\n  var x = center.x,\r\n      y = center.y;\r\n\r\n  return [\r\n    ['M', x, y],\r\n    ['m', 0, -r],\r\n    ['a', r, r, 0, 1, 1, 0, 2 * r],\r\n    ['a', r, r, 0, 1, 1, 0, -2 * r],\r\n    ['z']\r\n  ];\r\n}\r\n\r\nfunction linePath(points) {\r\n  var segments = [];\r\n\r\n  points.forEach(function(p, idx) {\r\n    segments.push([ idx === 0 ? 'M' : 'L', p.x, p.y ]);\r\n  });\r\n\r\n  return segments;\r\n}\r\n\r\n\r\nvar INTERSECTION_THRESHOLD = 10;\r\n\r\nfunction getBendpointIntersection(waypoints, reference) {\r\n\r\n  var i, w;\r\n\r\n  for (i = 0; (w = waypoints[i]); i++) {\r\n\r\n    if (pointDistance(w, reference) <= INTERSECTION_THRESHOLD) {\r\n      return {\r\n        point: waypoints[i],\r\n        bendpoint: true,\r\n        index: i\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getPathIntersection(waypoints, reference) {\r\n\r\n  var intersections = intersection(circlePath(reference, INTERSECTION_THRESHOLD), linePath(waypoints));\r\n\r\n  var a = intersections[0],\r\n      b = intersections[intersections.length - 1],\r\n      idx;\r\n\r\n  if (!a) {\r\n    // no intersection\r\n    return null;\r\n  }\r\n\r\n  if (a !== b) {\r\n\r\n    if (a.segment2 !== b.segment2) {\r\n      // we use the bendpoint in between both segments\r\n      // as the intersection point\r\n\r\n      idx = max(a.segment2, b.segment2) - 1;\r\n\r\n      return {\r\n        point: waypoints[idx],\r\n        bendpoint: true,\r\n        index: idx\r\n      };\r\n    }\r\n\r\n    return {\r\n      point: {\r\n        x: (round(a.x + b.x) / 2),\r\n        y: (round(a.y + b.y) / 2)\r\n      },\r\n      index: a.segment2\r\n    };\r\n  }\r\n\r\n  return {\r\n    point: {\r\n      x: round(a.x),\r\n      y: round(a.y)\r\n    },\r\n    index: a.segment2\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the closest point on the connection towards a given reference point.\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @param  {Point} reference\r\n *\r\n * @return {Object} intersection data (segment, point)\r\n */\r\nmodule.exports.getApproxIntersection = function(waypoints, reference) {\r\n  return getBendpointIntersection(waypoints, reference) || getPathIntersection(waypoints, reference);\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Get the logarithm of x with base 10\r\n * @param  {Integer} value\r\n */\r\nfunction log10(x) {\r\n  return Math.log(x) / Math.log(10);\r\n}\r\n\r\nmodule.exports.log10 = log10;\r\n\r\n\r\nfunction substract(p1, p2) {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y\r\n  };\r\n}\r\n\r\nmodule.exports.substract = substract;\r\n","'use strict';\r\n\r\nvar getOriginalEvent = require(267).getOriginal;\r\n\r\nvar isMac = require(275).isMac;\r\n\r\n\r\nfunction isPrimaryButton(event) {\r\n  // button === 0 -> left áka primary mouse button\r\n  return !(getOriginalEvent(event) || event).button;\r\n}\r\n\r\nmodule.exports.isPrimaryButton = isPrimaryButton;\r\n\r\nmodule.exports.isMac = isMac;\r\n\r\nmodule.exports.hasPrimaryModifier = function(event) {\r\n  var originalEvent = getOriginalEvent(event) || event;\r\n\r\n  if (!isPrimaryButton(event)) {\r\n    return false;\r\n  }\r\n\r\n  // Use alt as primary modifier key for mac OS\r\n  if (isMac()) {\r\n    return originalEvent.metaKey;\r\n  } else {\r\n    return originalEvent.ctrlKey;\r\n  }\r\n};\r\n\r\n\r\nmodule.exports.hasSecondaryModifier = function(event) {\r\n  var originalEvent = getOriginalEvent(event) || event;\r\n\r\n  return isPrimaryButton(event) && originalEvent.shiftKey;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports.isMac = function isMac() {\r\n  return (/mac/i).test(navigator.platform);\r\n};","'use strict';\r\n\r\nfunction center(bounds) {\r\n  return {\r\n    x: bounds.x + (bounds.width / 2),\r\n    y: bounds.y + (bounds.height / 2)\r\n  };\r\n}\r\n\r\nmodule.exports.center = center;\r\n\r\n\r\nfunction delta(a, b) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y\r\n  };\r\n}\r\n\r\nmodule.exports.delta = delta;\r\n","'use strict';\r\n\r\n\r\n/**\r\n * Remove from the beginning of a collection until it is empty.\r\n *\r\n * This is a null-safe operation that ensures elements\r\n * are being removed from the given collection until the\r\n * collection is empty.\r\n *\r\n * The implementation deals with the fact that a remove operation\r\n * may touch, i.e. remove multiple elements in the collection\r\n * at a time.\r\n *\r\n * @param {Array<Object>} [collection]\r\n * @param {Function} removeFn\r\n *\r\n * @return {Array<Object>} the cleared collection\r\n */\r\nmodule.exports.saveClear = function(collection, removeFn) {\r\n\r\n  if (typeof removeFn !== 'function') {\r\n    throw new Error('removeFn iterator must be a function');\r\n  }\r\n\r\n  if (!collection) {\r\n    return;\r\n  }\r\n\r\n  var e;\r\n\r\n  while ((e = collection[0])) {\r\n    removeFn(e);\r\n  }\r\n\r\n  return collection;\r\n};\r\n","'use strict';\r\n\r\nvar svgAttr = require(473),\r\n    svgCreate = require(477);\r\n\r\n\r\nmodule.exports.componentsToPath = function(elements) {\r\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\r\n};\r\n\r\nfunction toSVGPoints(points) {\r\n  var result = '';\r\n\r\n  for (var i = 0, p; (p = points[i]); i++) {\r\n    result += p.x + ',' + p.y + ' ';\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.toSVGPoints = toSVGPoints;\r\n\r\nmodule.exports.createLine = function(points, attrs) {\r\n\r\n  var line = svgCreate('polyline');\r\n  svgAttr(line, { points: toSVGPoints(points) });\r\n\r\n  if (attrs) {\r\n    svgAttr(line, attrs);\r\n  }\r\n\r\n  return line;\r\n};\r\n\r\nmodule.exports.updateLine = function(gfx, points) {\r\n  svgAttr(gfx, { points: toSVGPoints(points) });\r\n\r\n  return gfx;\r\n};\r\n","'use strict';\r\n\r\nvar svgTransform = require(481);\r\n\r\nvar createTransform = require(478).createTransform;\r\n\r\n\r\n/**\r\n * @param {<SVGElement>} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} angle\r\n * @param {Number} amount\r\n */\r\nmodule.exports.transform = function(gfx, x, y, angle, amount) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  var scale = createTransform();\r\n  scale.setScale(amount || 1, amount || 1);\r\n\r\n  svgTransform(gfx, [ translate, rotate, scale ]);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nmodule.exports.translate = function(gfx, x, y) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  svgTransform(gfx, translate);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} angle\r\n */\r\nmodule.exports.rotate = function(gfx, angle) {\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  svgTransform(gfx, rotate);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} amount\r\n */\r\nmodule.exports.scale = function(gfx, amount) {\r\n  var scale = createTransform();\r\n  scale.setScale(amount, amount);\r\n\r\n  svgTransform(gfx, scale);\r\n};\r\n","'use strict';\r\n\r\nvar isObject = require(426),\r\n    assign = require(431),\r\n    pick = require(438),\r\n    forEach = require(303),\r\n    reduce = require(306),\r\n    merge = require(435);\r\n\r\nvar svgAppend = require(471),\r\n    svgAttr = require(473),\r\n    svgCreate = require(477),\r\n    svgRemove = require(480);\r\n\r\nvar DEFAULT_BOX_PADDING = 0;\r\n\r\nvar DEFAULT_LABEL_SIZE = {\r\n  width: 150,\r\n  height: 50\r\n};\r\n\r\n\r\nfunction parseAlign(align) {\r\n\r\n  var parts = align.split('-');\r\n\r\n  return {\r\n    horizontal: parts[0] || 'center',\r\n    vertical: parts[1] || 'top'\r\n  };\r\n}\r\n\r\nfunction parsePadding(padding) {\r\n\r\n  if (isObject(padding)) {\r\n    return assign({ top: 0, left: 0, right: 0, bottom: 0 }, padding);\r\n  } else {\r\n    return {\r\n      top: padding,\r\n      left: padding,\r\n      right: padding,\r\n      bottom: padding\r\n    };\r\n  }\r\n}\r\n\r\nfunction getTextBBox(text, fakeText) {\r\n\r\n  fakeText.textContent = text;\r\n\r\n  try {\r\n    var bbox,\r\n        emptyLine = text === '';\r\n\r\n    // add dummy text, when line is empty to determine correct height\r\n    fakeText.textContent = emptyLine ? 'dummy' : text;\r\n\r\n    bbox = pick(fakeText.getBBox(), [ 'width', 'height' ]);\r\n\r\n    if (emptyLine) {\r\n      // correct width\r\n      bbox.width = 0;\r\n    }\r\n\r\n    return bbox;\r\n  } catch (e) {\r\n    return { width: 0, height: 0 };\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Layout the next line and return the layouted element.\r\n *\r\n * Alters the lines passed.\r\n *\r\n * @param  {Array<String>} lines\r\n * @return {Object} the line descriptor, an object { width, height, text }\r\n */\r\nfunction layoutNext(lines, maxWidth, fakeText) {\r\n\r\n  var originalLine = lines.shift(),\r\n      fitLine = originalLine;\r\n\r\n  var textBBox;\r\n\r\n  for (;;) {\r\n    textBBox = getTextBBox(fitLine, fakeText);\r\n\r\n    textBBox.width = fitLine ? textBBox.width : 0;\r\n\r\n    // try to fit\r\n    if (fitLine === ' ' || fitLine === '' || textBBox.width < Math.round(maxWidth) || fitLine.length < 2) {\r\n      return fit(lines, fitLine, originalLine, textBBox);\r\n    }\r\n\r\n    fitLine = shortenLine(fitLine, textBBox.width, maxWidth);\r\n  }\r\n}\r\n\r\nfunction fit(lines, fitLine, originalLine, textBBox) {\r\n  if (fitLine.length < originalLine.length) {\r\n    var remainder = originalLine.slice(fitLine.length).trim();\r\n\r\n    lines.unshift(remainder);\r\n  }\r\n  return { width: textBBox.width, height: textBBox.height, text: fitLine };\r\n}\r\n\r\n\r\n/**\r\n * Shortens a line based on spacing and hyphens.\r\n * Returns the shortened result on success.\r\n *\r\n * @param  {String} line\r\n * @param  {Number} maxLength the maximum characters of the string\r\n * @return {String} the shortened string\r\n */\r\nfunction semanticShorten(line, maxLength) {\r\n  var parts = line.split(/(/s|-)/g),\r\n      part,\r\n      shortenedParts = [],\r\n      length = 0;\r\n\r\n  // try to shorten via spaces + hyphens\r\n  if (parts.length > 1) {\r\n    while ((part = parts.shift())) {\r\n      if (part.length + length < maxLength) {\r\n        shortenedParts.push(part);\r\n        length += part.length;\r\n      } else {\r\n        // remove previous part, too if hyphen does not fit anymore\r\n        if (part === '-') {\r\n          shortenedParts.pop();\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return shortenedParts.join('');\r\n}\r\n\r\n\r\nfunction shortenLine(line, width, maxWidth) {\r\n  var length = Math.max(line.length * (maxWidth / width), 1);\r\n\r\n  // try to shorten semantically (i.e. based on spaces and hyphens)\r\n  var shortenedLine = semanticShorten(line, length);\r\n\r\n  if (!shortenedLine) {\r\n\r\n    // force shorten by cutting the long word\r\n    shortenedLine = line.slice(0, Math.max(Math.round(length - 1), 1));\r\n  }\r\n\r\n  return shortenedLine;\r\n}\r\n\r\n\r\nfunction getHelperSvg() {\r\n  var helperSvg = document.getElementById('helper-svg');\r\n\r\n  if (!helperSvg) {\r\n    helperSvg = svgCreate('svg');\r\n\r\n    svgAttr(helperSvg, {\r\n      id: 'helper-svg',\r\n      width: 0,\r\n      height: 0,\r\n      style: 'visibility: hidden; position: fixed'\r\n    });\r\n\r\n    document.body.appendChild(helperSvg);\r\n  }\r\n\r\n  return helperSvg;\r\n}\r\n\r\n\r\n/**\r\n * Creates a new label utility\r\n *\r\n * @param {Object} config\r\n * @param {Dimensions} config.size\r\n * @param {Number} config.padding\r\n * @param {Object} config.style\r\n * @param {String} config.align\r\n */\r\nfunction Text(config) {\r\n\r\n  this._config = assign({}, {\r\n    size: DEFAULT_LABEL_SIZE,\r\n    padding: DEFAULT_BOX_PADDING,\r\n    style: {},\r\n    align: 'center-top'\r\n  }, config || {});\r\n}\r\n\r\n/**\r\n * Returns the layouted text as an SVG element.\r\n *\r\n * @param {String} text\r\n * @param {Object} options\r\n *\r\n * @return {SVGText}\r\n */\r\nText.prototype.createText = function(text, options) {\r\n  return this.layoutText(text, options).element;\r\n};\r\n\r\n/**\r\n * Returns a labels layouted dimensions.\r\n *\r\n * @param {String} text to layout\r\n * @param {Object} options\r\n *\r\n * @return {Dimensions}\r\n */\r\nText.prototype.getDimensions = function(text, options) {\r\n  return this.layoutText(text, options).dimensions;\r\n};\r\n\r\n/**\r\n * Creates and returns a label and its bounding box.\r\n *\r\n * @method Text#createText\r\n *\r\n * @param {String} text the text to render on the label\r\n * @param {Object} options\r\n * @param {String} options.align how to align in the bounding box.\r\n *                               Any of { 'center-middle', 'center-top' },\r\n *                               defaults to 'center-top'.\r\n * @param {String} options.style style to be applied to the text\r\n * @param {boolean} options.fitBox indicates if box will be recalculated to\r\n *                                 fit text\r\n *\r\n * @return {Object} { element, dimensions }\r\n */\r\nText.prototype.layoutText = function(text, options) {\r\n  var box = merge({}, this._config.size, options.box || {}),\r\n      style = merge({}, this._config.style, options.style || {}),\r\n      align = parseAlign(options.align || this._config.align),\r\n      padding = parsePadding(options.padding !== undefined ? options.padding : this._config.padding),\r\n      fitBox = options.fitBox || false;\r\n\r\n  var lines = text.split(//r?/n/g),\r\n      layouted = [];\r\n\r\n  var maxWidth = box.width - padding.left - padding.right;\r\n\r\n  // ensure correct rendering by attaching helper text node to invisible SVG\r\n  var helperText = svgCreate('text');\r\n  svgAttr(helperText, { x: 0, y: 0 });\r\n  svgAttr(helperText, style);\r\n\r\n  var helperSvg = getHelperSvg();\r\n\r\n  svgAppend(helperSvg, helperText);\r\n\r\n  while (lines.length) {\r\n    layouted.push(layoutNext(lines, maxWidth, helperText));\r\n  }\r\n\r\n  var totalHeight = reduce(layouted, function(sum, line, idx) {\r\n    return sum + line.height;\r\n  }, 0);\r\n\r\n  var maxLineWidth = reduce(layouted, function(sum, line, idx) {\r\n    return line.width > sum ? line.width : sum;\r\n  }, 0);\r\n\r\n  // the y position of the next line\r\n  var y, x;\r\n\r\n  switch (align.vertical) {\r\n  case 'middle':\r\n    y = (box.height - totalHeight) / 2 - layouted[0].height / 4;\r\n    break;\r\n\r\n  default:\r\n    y = padding.top;\r\n  }\r\n\r\n  var textElement = svgCreate('text');\r\n\r\n  svgAttr(textElement, style);\r\n\r\n  // layout each line taking into account that parent\r\n  // shape might resize to fit text size\r\n  forEach(layouted, function(line) {\r\n    y += line.height;\r\n\r\n    switch (align.horizontal) {\r\n    case 'left':\r\n      x = padding.left;\r\n      break;\r\n\r\n    case 'right':\r\n      x = ((fitBox ? maxLineWidth : maxWidth)\r\n        - padding.right - line.width);\r\n      break;\r\n\r\n    default:\r\n      // aka center\r\n      x = Math.max((((fitBox ? maxLineWidth : maxWidth)\r\n        - line.width) / 2 + padding.left), 0);\r\n    }\r\n\r\n    var tspan = svgCreate('tspan');\r\n    svgAttr(tspan, { x: x, y: y });\r\n\r\n    tspan.textContent = line.text;\r\n\r\n    svgAppend(textElement, tspan);\r\n  });\r\n\r\n  svgRemove(helperText);\r\n\r\n  var dimensions = {\r\n    width: maxLineWidth,\r\n    height: totalHeight\r\n  };\r\n\r\n  return {\r\n    dimensions: dimensions,\r\n    element: textElement\r\n  };\r\n};\r\n\r\nmodule.exports = Text;\r\n","\nvar isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nvar annotate = function() {\n  var args = Array.prototype.slice.call(arguments);\n  \n  if (args.length === 1 && isArray(args[0])) {\n    args = args[0];\n  }\n\n  var fn = args.pop();\n\n  fn.$inject = args;\n\n  return fn;\n};\n\n\n// Current limitations:\n// - can't put into \"function arg\" comments\n// function /* (no parenthesis like this) */ (){}\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\n//\n// Just put the comment before function or inside:\n// /* (((this is fine))) */ function(a, b) {}\n// function abc(a) { /* (((this is fine))) */}\n\nvar FN_ARGS = /^function/s*[^/(]*/(/s*([^/)]*)/)/m;\nvar FN_ARG = ////*([^/*]*)/*///m;\n\nvar parse = function(fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('Cannot annotate \"' + fn + '\". Expected a function!');\n  }\n\n  var match = fn.toString().match(FN_ARGS);\n  return match[1] && match[1].split(',').map(function(arg) {\n    match = arg.match(FN_ARG);\n    return match ? match[1].trim() : arg.trim();\n  }) || [];\n};\n\n\nexports.annotate = annotate;\nexports.parse = parse;\nexports.isArray = isArray;\n","module.exports = {\n  annotate: require(281).annotate,\n  Module: require(284),\n  Injector: require(283)\n};\n","var Module = require(284);\nvar autoAnnotate = require(281).parse;\nvar annotate = require(281).annotate;\nvar isArray = require(281).isArray;\n\n\nvar Injector = function(modules, parent) {\n  parent = parent || {\n    get: function(name, strict) {\n      currentlyResolving.push(name);\n\n      if (strict === false) {\n        return null;\n      } else {\n        throw error('No provider for \"' + name + '\"!');\n      }\n    }\n  };\n\n  var currentlyResolving = [];\n  var providers = this._providers = Object.create(parent._providers || null);\n  var instances = this._instances = Object.create(null);\n\n  var self = instances.injector = this;\n\n  var error = function(msg) {\n    var stack = currentlyResolving.join(' -> ');\n    currentlyResolving.length = 0;\n    return new Error(stack ? msg + ' (Resolving: ' + stack + ')' : msg);\n  };\n\n  /**\n   * Return a named service.\n   *\n   * @param {String} name\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   *\n   * @return {Object}\n   */\n  var get = function(name, strict) {\n    if (!providers[name] && name.indexOf('.') !== -1) {\n      var parts = name.split('.');\n      var pivot = get(parts.shift());\n\n      while(parts.length) {\n        pivot = pivot[parts.shift()];\n      }\n\n      return pivot;\n    }\n\n    if (Object.hasOwnProperty.call(instances, name)) {\n      return instances[name];\n    }\n\n    if (Object.hasOwnProperty.call(providers, name)) {\n      if (currentlyResolving.indexOf(name) !== -1) {\n        currentlyResolving.push(name);\n        throw error('Cannot resolve circular dependency!');\n      }\n\n      currentlyResolving.push(name);\n      instances[name] = providers[name][0](providers[name][1]);\n      currentlyResolving.pop();\n\n      return instances[name];\n    }\n\n    return parent.get(name, strict);\n  };\n\n  var instantiate = function(Type) {\n    var instance = Object.create(Type.prototype);\n    var returned = invoke(Type, instance);\n\n    return typeof returned === 'object' ? returned : instance;\n  };\n\n  var invoke = function(fn, context) {\n    if (typeof fn !== 'function') {\n      if (isArray(fn)) {\n        fn = annotate(fn.slice());\n      } else {\n        throw new Error('Cannot invoke \"' + fn + '\". Expected a function!');\n      }\n    }\n\n    var inject = fn.$inject && fn.$inject || autoAnnotate(fn);\n    var dependencies = inject.map(function(dep) {\n      return get(dep);\n    });\n\n    // TODO(vojta): optimize without apply\n    return fn.apply(context, dependencies);\n  };\n\n\n  var createPrivateInjectorFactory = function(privateChildInjector) {\n    return annotate(function(key) {\n      return privateChildInjector.get(key);\n    });\n  };\n\n  var createChild = function(modules, forceNewInstances) {\n    if (forceNewInstances && forceNewInstances.length) {\n      var fromParentModule = Object.create(null);\n      var matchedScopes = Object.create(null);\n\n      var privateInjectorsCache = [];\n      var privateChildInjectors = [];\n      var privateChildFactories = [];\n\n      var provider;\n      var cacheIdx;\n      var privateChildInjector;\n      var privateChildInjectorFactory;\n      for (var name in providers) {\n        provider = providers[name];\n\n        if (forceNewInstances.indexOf(name) !== -1) {\n          if (provider[2] === 'private') {\n            cacheIdx = privateInjectorsCache.indexOf(provider[3]);\n            if (cacheIdx === -1) {\n              privateChildInjector = provider[3].createChild([], forceNewInstances);\n              privateChildInjectorFactory = createPrivateInjectorFactory(privateChildInjector);\n              privateInjectorsCache.push(provider[3]);\n              privateChildInjectors.push(privateChildInjector);\n              privateChildFactories.push(privateChildInjectorFactory);\n              fromParentModule[name] = [privateChildInjectorFactory, name, 'private', privateChildInjector];\n            } else {\n              fromParentModule[name] = [privateChildFactories[cacheIdx], name, 'private', privateChildInjectors[cacheIdx]];\n            }\n          } else {\n            fromParentModule[name] = [provider[2], provider[1]];\n          }\n          matchedScopes[name] = true;\n        }\n\n        if ((provider[2] === 'factory' || provider[2] === 'type') && provider[1].$scope) {\n          /*jshint -W083 */\n          forceNewInstances.forEach(function(scope) {\n            if (provider[1].$scope.indexOf(scope) !== -1) {\n              fromParentModule[name] = [provider[2], provider[1]];\n              matchedScopes[scope] = true;\n            }\n          });\n        }\n      }\n\n      forceNewInstances.forEach(function(scope) {\n        if (!matchedScopes[scope]) {\n          throw new Error('No provider for \"' + scope + '\". Cannot use provider from the parent!');\n        }\n      });\n\n      modules.unshift(fromParentModule);\n    }\n\n    return new Injector(modules, self);\n  };\n\n  var factoryMap = {\n    factory: invoke,\n    type: instantiate,\n    value: function(value) {\n      return value;\n    }\n  };\n\n  modules.forEach(function(module) {\n\n    function arrayUnwrap(type, value) {\n      if (type !== 'value' && isArray(value)) {\n        value = annotate(value.slice());\n      }\n\n      return value;\n    }\n\n    // TODO(vojta): handle wrong inputs (modules)\n    if (module instanceof Module) {\n      module.forEach(function(provider) {\n        var name = provider[0];\n        var type = provider[1];\n        var value = provider[2];\n\n        providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n      });\n    } else if (typeof module === 'object') {\n      if (module.__exports__) {\n        var clonedModule = Object.keys(module).reduce(function(m, key) {\n          if (key.substring(0, 2) !== '__') {\n            m[key] = module[key];\n          }\n          return m;\n        }, Object.create(null));\n\n        var privateInjector = new Injector((module.__modules__ || []).concat([clonedModule]), self);\n        var getFromPrivateInjector = annotate(function(key) {\n          return privateInjector.get(key);\n        });\n        module.__exports__.forEach(function(key) {\n          providers[key] = [getFromPrivateInjector, key, 'private', privateInjector];\n        });\n      } else {\n        Object.keys(module).forEach(function(name) {\n          if (module[name][2] === 'private') {\n            providers[name] = module[name];\n            return;\n          }\n\n          var type = module[name][0];\n          var value = module[name][1];\n\n          providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n        });\n      }\n    }\n  });\n\n  // public API\n  this.get = get;\n  this.invoke = invoke;\n  this.instantiate = instantiate;\n  this.createChild = createChild;\n};\n\nmodule.exports = Injector;\n","var Module = function() {\n  var providers = [];\n\n  this.factory = function(name, factory) {\n    providers.push([name, 'factory', factory]);\n    return this;\n  };\n\n  this.value = function(name, value) {\n    providers.push([name, 'value', value]);\n    return this;\n  };\n\n  this.type = function(name, type) {\n    providers.push([name, 'type', type]);\n    return this;\n  };\n\n  this.forEach = function(iterator) {\n    providers.forEach(iterator);\n  };\n};\n\nmodule.exports = Module;\n","\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([/w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^/s+|/s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '/n' + message + ' AT /n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^/(]+?[/n$]/gm, '')\n            .replace(/^/s+at/s+/gm, '')\n            .replace(/^Object.<anonymous>/s*/(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(//s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","'use strict';\n\nvar hat = require(287);\n\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\nfunction Ids(seed) {\n\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [ 128, 36, 1 ];\n  this._seed = seed.length ? hat.rack(seed[0], seed[1], seed[2]) : seed;\n}\n\nmodule.exports = Ids;\n\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.next = function(element) {\n  return this._seed(element || true);\n};\n\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\nIds.prototype.nextPrefixed = function(prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id));\n\n  // claim {prefix}{random}\n  this.claim(id, element);\n\n  // return\n  return id;\n};\n\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\nIds.prototype.claim = function(id, element) {\n  this._seed.set(id, element || true);\n};\n\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\nIds.prototype.assigned = function(id) {\n  return this._seed.get(id) || false;\n};\n\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\nIds.prototype.unclaim = function(id) {\n  delete this._seed.hats[id];\n};\n\n\n/**\n * Clear all claimed ids.\n */\nIds.prototype.clear = function() {\n\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var createFindIndex = require(381);\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(chr) {\n *   return chr.user == 'barney';\n * });\n * // => 0\n *\n * // using the `_.matches` callback shorthand\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.findIndex(users, 'active', false);\n * // => 0\n *\n * // using the `_.property` callback shorthand\n * _.findIndex(users, 'active');\n * // => 2\n */\nvar findIndex = createFindIndex();\n\nmodule.exports = findIndex;\n","var baseFlatten = require(341),\n    isIterateeCall = require(401);\n\n/**\n * Flattens a nested array. If `isDeep` is `true` the array is recursively\n * flattened, otherwise it's only flattened a single level.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, 3, [4]]]);\n * // => [1, 2, 3, [4]]\n *\n * // using `isDeep`\n * _.flatten([1, [2, 3, [4]]], true);\n * // => [1, 2, 3, 4]\n */\nfunction flatten(array, isDeep, guard) {\n  var length = array ? array.length : 0;\n  if (guard && isIterateeCall(array, isDeep, guard)) {\n    isDeep = false;\n  }\n  return length ? baseFlatten(array, isDeep) : [];\n}\n\nmodule.exports = flatten;\n","var baseIndexOf = require(346),\n    cacheIndexOf = require(368),\n    createCache = require(378),\n    isArrayLike = require(399),\n    restParam = require(315);\n\n/**\n * Creates an array of unique values that are included in all of the provided\n * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of shared values.\n * @example\n * _.intersection([1, 2], [4, 2], [2, 1]);\n * // => [2]\n */\nvar intersection = restParam(function(arrays) {\n  var othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(length),\n      indexOf = baseIndexOf,\n      isCommon = true,\n      result = [];\n\n  while (othIndex--) {\n    var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n    caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n  }\n  var array = arrays[0],\n      index = -1,\n      length = array ? array.length : 0,\n      seen = caches[0];\n\n  outer:\n  while (++index < length) {\n    value = array[index];\n    if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n      var othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(value);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n});\n\nmodule.exports = intersection;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var baseFlatten = require(341),\n    baseUniq = require(364),\n    restParam = require(315);\n\n/**\n * Creates an array of unique values, in order, from all of the provided arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([1, 2], [4, 2], [2, 1]);\n * // => [1, 2, 4]\n */\nvar union = restParam(function(arrays) {\n  return baseUniq(baseFlatten(arrays, false, true));\n});\n\nmodule.exports = union;\n","var baseCallback = require(329),\n    baseUniq = require(364),\n    isIterateeCall = require(401),\n    sortedUniq = require(416);\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurence of each element\n * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n * for sorted arrays. If an iteratee function is provided it's invoked for\n * each element in the array to generate the criterion by which uniqueness\n * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index, array).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias unique\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {boolean} [isSorted] Specify the array is sorted.\n * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new duplicate-value-free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n *\n * // using `isSorted`\n * _.uniq([1, 1, 2], true);\n * // => [1, 2]\n *\n * // using an iteratee function\n * _.uniq([1, 2.5, 1.5, 2], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => [1, 2.5]\n *\n * // using the `_.property` callback shorthand\n * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniq(array, isSorted, iteratee, thisArg) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (isSorted != null && typeof isSorted != 'boolean') {\n    thisArg = iteratee;\n    iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n    isSorted = false;\n  }\n  iteratee = iteratee == null ? iteratee : baseCallback(iteratee, thisArg, 3);\n  return (isSorted)\n    ? sortedUniq(array, iteratee)\n    : baseUniq(array, iteratee);\n}\n\nmodule.exports = uniq;\n","module.exports = require(295);\n","var baseDifference = require(335),\n    isArrayLike = require(399),\n    restParam = require(315);\n\n/**\n * Creates an array excluding all provided values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to filter.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.without([1, 2, 1, 3], 1, 2);\n * // => [3]\n */\nvar without = restParam(function(array, values) {\n  return isArrayLike(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n","var LazyWrapper = require(316),\n    LodashWrapper = require(317),\n    baseLodash = require(350),\n    isArray = require(422),\n    isObjectLike = require(405),\n    wrapperClone = require(419);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n * Methods that operate on and return arrays, collections, and functions can\n * be chained together. Methods that retrieve a single value or may return a\n * primitive value will automatically end the chain returning the unwrapped\n * value. Explicit chaining may be enabled using `_.chain`. The execution of\n * chained methods is lazy, that is, execution is deferred until `_#value`\n * is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n * fusion is an optimization strategy which merge iteratee calls; this can help\n * to avoid the creation of intermediate data structures and greatly reduce the\n * number of iteratee executions.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n * `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n * and `where`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n * `unescape`, `uniqueId`, `value`, and `words`\n *\n * The wrapper method `sample` will return a wrapped value when `n` is provided,\n * otherwise an unwrapped value is returned.\n *\n * @name _\n * @constructor\n * @category Chain\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // returns an unwrapped value\n * wrapped.reduce(function(total, n) {\n *   return total + n;\n * });\n * // => 6\n *\n * // returns a wrapped value\n * var squares = wrapped.map(function(n) {\n *   return n * n;\n * });\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\n\nmodule.exports = lodash;\n","module.exports = require(309);\n","var arrayEvery = require(321),\n    baseCallback = require(329),\n    baseEvery = require(337),\n    isArray = require(422),\n    isIterateeCall = require(401);\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * The predicate is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias all\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'active': false },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.every(users, 'active', false);\n * // => true\n *\n * // using the `_.property` callback shorthand\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n    predicate = undefined;\n  }\n  if (typeof predicate != 'function' || thisArg !== undefined) {\n    predicate = baseCallback(predicate, thisArg, 3);\n  }\n  return func(collection, predicate);\n}\n\nmodule.exports = every;\n","var arrayFilter = require(322),\n    baseCallback = require(329),\n    baseFilter = require(338),\n    isArray = require(422);\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.filter([4, 5, 6], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [4, 6]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.filter(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.filter(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction filter(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, predicate);\n}\n\nmodule.exports = filter;\n","var baseEach = require(336),\n    createFind = require(380);\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.result(_.find(users, function(chr) {\n *   return chr.age < 40;\n * }), 'user');\n * // => 'barney'\n *\n * // using the `_.matches` callback shorthand\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n * // => 'pebbles'\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.result(_.find(users, 'active', false), 'user');\n * // => 'fred'\n *\n * // using the `_.property` callback shorthand\n * _.result(_.find(users, 'active'), 'user');\n * // => 'barney'\n */\nvar find = createFind(baseEach);\n\nmodule.exports = find;\n","var arrayEach = require(320),\n    baseEach = require(336),\n    createForEach = require(382);\n\n/**\n * Iterates over elements of `collection` invoking `iteratee` for each element.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection). Iteratee functions may exit iteration early\n * by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2]).forEach(function(n) {\n *   console.log(n);\n * }).value();\n * // => logs each value from left to right and returns the array\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n *   console.log(n, key);\n * });\n * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n */\nvar forEach = createForEach(arrayEach, baseEach);\n\nmodule.exports = forEach;\n","var createAggregator = require(373);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` through `iteratee`. The corresponding value\n * of each key is an array of the elements responsible for generating the key.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return Math.floor(n);\n * });\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * // using the `_.property` callback shorthand\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\nmodule.exports = groupBy;\n","var arrayMap = require(323),\n    baseCallback = require(329),\n    baseMap = require(351),\n    isArray = require(422);\n\n/**\n * Creates an array of values by running each element in `collection` through\n * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n * `sum`, `uniq`, and `words`\n *\n * @static\n * @memberOf _\n * @alias collect\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function timesThree(n) {\n *   return n * 3;\n * }\n *\n * _.map([1, 2], timesThree);\n * // => [3, 6]\n *\n * _.map({ 'a': 1, 'b': 2 }, timesThree);\n * // => [3, 6] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // using the `_.property` callback shorthand\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee, thisArg) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  iteratee = baseCallback(iteratee, thisArg, 3);\n  return func(collection, iteratee);\n}\n\nmodule.exports = map;\n","var arrayReduce = require(325),\n    baseEach = require(336),\n    createReduce = require(385);\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` through `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not provided the first element of `collection` is used as the initial\n * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n * and `sortByOrder`\n *\n * @static\n * @memberOf _\n * @alias foldl, inject\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.reduce([1, 2], function(total, n) {\n *   return total + n;\n * });\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n *   result[key] = n * 3;\n *   return result;\n * }, {});\n * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n */\nvar reduce = createReduce(arrayReduce, baseEach);\n\nmodule.exports = reduce;\n","var arrayFilter = require(322),\n    baseCallback = require(329),\n    baseFilter = require(338),\n    isArray = require(422);\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.reject([1, 2, 3, 4], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [1, 3]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.reject(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.reject(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction reject(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, function(value, index, collection) {\n    return !predicate(value, index, collection);\n  });\n}\n\nmodule.exports = reject;\n","var getLength = require(392),\n    isLength = require(404),\n    keys = require(433);\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the size of `collection`.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? getLength(collection) : 0;\n  return isLength(length) ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n","var arraySome = require(326),\n    baseCallback = require(329),\n    baseSome = require(361),\n    isArray = require(422),\n    isIterateeCall = require(401);\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * The function returns as soon as it finds a passing value and does not iterate\n * over the entire collection. The predicate is bound to `thisArg` and invoked\n * with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias any\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.some(users, 'active', false);\n * // => true\n *\n * // using the `_.property` callback shorthand\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n    predicate = undefined;\n  }\n  if (typeof predicate != 'function' || thisArg !== undefined) {\n    predicate = baseCallback(predicate, thisArg, 3);\n  }\n  return func(collection, predicate);\n}\n\nmodule.exports = some;\n","var baseCallback = require(329),\n    baseMap = require(351),\n    baseSortBy = require(362),\n    compareAscending = require(370),\n    isIterateeCall = require(401);\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection through `iteratee`. This method performs\n * a stable sort, that is, it preserves the original sort order of equal elements.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * _.sortBy([1, 2, 3], function(n) {\n *   return Math.sin(n);\n * });\n * // => [3, 1, 2]\n *\n * _.sortBy([1, 2, 3], function(n) {\n *   return this.sin(n);\n * }, Math);\n * // => [3, 1, 2]\n *\n * var users = [\n *   { 'user': 'fred' },\n *   { 'user': 'pebbles' },\n *   { 'user': 'barney' }\n * ];\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.sortBy(users, 'user'), 'user');\n * // => ['barney', 'fred', 'pebbles']\n */\nfunction sortBy(collection, iteratee, thisArg) {\n  if (collection == null) {\n    return [];\n  }\n  if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n    iteratee = undefined;\n  }\n  var index = -1;\n  iteratee = baseCallback(iteratee, thisArg, 3);\n\n  var result = baseMap(collection, function(value, key, collection) {\n    return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n  });\n  return baseSortBy(result, compareAscending);\n}\n\nmodule.exports = sortBy;\n","var getNative = require(394);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeNow = getNative(Date, 'now');\n\n/**\n * Gets the number of milliseconds that have elapsed since the Unix epoch\n * (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @category Date\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => logs the number of milliseconds it took for the deferred function to be invoked\n */\nvar now = nativeNow || function() {\n  return new Date().getTime();\n};\n\nmodule.exports = now;\n","var createWrapper = require(386),\n    replaceHolders = require(413),\n    restParam = require(315);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and prepends any additional `_.bind` arguments to those provided to the\n * bound function.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var greet = function(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * };\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // using placeholders\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = restParam(function(func, thisArg, partials) {\n  var bitmask = BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, bind.placeholder);\n    bitmask |= PARTIAL_FLAG;\n  }\n  return createWrapper(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nmodule.exports = bind;\n","var isObject = require(426),\n    now = require(311);\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed invocations. Provide an options object to indicate that `func`\n * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify invoking on the leading\n *  edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n *  delayed before it's invoked.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // ensure `batchLog` is invoked once after 1 second of debounced calls\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', _.debounce(batchLog, 250, {\n *   'maxWait': 1000\n * }));\n *\n * // cancel a debounced call\n * var todoChanges = _.debounce(batchLog, 1000);\n * Object.observe(models.todo, todoChanges);\n *\n * Object.observe(models, function(changes) {\n *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n *     todoChanges.cancel();\n *   }\n * }, ['delete']);\n *\n * // ...at some point `models.todo` is changed\n * models.todo.completed = true;\n *\n * // ...before 1 second has passed `models.todo` is deleted\n * // which cancels the debounced `todoChanges` call\n * delete models.todo;\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      maxWait = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = wait < 0 ? 0 : (+wait || 0);\n  if (options === true) {\n    var leading = true;\n    trailing = false;\n  } else if (isObject(options)) {\n    leading = !!options.leading;\n    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    if (maxTimeoutId) {\n      clearTimeout(maxTimeoutId);\n    }\n    lastCalled = 0;\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n  }\n\n  function complete(isCalled, id) {\n    if (id) {\n      clearTimeout(id);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (isCalled) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = undefined;\n      }\n    }\n  }\n\n  function delayed() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0 || remaining > wait) {\n      complete(trailingCall, maxTimeoutId);\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  }\n\n  function maxDelayed() {\n    complete(trailing, timeoutId);\n  }\n\n  function debounced() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0 || remaining > maxWait;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = undefined;\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseDelay = require(334),\n    restParam = require(315);\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // logs 'deferred' after one or more milliseconds\n */\nvar defer = restParam(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nmodule.exports = defer;\n","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n","var baseCreate = require(333),\n    baseLodash = require(350);\n\n/** Used as references for `-Infinity` and `Infinity`. */\nvar POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = POSITIVE_INFINITY;\n  this.__views__ = [];\n}\n\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var baseCreate = require(333),\n    baseLodash = require(350);\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n */\nfunction LodashWrapper(value, chainAll, actions) {\n  this.__wrapped__ = value;\n  this.__actions__ = actions || [];\n  this.__chain__ = !!chainAll;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var cachePush = require('./cachePush'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n *\n * Creates a cache object to store unique values.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var length = values ? values.length : 0;\n\n  this.data = { 'hash': nativeCreate(null), 'set': new Set };\n  while (length--) {\n    this.push(values[length]);\n  }\n}\n\n// Add functions to the `Set` cache.\nSetCache.prototype.push = cachePush;\n\nmodule.exports = SetCache;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.every` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = arrayEvery;\n","/**\n * A specialized version of `_.filter` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * A specialized version of `_.map` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.reduce` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initFromArray] Specify using the first element of `array`\n *  as the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initFromArray) {\n  var index = -1,\n      length = array.length;\n\n  if (initFromArray && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var keys = require(433);\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\nmodule.exports = assignWith;\n","var baseCopy = require(332),\n    keys = require(433);\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseMatches = require(352),\n    baseMatchesProperty = require(353),\n    bindCallback = require(366),\n    identity = require(441),\n    property = require(443);\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;\n","var arrayCopy = require(319),\n    arrayEach = require(320),\n    baseAssign = require(328),\n    baseForOwn = require(344),\n    initCloneArray = require(396),\n    initCloneByTag = require(397),\n    initCloneObject = require(398),\n    isArray = require(422),\n    isObject = require(426);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * The base implementation of `compareAscending` which compares values and\n * sorts them in ascending order without guaranteeing a stable sort.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction baseCompareAscending(value, other) {\n  if (value !== other) {\n    var valIsNull = value === null,\n        valIsUndef = value === undefined,\n        valIsReflexive = value === value;\n\n    var othIsNull = other === null,\n        othIsUndef = other === undefined,\n        othIsReflexive = other === other;\n\n    if ((value > other && !othIsNull) || !valIsReflexive ||\n        (valIsNull && !othIsUndef && othIsReflexive) ||\n        (valIsUndef && othIsReflexive)) {\n      return 1;\n    }\n    if ((value < other && !valIsNull) || !othIsReflexive ||\n        (othIsNull && !valIsUndef && valIsReflexive) ||\n        (othIsUndef && valIsReflexive)) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = baseCompareAscending;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var isObject = require(426);\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(prototype) {\n    if (isObject(prototype)) {\n      object.prototype = prototype;\n      var result = new object;\n      object.prototype = undefined;\n    }\n    return result || {};\n  };\n}());\n\nmodule.exports = baseCreate;\n","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts an index\n * of where to slice the arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Object} args The arguments provide to `func`.\n * @returns {number} Returns the timer id.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n","var baseIndexOf = require(346),\n    cacheIndexOf = require(368),\n    createCache = require(378);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.difference` which accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var length = array ? array.length : 0,\n      result = [];\n\n  if (!length) {\n    return result;\n  }\n  var index = -1,\n      indexOf = baseIndexOf,\n      isCommon = true,\n      cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n      valuesLength = values.length;\n\n  if (cache) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n    values = cache;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index];\n\n    if (isCommon && value === value) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === value) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (indexOf(values, value, 0) < 0) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var baseForOwn = require(344),\n    createBaseEach = require(375);\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require(336);\n\n/**\n * The base implementation of `_.every` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n","var baseEach = require(336);\n\n/**\n * The base implementation of `_.filter` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require(324),\n    isArguments = require(421),\n    isArray = require(422),\n    isArrayLike = require(399),\n    isObjectLike = require(405);\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require(376);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require(342),\n    keysIn = require(434);\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\nmodule.exports = baseForIn;\n","var baseFor = require(342),\n    keys = require(433);\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var toObject = require(417);\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var indexOfNaN = require(395);\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n","var baseIsEqualDeep = require(348),\n    isObject = require(426),\n    isObjectLike = require(405);\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n","var equalArrays = require(387),\n    equalByTag = require(388),\n    equalObjects = require(389),\n    isArray = require(422),\n    isTypedArray = require(429);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqual = require(347),\n    toObject = require(417);\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The function whose prototype all chaining wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var baseEach = require(336),\n    isArrayLike = require(399);\n\n/**\n * The base implementation of `_.map` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseIsMatch = require(349),\n    getMatchData = require(393),\n    toObject = require(417);\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGet = require(345),\n    baseIsEqual = require(347),\n    baseSlice = require(360),\n    isArray = require(422),\n    isKey = require(402),\n    isStrictComparable = require(406),\n    last = require(293),\n    toObject = require(417),\n    toPath = require(418);\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var arrayEach = require(320),\n    baseMergeDeep = require(355),\n    isArray = require(422),\n    isArrayLike = require(399),\n    isObject = require(426),\n    isObjectLike = require(405),\n    isTypedArray = require(429),\n    keys = require(433);\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\nmodule.exports = baseMerge;\n","var arrayCopy = require(319),\n    isArguments = require(421),\n    isArray = require(422),\n    isArrayLike = require(399),\n    isPlainObject = require(427),\n    isTypedArray = require(429),\n    toPlainObject = require(430);\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = result === undefined;\n\n  if (isCommon) {\n    result = srcValue;\n    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : (isArrayLike(value) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\nmodule.exports = baseMergeDeep;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require(345),\n    toPath = require(418);\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight` without support\n * for callback shorthands and `this` binding, which iterates over `collection`\n * using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initFromCollection Specify using the first or last element\n *  of `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initFromCollection\n      ? (initFromCollection = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","var identity = require(441),\n    metaMap = require(408);\n\n/**\n * The base implementation of `setData` without support for hot loop detection.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseEach = require(336);\n\n/**\n * The base implementation of `_.some` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define\n * the sort order of `array` and replaces criteria objects with their\n * corresponding values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n","var baseIndexOf = require(346),\n    cacheIndexOf = require(368),\n    createCache = require(378);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniq` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array.length,\n      isCommon = true,\n      isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n      seen = isLarge ? createCache() : null,\n      result = [];\n\n  if (seen) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n  } else {\n    isLarge = false;\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value, index, array) : value;\n\n    if (isCommon && value === value) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (indexOf(seen, computed, 0) < 0) {\n      if (iteratee || isLarge) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  var index = -1,\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = object[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = baseValues;\n","var identity = require(441);\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n","var isObject = require(426);\n\n/**\n * Checks if `value` is in `cache` mimicking the return signature of\n * `_.indexOf` by returning `0` if the value is found, else `-1`.\n *\n * @private\n * @param {Object} cache The cache to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns `0` if `value` is found, else `-1`.\n */\nfunction cacheIndexOf(cache, value) {\n  var data = cache.data,\n      result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n  return result ? 0 : -1;\n}\n\nmodule.exports = cacheIndexOf;\n","var isObject = require(426);\n\n/**\n * Adds `value` to the cache.\n *\n * @private\n * @name push\n * @memberOf SetCache\n * @param {*} value The value to cache.\n */\nfunction cachePush(value) {\n  var data = this.data;\n  if (typeof value == 'string' || isObject(value)) {\n    data.set.add(value);\n  } else {\n    data.hash[value] = true;\n  }\n}\n\nmodule.exports = cachePush;\n","var baseCompareAscending = require(331);\n\n/**\n * Used by `_.sortBy` to compare transformed elements of a collection and stable\n * sort them in ascending order.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareAscending(object, other) {\n  return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n}\n\nmodule.exports = compareAscending;\n","/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders) {\n  var holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      leftIndex = -1,\n      leftLength = partials.length,\n      result = Array(leftLength + argsLength);\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    result[holders[argsIndex]] = args[argsIndex];\n  }\n  while (argsLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders) {\n  var holdersIndex = -1,\n      holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      rightIndex = -1,\n      rightLength = partials.length,\n      result = Array(argsLength + rightLength);\n\n  while (++argsIndex < argsLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    result[offset + holders[holdersIndex]] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","var baseCallback = require(329),\n    baseEach = require(336),\n    isArray = require(422);\n\n/**\n * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n *\n * @private\n * @param {Function} setter The function to set keys and values of the accumulator object.\n * @param {Function} [initializer] The function to initialize the accumulator object.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee, thisArg) {\n    var result = initializer ? initializer() : {};\n    iteratee = baseCallback(iteratee, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, iteratee(value, index, collection), collection);\n      }\n    } else {\n      baseEach(collection, function(value, key, collection) {\n        setter(result, value, iteratee(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n","var bindCallback = require(366),\n    isIterateeCall = require(401),\n    restParam = require(315);\n\n/**\n * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var getLength = require(392),\n    isLength = require(404),\n    toObject = require(417);\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var toObject = require(417);\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createCtorWrapper = require('./createCtorWrapper');\n\n/**\n * Creates a function that wraps `func` and invokes it with the `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new bound function.\n */\nfunction createBindWrapper(func, thisArg) {\n  var Ctor = createCtorWrapper(func);\n\n  function wrapper() {\n    var fn = (this && this !== global && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(thisArg, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBindWrapper;\n","var SetCache = require('./SetCache'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a `Set` cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [values] The values to cache.\n * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n */\nfunction createCache(values) {\n  return (nativeCreate && Set) ? new SetCache(values) : null;\n}\n\nmodule.exports = createCache;\n","var baseCreate = require(333),\n    isObject = require(426);\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtorWrapper(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors.\n    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtorWrapper;\n","var baseCallback = require(329),\n    baseFind = require(339),\n    baseFindIndex = require(340),\n    isArray = require(422);\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n","var baseCallback = require(329),\n    baseFindIndex = require(340);\n\n/**\n * Creates a `_.findIndex` or `_.findLastIndex` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFindIndex(fromRight) {\n  return function(array, predicate, thisArg) {\n    if (!(array && array.length)) {\n      return -1;\n    }\n    predicate = baseCallback(predicate, thisArg, 3);\n    return baseFindIndex(array, predicate, fromRight);\n  };\n}\n\nmodule.exports = createFindIndex;\n","var bindCallback = require(366),\n    isArray = require(422);\n\n/**\n * Creates a function for `_.forEach` or `_.forEachRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createForEach(arrayFunc, eachFunc) {\n  return function(collection, iteratee, thisArg) {\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee)\n      : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n  };\n}\n\nmodule.exports = createForEach;\n","var arrayCopy = require('./arrayCopy'),\n    composeArgs = require('./composeArgs'),\n    composeArgsRight = require('./composeArgsRight'),\n    createCtorWrapper = require('./createCtorWrapper'),\n    isLaziable = require('./isLaziable'),\n    reorder = require('./reorder'),\n    replaceHolders = require('./replaceHolders'),\n    setData = require('./setData');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that wraps `func` and invokes it with optional `this`\n * binding of, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & ARY_FLAG,\n      isBind = bitmask & BIND_FLAG,\n      isBindKey = bitmask & BIND_KEY_FLAG,\n      isCurry = bitmask & CURRY_FLAG,\n      isCurryBound = bitmask & CURRY_BOUND_FLAG,\n      isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n      Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it to other functions.\n    var length = arguments.length,\n        index = length,\n        args = Array(length);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight);\n    }\n    if (isCurry || isCurryRight) {\n      var placeholder = wrapper.placeholder,\n          argsHolders = replaceHolders(args, placeholder);\n\n      length -= argsHolders.length;\n      if (length < arity) {\n        var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n            newArity = nativeMax(arity - length, 0),\n            newsHolders = isCurry ? argsHolders : undefined,\n            newHoldersRight = isCurry ? undefined : argsHolders,\n            newPartials = isCurry ? args : undefined,\n            newPartialsRight = isCurry ? undefined : args;\n\n        bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n        bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n        if (!isCurryBound) {\n          bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n        }\n        var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n            result = createHybridWrapper.apply(undefined, newData);\n\n        if (isLaziable(func)) {\n          setData(result, newData);\n        }\n        result.placeholder = placeholder;\n        return result;\n      }\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    }\n    if (isAry && ary < args.length) {\n      args.length = ary;\n    }\n    if (this && this !== global && this instanceof wrapper) {\n      fn = Ctor || createCtorWrapper(func);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybridWrapper;\n","var createCtorWrapper = require('./createCtorWrapper');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` and invokes it with the optional `this`\n * binding of `thisArg` and the `partials` prepended to those provided to\n * the wrapper.\n *\n * @private\n * @param {Function} func The function to partially apply arguments to.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to the new function.\n * @returns {Function} Returns the new bound function.\n */\nfunction createPartialWrapper(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & BIND_FLAG,\n      Ctor = createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it `func`.\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength);\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    var fn = (this && this !== global && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartialWrapper;\n","var baseCallback = require(329),\n    baseReduce = require(358),\n    isArray = require(422);\n\n/**\n * Creates a function for `_.reduce` or `_.reduceRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createReduce(arrayFunc, eachFunc) {\n  return function(collection, iteratee, accumulator, thisArg) {\n    var initFromArray = arguments.length < 3;\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n      : baseReduce(collection, baseCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n  };\n}\n\nmodule.exports = createReduce;\n","var baseSetData = require(359),\n    createBindWrapper = require(377),\n    createHybridWrapper = require(383),\n    createPartialWrapper = require(384),\n    getData = require(390),\n    mergeData = require(407),\n    setData = require(414);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags.\n *  The bitmask may be composed of the following flags:\n *     1 - `_.bind`\n *     2 - `_.bindKey`\n *     4 - `_.curry` or `_.curryRight` of a bound function\n *     8 - `_.curry`\n *    16 - `_.curryRight`\n *    32 - `_.partial`\n *    64 - `_.partialRight`\n *   128 - `_.rearg`\n *   256 - `_.ary`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  length -= (holders ? holders.length : 0);\n  if (bitmask & PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func),\n      newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n  if (data) {\n    mergeData(newData, data);\n    bitmask = newData[1];\n    arity = newData[9];\n  }\n  newData[9] = arity == null\n    ? (isBindKey ? 0 : func.length)\n    : (nativeMax(arity - length, 0) || 0);\n\n  if (bitmask == BIND_FLAG) {\n    var result = createBindWrapper(newData[0], newData[2]);\n  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n    result = createPartialWrapper.apply(undefined, newData);\n  } else {\n    result = createHybridWrapper.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setter(result, newData);\n}\n\nmodule.exports = createWrapper;\n","var arraySome = require(326);\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalArrays;\n","/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var keys = require(433);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n","var metaMap = require(408),\n    noop = require(442);\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require(411);\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = array ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var baseProperty = require(356);\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isStrictComparable = require(406),\n    pairs = require(437);\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var isNative = require(424);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = indexOfNaN;\n","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var bufferClone = require(367);\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = //w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n","var getLength = require(392),\n    isLength = require(404);\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^/d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require(399),\n    isIndex = require(400),\n    isObject = require(426);\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var isArray = require(422),\n    toObject = require(417);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = //.|/[(?:[^[/]]*|([\"'])(?:(?!/1)[^/n//]|//.)*?/1)/]/,\n    reIsPlainProp = /^/w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n","var LazyWrapper = require(316),\n    getData = require(390),\n    getFuncName = require(391),\n    lodash = require(298);\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isObject = require(426);\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var arrayCopy = require(319),\n    composeArgs = require(371),\n    composeArgsRight = require(372),\n    replaceHolders = require(413);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256;\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers required to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n * augment function arguments, making the order in which they are executed important,\n * preventing the merging of metadata. However, we make an exception for a safe\n * common case where curried functions have `_.ary` and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < ARY_FLAG;\n\n  var isCombo =\n    (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n    (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n    (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = arrayCopy(value);\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var getNative = require('./getNative');\n\n/** Native method references. */\nvar WeakMap = getNative(global, 'WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","var toObject = require(417);\n\n/**\n * A specialized version of `_.pick` which picks `object` properties specified\n * by `props`.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property names to pick.\n * @returns {Object} Returns the new object.\n */\nfunction pickByArray(object, props) {\n  object = toObject(object);\n\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = pickByArray;\n","var baseForIn = require(343);\n\n/**\n * A specialized version of `_.pick` which picks `object` properties `predicate`\n * returns truthy for.\n *\n * @private\n * @param {Object} object The source object.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Object} Returns the new object.\n */\nfunction pickByCallback(object, predicate) {\n  var result = {};\n  baseForIn(object, function(value, key, object) {\n    if (predicate(value, key, object)) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\nmodule.exports = pickByCallback;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var arrayCopy = require(319),\n    isIndex = require(400);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = arrayCopy(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    if (array[index] === placeholder) {\n      array[index] = PLACEHOLDER;\n      result[++resIndex] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var baseSetData = require(359),\n    now = require(311);\n\n/** Used to detect when a function becomes hot. */\nvar HOT_COUNT = 150,\n    HOT_SPAN = 16;\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity function\n * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = (function() {\n  var count = 0,\n      lastCalled = 0;\n\n  return function(key, value) {\n    var stamp = now(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return key;\n      }\n    } else {\n      count = 0;\n    }\n    return baseSetData(key, value);\n  };\n}());\n\nmodule.exports = setData;\n","var isArguments = require(421),\n    isArray = require(422),\n    isIndex = require(400),\n    isLength = require(404),\n    keysIn = require(434);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","/**\n * An implementation of `_.uniq` optimized for sorted arrays without support\n * for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction sortedUniq(array, iteratee) {\n  var seen,\n      index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value, index, array) : value;\n\n    if (!index || seen !== computed) {\n      seen = computed;\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = sortedUniq;\n","var isObject = require(426);\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseToString = require(363),\n    isArray = require(422);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[/]]+|/[(?:(-?/d+(?:/./d+)?)|([\"'])((?:(?!/2)[^/n//]|//.)*?)/2)/]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = ///(//)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n","var LazyWrapper = require(316),\n    LodashWrapper = require(317),\n    arrayCopy = require(319);\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  return wrapper instanceof LazyWrapper\n    ? wrapper.clone()\n    : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n}\n\nmodule.exports = wrapperClone;\n","var baseClone = require(330),\n    bindCallback = require(366),\n    isIterateeCall = require(401);\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it's\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n","var isArrayLike = require(399),\n    isObjectLike = require(405);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require(394),\n    isLength = require(404),\n    isObjectLike = require(405);\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require(426);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require(423),\n    isObjectLike = require(405);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^/[object .+?Constructor/]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[//^$.*+?()[/]{}|]/g, '//$&')\n  .replace(/hasOwnProperty|(function).*?(?=///()| for .+?(?=///])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","var isObjectLike = require(405);\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(8.4);\n * // => true\n *\n * _.isNumber(NaN);\n * // => true\n *\n * _.isNumber('8.4');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseForIn = require(343),\n    isArguments = require(421),\n    isObjectLike = require(405);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n","var isObjectLike = require(405);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var isLength = require(404),\n    isObjectLike = require(405);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n","var baseCopy = require(332),\n    keysIn = require(434);\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignWith = require(327),\n    baseAssign = require(328),\n    createAssigner = require(374);\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it's invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n","var baseGet = require(345),\n    baseSlice = require(360),\n    isArguments = require(421),\n    isArray = require(422),\n    isIndex = require(400),\n    isKey = require(402),\n    isLength = require(404),\n    last = require(293),\n    toPath = require(418);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `path` is a direct property.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': { 'c': 3 } } };\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b.c');\n * // => true\n *\n * _.has(object, ['a', 'b', 'c']);\n * // => true\n */\nfunction has(object, path) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasOwnProperty.call(object, path);\n  if (!result && !isKey(path)) {\n    path = toPath(path);\n    object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    if (object == null) {\n      return false;\n    }\n    path = last(path);\n    result = hasOwnProperty.call(object, path);\n  }\n  return result || (isLength(object.length) && isIndex(path, object.length) &&\n    (isArray(object) || isArguments(object)));\n}\n\nmodule.exports = has;\n","var getNative = require(394),\n    isArrayLike = require(399),\n    isObject = require(426),\n    shimKeys = require(415);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require(421),\n    isArray = require(422),\n    isIndex = require(400),\n    isLength = require(404),\n    isObject = require(426);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","var baseMerge = require(354),\n    createAssigner = require(374);\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it's invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n","var arrayMap = require(323),\n    baseDifference = require(335),\n    baseFlatten = require(341),\n    bindCallback = require(366),\n    keysIn = require(434),\n    pickByArray = require(409),\n    pickByCallback = require(410),\n    restParam = require(315);\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable properties of `object` that are not omitted.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to omit, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.omit(object, 'age');\n * // => { 'user': 'fred' }\n *\n * _.omit(object, _.isNumber);\n * // => { 'user': 'fred' }\n */\nvar omit = restParam(function(object, props) {\n  if (object == null) {\n    return {};\n  }\n  if (typeof props[0] != 'function') {\n    var props = arrayMap(baseFlatten(props), String);\n    return pickByArray(object, baseDifference(keysIn(object), props));\n  }\n  var predicate = bindCallback(props[0], props[1], 3);\n  return pickByCallback(object, function(value, key, object) {\n    return !predicate(value, key, object);\n  });\n});\n\nmodule.exports = omit;\n","var keys = require(433),\n    toObject = require(417);\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n","var baseFlatten = require(341),\n    bindCallback = require(366),\n    pickByArray = require(409),\n    pickByCallback = require(410),\n    restParam = require(315);\n\n/**\n * Creates an object composed of the picked `object` properties. Property\n * names may be specified as individual arguments or as arrays of property\n * names. If `predicate` is provided it's invoked for each property of `object`\n * picking the properties `predicate` returns truthy for. The predicate is\n * bound to `thisArg` and invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to pick, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.pick(object, 'user');\n * // => { 'user': 'fred' }\n *\n * _.pick(object, _.isString);\n * // => { 'user': 'fred' }\n */\nvar pick = restParam(function(object, props) {\n  if (object == null) {\n    return {};\n  }\n  return typeof props[0] == 'function'\n    ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n    : pickByArray(object, baseFlatten(props));\n});\n\nmodule.exports = pick;\n","var arrayEach = require(320),\n    baseCallback = require(329),\n    baseCreate = require(333),\n    baseForOwn = require(344),\n    isArray = require(422),\n    isFunction = require(423),\n    isObject = require(426),\n    isTypedArray = require(429);\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own enumerable\n * properties through `iteratee`, with each invocation potentially mutating\n * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n * with four arguments: (accumulator, value, key, object). Iteratee functions\n * may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Array|Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * });\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n *   result[key] = n * 3;\n * });\n * // => { 'a': 3, 'b': 6 }\n */\nfunction transform(object, iteratee, accumulator, thisArg) {\n  var isArr = isArray(object) || isTypedArray(object);\n  iteratee = baseCallback(iteratee, thisArg, 4);\n\n  if (accumulator == null) {\n    if (isArr || isObject(object)) {\n      var Ctor = object.constructor;\n      if (isArr) {\n        accumulator = isArray(object) ? new Ctor : [];\n      } else {\n        accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n      }\n    } else {\n      accumulator = {};\n    }\n  }\n  (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","var baseValues = require(365),\n    keys = require(433);\n\n/**\n * Creates an array of the own enumerable property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A no-operation function that returns `undefined` regardless of the\n * arguments it receives.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseProperty = require(356),\n    basePropertyDeep = require(357),\n    isKey = require(402);\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\n\nmodule.exports = function(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n};","module.exports = require(107);","module.exports = function(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n};","module.exports = require(108);","module.exports = require(109);","module.exports = require(285);","module.exports = require(110);","module.exports = require(112);","module.exports = require(113);","module.exports = function(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n};","'use strict';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction lower(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nfunction hasLowerCaseAlias(pkg) {\n  return pkg.xml && pkg.xml.tagAlias === 'lowerCase';\n}\n\n\nmodule.exports.aliasToName = function(alias, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return capitalize(alias);\n  } else {\n    return alias;\n  }\n};\n\nmodule.exports.nameToAlias = function(name, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return lower(name);\n  } else {\n    return name;\n  }\n};\n\nmodule.exports.DEFAULT_NS_MAP = {\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n};\n\nvar XSI_TYPE = module.exports.XSI_TYPE = 'xsi:type';\n\nfunction serializeFormat(element) {\n  return element.xml && element.xml.serialize;\n}\n\nmodule.exports.serializeAsType = function(element) {\n  return serializeFormat(element) === XSI_TYPE;\n};\n\nmodule.exports.serializeAsProperty = function(element) {\n  return serializeFormat(element) === 'property';\n};","'use strict';\n\nvar reduce = require(306),\n    forEach = require(303),\n    find = require(302),\n    assign = require(431),\n    defer = require(314);\n\nvar Stack = require(470),\n    SaxParser = require(469).parser,\n    Moddle = require(457),\n    parseNameNs = require(462).parseName,\n    Types = require(465),\n    coerceType = Types.coerceType,\n    isSimpleType = Types.isSimple,\n    common = require(454),\n    XSI_TYPE = common.XSI_TYPE,\n    XSI_URI = common.DEFAULT_NS_MAP.xsi,\n    serializeAsType = common.serializeAsType,\n    aliasToName = common.aliasToName;\n\nfunction parseNodeAttributes(node) {\n  var nodeAttrs = node.attributes;\n\n  return reduce(nodeAttrs, function(result, v, k) {\n    var name, ns;\n\n    if (!v.local) {\n      name = v.prefix;\n    } else {\n      ns = parseNameNs(v.name, v.prefix);\n      name = ns.name;\n    }\n\n    result[name] = v.value;\n    return result;\n  }, {});\n}\n\nfunction normalizeType(node, attr, model) {\n  var nameNs = parseNameNs(attr.value);\n\n  var uri = node.ns[nameNs.prefix || ''],\n      localName = nameNs.localName,\n      pkg = uri && model.getPackage(uri),\n      typePrefix;\n\n  if (pkg) {\n    typePrefix = pkg.xml && pkg.xml.typePrefix;\n\n    if (typePrefix && localName.indexOf(typePrefix) === 0) {\n      localName = localName.slice(typePrefix.length);\n    }\n\n    attr.value = pkg.prefix + ':' + localName;\n  }\n}\n\n/**\n * Normalizes namespaces for a node given an optional default namespace and a\n * number of mappings from uris to default prefixes.\n *\n * @param  {XmlNode} node\n * @param  {Model} model the model containing all registered namespaces\n * @param  {Uri} defaultNsUri\n */\nfunction normalizeNamespaces(node, model, defaultNsUri) {\n  var uri, prefix;\n\n  uri = node.uri || defaultNsUri;\n\n  if (uri) {\n    var pkg = model.getPackage(uri);\n\n    if (pkg) {\n      prefix = pkg.prefix;\n    } else {\n      prefix = node.prefix;\n    }\n\n    node.prefix = prefix;\n    node.uri = uri;\n  }\n\n  forEach(node.attributes, function(attr) {\n\n    // normalize xsi:type attributes because the\n    // assigned type may or may not be namespace prefixed\n    if (attr.uri === XSI_URI && attr.local === 'type') {\n      normalizeType(node, attr, model);\n    }\n\n    normalizeNamespaces(attr, model, null);\n  });\n}\n\n\nfunction error(message) {\n  return new Error(message);\n}\n\n/**\n * Get the moddle descriptor for a given instance or type.\n *\n * @param  {ModdleElement|Function} element\n *\n * @return {Object} the moddle descriptor\n */\nfunction getModdleDescriptor(element) {\n  return element.$descriptor;\n}\n\n/**\n * A parse context.\n *\n * @class\n *\n * @param {Object} options\n * @param {ElementHandler} options.rootHandler the root handler for parsing a document\n * @param {boolean} [options.lax=false] whether or not to ignore invalid elements\n */\nfunction Context(options) {\n\n  /**\n   * @property {ElementHandler} rootHandler\n   */\n\n  /**\n   * @property {Boolean} lax\n   */\n\n  assign(this, options);\n\n  this.elementsById = {};\n  this.references = [];\n  this.warnings = [];\n\n  /**\n   * Add an unresolved reference.\n   *\n   * @param {Object} reference\n   */\n  this.addReference = function(reference) {\n    this.references.push(reference);\n  };\n\n  /**\n   * Add a processed element.\n   *\n   * @param {ModdleElement} element\n   */\n  this.addElement = function(element) {\n\n    if (!element) {\n      throw error('expected element');\n    }\n\n    var elementsById = this.elementsById;\n\n    var descriptor = getModdleDescriptor(element);\n\n    var idProperty = descriptor.idProperty,\n        id;\n\n    if (idProperty) {\n      id = element.get(idProperty.name);\n\n      if (id) {\n\n        if (elementsById[id]) {\n          throw error('duplicate ID <' + id + '>');\n        }\n\n        elementsById[id] = element;\n      }\n    }\n  };\n\n  /**\n   * Add an import warning.\n   *\n   * @param {Object} warning\n   * @param {String} warning.message\n   * @param {Error} [warning.error]\n   */\n  this.addWarning = function(warning) {\n    this.warnings.push(warning);\n  };\n}\n\nfunction BaseHandler() {}\n\nBaseHandler.prototype.handleEnd = function() {};\nBaseHandler.prototype.handleText = function() {};\nBaseHandler.prototype.handleNode = function() {};\n\n\n/**\n * A simple pass through handler that does nothing except for\n * ignoring all input it receives.\n *\n * This is used to ignore unknown elements and\n * attributes.\n */\nfunction NoopHandler() { }\n\nNoopHandler.prototype = Object.create(BaseHandler.prototype);\n\nNoopHandler.prototype.handleNode = function() {\n  return this;\n};\n\nfunction BodyHandler() {}\n\nBodyHandler.prototype = Object.create(BaseHandler.prototype);\n\nBodyHandler.prototype.handleText = function(text) {\n  this.body = (this.body || '') + text;\n};\n\nfunction ReferenceHandler(property, context) {\n  this.property = property;\n  this.context = context;\n}\n\nReferenceHandler.prototype = Object.create(BodyHandler.prototype);\n\nReferenceHandler.prototype.handleNode = function(node) {\n\n  if (this.element) {\n    throw error('expected no sub nodes');\n  } else {\n    this.element = this.createReference(node);\n  }\n\n  return this;\n};\n\nReferenceHandler.prototype.handleEnd = function() {\n  this.element.id = this.body;\n};\n\nReferenceHandler.prototype.createReference = function(node) {\n  return {\n    property: this.property.ns.name,\n    id: ''\n  };\n};\n\nfunction ValueHandler(propertyDesc, element) {\n  this.element = element;\n  this.propertyDesc = propertyDesc;\n}\n\nValueHandler.prototype = Object.create(BodyHandler.prototype);\n\nValueHandler.prototype.handleEnd = function() {\n\n  var value = this.body || '',\n      element = this.element,\n      propertyDesc = this.propertyDesc;\n\n  value = coerceType(propertyDesc.type, value);\n\n  if (propertyDesc.isMany) {\n    element.get(propertyDesc.name).push(value);\n  } else {\n    element.set(propertyDesc.name, value);\n  }\n};\n\n\nfunction BaseElementHandler() {}\n\nBaseElementHandler.prototype = Object.create(BodyHandler.prototype);\n\nBaseElementHandler.prototype.handleNode = function(node) {\n  var parser = this,\n      element = this.element;\n\n  if (!element) {\n    element = this.element = this.createElement(node);\n\n    this.context.addElement(element);\n  } else {\n    parser = this.handleChild(node);\n  }\n\n  return parser;\n};\n\n/**\n * @class XMLReader.ElementHandler\n *\n */\nfunction ElementHandler(model, type, context) {\n  this.model = model;\n  this.type = model.getType(type);\n  this.context = context;\n}\n\nElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nElementHandler.prototype.addReference = function(reference) {\n  this.context.addReference(reference);\n};\n\nElementHandler.prototype.handleEnd = function() {\n\n  var value = this.body,\n      element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (bodyProperty && value !== undefined) {\n    value = coerceType(bodyProperty.type, value);\n    element.set(bodyProperty.name, value);\n  }\n};\n\n/**\n * Create an instance of the model from the given node.\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.createElement = function(node) {\n  var attributes = parseNodeAttributes(node),\n      Type = this.type,\n      descriptor = getModdleDescriptor(Type),\n      context = this.context,\n      instance = new Type({});\n\n  forEach(attributes, function(value, name) {\n\n    var prop = descriptor.propertiesByName[name],\n        values;\n\n    if (prop && prop.isReference) {\n\n      if (!prop.isMany) {\n        context.addReference({\n          element: instance,\n          property: prop.ns.name,\n          id: value\n        });\n      } else {\n        // IDREFS: parse references as whitespace-separated list\n        values = value.split(' ');\n\n        forEach(values, function(v) {\n          context.addReference({\n            element: instance,\n            property: prop.ns.name,\n            id: v\n          });\n        });\n      }\n\n    } else {\n      if (prop) {\n        value = coerceType(prop.type, value);\n      }\n\n      instance.set(name, value);\n    }\n  });\n\n  return instance;\n};\n\nElementHandler.prototype.getPropertyForNode = function(node) {\n\n  var nameNs = parseNameNs(node.local, node.prefix);\n\n  var type = this.type,\n      model = this.model,\n      descriptor = getModdleDescriptor(type);\n\n  var propertyName = nameNs.name,\n      property = descriptor.propertiesByName[propertyName],\n      elementTypeName,\n      elementType,\n      typeAnnotation;\n\n  // search for properties by name first\n\n  if (property) {\n\n    if (serializeAsType(property)) {\n      typeAnnotation = node.attributes[XSI_TYPE];\n\n      // xsi type is optional, if it does not exists the\n      // default type is assumed\n      if (typeAnnotation) {\n\n        elementTypeName = typeAnnotation.value;\n\n        // TODO: extract real name from attribute\n        elementType = model.getType(elementTypeName);\n\n        return assign({}, property, { effectiveType: getModdleDescriptor(elementType).name });\n      }\n    }\n\n    // search for properties by name first\n    return property;\n  }\n\n\n  var pkg = model.getPackage(nameNs.prefix);\n\n  if (pkg) {\n    elementTypeName = nameNs.prefix + ':' + aliasToName(nameNs.localName, descriptor.$pkg);\n    elementType = model.getType(elementTypeName);\n\n    // search for collection members later\n    property = find(descriptor.properties, function(p) {\n      return !p.isVirtual && !p.isReference && !p.isAttribute && elementType.hasType(p.type);\n    });\n\n    if (property) {\n      return assign({}, property, { effectiveType: getModdleDescriptor(elementType).name });\n    }\n  } else {\n    // parse unknown element (maybe extension)\n    property = find(descriptor.properties, function(p) {\n      return !p.isReference && !p.isAttribute && p.type === 'Element';\n    });\n\n    if (property) {\n      return property;\n    }\n  }\n\n  throw error('unrecognized element <' + nameNs.name + '>');\n};\n\nElementHandler.prototype.toString = function() {\n  return 'ElementDescriptor[' + getModdleDescriptor(this.type).name + ']';\n};\n\nElementHandler.prototype.valueHandler = function(propertyDesc, element) {\n  return new ValueHandler(propertyDesc, element);\n};\n\nElementHandler.prototype.referenceHandler = function(propertyDesc) {\n  return new ReferenceHandler(propertyDesc, this.context);\n};\n\nElementHandler.prototype.handler = function(type) {\n  if (type === 'Element') {\n    return new GenericElementHandler(this.model, type, this.context);\n  } else {\n    return new ElementHandler(this.model, type, this.context);\n  }\n};\n\n/**\n * Handle the child element parsing\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.handleChild = function(node) {\n  var propertyDesc, type, element, childHandler;\n\n  propertyDesc = this.getPropertyForNode(node);\n  element = this.element;\n\n  type = propertyDesc.effectiveType || propertyDesc.type;\n\n  if (isSimpleType(type)) {\n    return this.valueHandler(propertyDesc, element);\n  }\n\n  if (propertyDesc.isReference) {\n    childHandler = this.referenceHandler(propertyDesc).handleNode(node);\n  } else {\n    childHandler = this.handler(type).handleNode(node);\n  }\n\n  var newElement = childHandler.element;\n\n  // child handles may decide to skip elements\n  // by not returning anything\n  if (newElement !== undefined) {\n\n    if (propertyDesc.isMany) {\n      element.get(propertyDesc.name).push(newElement);\n    } else {\n      element.set(propertyDesc.name, newElement);\n    }\n\n    if (propertyDesc.isReference) {\n      assign(newElement, {\n        element: element\n      });\n\n      this.context.addReference(newElement);\n    } else {\n      // establish child -> parent relationship\n      newElement.$parent = element;\n    }\n  }\n\n  return childHandler;\n};\n\n\nfunction GenericElementHandler(model, type, context) {\n  this.model = model;\n  this.context = context;\n}\n\nGenericElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nGenericElementHandler.prototype.createElement = function(node) {\n\n  var name = node.name,\n      prefix = node.prefix,\n      uri = node.ns[prefix],\n      attributes = node.attributes;\n\n  return this.model.createAny(name, uri, attributes);\n};\n\nGenericElementHandler.prototype.handleChild = function(node) {\n\n  var handler = new GenericElementHandler(this.model, 'Element', this.context).handleNode(node),\n      element = this.element;\n\n  var newElement = handler.element,\n      children;\n\n  if (newElement !== undefined) {\n    children = element.$children = element.$children || [];\n    children.push(newElement);\n\n    // establish child -> parent relationship\n    newElement.$parent = element;\n  }\n\n  return handler;\n};\n\nGenericElementHandler.prototype.handleText = function(text) {\n  this.body = this.body || '' + text;\n};\n\nGenericElementHandler.prototype.handleEnd = function() {\n  if (this.body) {\n    this.element.$body = this.body;\n  }\n};\n\n/**\n * A reader for a meta-model\n *\n * @param {Object} options\n * @param {Model} options.model used to read xml files\n * @param {Boolean} options.lax whether to make parse errors warnings\n */\nfunction XMLReader(options) {\n\n  if (options instanceof Moddle) {\n    options = {\n      model: options\n    };\n  }\n\n  assign(this, { lax: false }, options);\n}\n\n\n/**\n * Parse the given XML into a moddle document tree.\n *\n * @param {String} xml\n * @param {ElementHandler|Object} options or rootHandler\n * @param  {Function} done\n */\nXMLReader.prototype.fromXML = function(xml, options, done) {\n\n  var rootHandler = options.rootHandler;\n\n  if (options instanceof ElementHandler) {\n    // root handler passed via (xml, { rootHandler: ElementHandler }, ...)\n    rootHandler = options;\n    options = {};\n  } else {\n    if (typeof options === 'string') {\n      // rootHandler passed via (xml, 'someString', ...)\n      rootHandler = this.handler(options);\n      options = {};\n    } else if (typeof rootHandler === 'string') {\n      // rootHandler passed via (xml, { rootHandler: 'someString' }, ...)\n      rootHandler = this.handler(rootHandler);\n    }\n  }\n\n  var model = this.model,\n      lax = this.lax;\n\n  var context = new Context(assign({}, options, { rootHandler: rootHandler })),\n      parser = new SaxParser(true, { xmlns: true, trim: true }),\n      stack = new Stack();\n\n  rootHandler.context = context;\n\n  // push root handler\n  stack.push(rootHandler);\n\n\n  function resolveReferences() {\n\n    var elementsById = context.elementsById;\n    var references = context.references;\n\n    var i, r;\n\n    for (i = 0; !!(r = references[i]); i++) {\n      var element = r.element;\n      var reference = elementsById[r.id];\n      var property = getModdleDescriptor(element).propertiesByName[r.property];\n\n      if (!reference) {\n        context.addWarning({\n          message: 'unresolved reference <' + r.id + '>',\n          element: r.element,\n          property: r.property,\n          value: r.id\n        });\n      }\n\n      if (property.isMany) {\n        var collection = element.get(property.name),\n            idx = collection.indexOf(r);\n\n        // we replace an existing place holder (idx != -1) or\n        // append to the collection instead\n        if (idx === -1) {\n          idx = collection.length;\n        }\n\n        if (!reference) {\n          // remove unresolvable reference\n          collection.splice(idx, 1);\n        } else {\n          // add or update reference in collection\n          collection[idx] = reference;\n        }\n      } else {\n        element.set(property.name, reference);\n      }\n    }\n  }\n\n  function handleClose(tagName) {\n    stack.pop().handleEnd();\n  }\n\n  function handleOpen(node) {\n    var handler = stack.peek();\n\n    normalizeNamespaces(node, model);\n\n    try {\n      stack.push(handler.handleNode(node));\n    } catch (e) {\n\n      var line = this.line,\n          column = this.column;\n\n      var message =\n        'unparsable content <' + node.name + '> detected/n/t' +\n          'line: ' + line + '/n/t' +\n          'column: ' + column + '/n/t' +\n          'nested error: ' + e.message;\n\n      if (lax) {\n        context.addWarning({\n          message: message,\n          error: e\n        });\n\n        console.warn('could not parse node');\n        console.warn(e);\n\n        stack.push(new NoopHandler());\n      } else {\n        console.error('could not parse document');\n        console.error(e);\n\n        throw error(message);\n      }\n    }\n  }\n\n  function handleText(text) {\n    stack.peek().handleText(text);\n  }\n\n  parser.onopentag = handleOpen;\n  parser.oncdata = parser.ontext = handleText;\n  parser.onclosetag = handleClose;\n  parser.onend = resolveReferences;\n\n  // deferred parse XML to make loading really ascnchronous\n  // this ensures the execution environment (node or browser)\n  // is kept responsive and that certain optimization strategies\n  // can kick in\n  defer(function() {\n    var error;\n\n    try {\n      parser.write(xml).close();\n    } catch (e) {\n      error = e;\n    }\n\n    done(error, error ? undefined : rootHandler.element, context);\n  });\n};\n\nXMLReader.prototype.handler = function(name) {\n  return new ElementHandler(this.model, name);\n};\n\nmodule.exports = XMLReader;\nmodule.exports.ElementHandler = ElementHandler;","'use strict';\n\nvar map = require(305),\n    forEach = require(303),\n    isString = require(428),\n    filter = require(301),\n    assign = require(431);\n\nvar Types = require(465),\n    parseNameNs = require(462).parseName,\n    common = require(454),\n    nameToAlias = common.nameToAlias,\n    serializeAsType = common.serializeAsType,\n    serializeAsProperty = common.serializeAsProperty;\n\nvar XML_PREAMBLE = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>/n',\n    ESCAPE_CHARS = /(<|>|'|\"|&|/n/r|/n)/g,\n    DEFAULT_NS_MAP = common.DEFAULT_NS_MAP,\n    XSI_TYPE = common.XSI_TYPE;\n\n\nfunction nsName(ns) {\n  if (isString(ns)) {\n    return ns;\n  } else {\n    return (ns.prefix ? ns.prefix + ':' : '') + ns.localName;\n  }\n}\n\nfunction getNsAttrs(namespaces) {\n\n  function isUsed(ns) {\n    return namespaces.used[ns.uri];\n  }\n\n  function toAttr(ns) {\n    var name = 'xmlns' + (ns.prefix ? ':' + ns.prefix : '');\n    return { name: name, value: ns.uri };\n  }\n\n  var allNs = [].concat(namespaces.wellknown, namespaces.custom);\n\n  return map(filter(allNs, isUsed), toAttr);\n}\n\nfunction getElementNs(ns, descriptor) {\n  if (descriptor.isGeneric) {\n    return descriptor.name;\n  } else {\n    return assign({ localName: nameToAlias(descriptor.ns.localName, descriptor.$pkg) }, ns);\n  }\n}\n\nfunction getPropertyNs(ns, descriptor) {\n  return assign({ localName: descriptor.ns.localName }, ns);\n}\n\nfunction getSerializableProperties(element) {\n  var descriptor = element.$descriptor;\n\n  return filter(descriptor.properties, function(p) {\n    var name = p.name;\n\n    if (p.isVirtual) {\n      return false;\n    }\n\n    // do not serialize defaults\n    if (!element.hasOwnProperty(name)) {\n      return false;\n    }\n\n    var value = element[name];\n\n    // do not serialize default equals\n    if (value === p.default) {\n      return false;\n    }\n\n    // do not serialize null properties\n    if (value === null) {\n      return false;\n    }\n\n    return p.isMany ? value.length : true;\n  });\n}\n\nvar ESCAPE_MAP = {\n  '/n': '10',\n  '/n/r': '10',\n  '\"': '34',\n  '/'': '39',\n  '<': '60',\n  '>': '62',\n  '&': '38'\n};\n\n/**\n * Escape a string attribute to not contain any bad values (line breaks, '\"', ...)\n *\n * @param {String} str the string to escape\n * @return {String} the escaped string\n */\nfunction escapeAttr(str) {\n\n  // ensure we are handling strings here\n  str = isString(str) ? str : '' + str;\n\n  return str.replace(ESCAPE_CHARS, function(str) {\n    return '&#' + ESCAPE_MAP[str] + ';';\n  });\n}\n\nfunction filterAttributes(props) {\n  return filter(props, function(p) { return p.isAttr; });\n}\n\nfunction filterContained(props) {\n  return filter(props, function(p) { return !p.isAttr; });\n}\n\n\nfunction ReferenceSerializer(parent, ns) {\n  this.ns = ns;\n}\n\nReferenceSerializer.prototype.build = function(element) {\n  this.element = element;\n  return this;\n};\n\nReferenceSerializer.prototype.serializeTo = function(writer) {\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns) + '>' + this.element.id + '</' + nsName(this.ns) + '>')\n    .appendNewLine();\n};\n\nfunction BodySerializer() {}\n\nBodySerializer.prototype.serializeValue = BodySerializer.prototype.serializeTo = function(writer) {\n  var escape = this.escape;\n\n  if (escape) {\n    writer.append('<![CDATA[');\n  }\n\n  writer.append(this.value);\n\n  if (escape) {\n    writer.append(']]>');\n  }\n};\n\nBodySerializer.prototype.build = function(prop, value) {\n  this.value = value;\n\n  if (prop.type === 'String' && value.search(ESCAPE_CHARS) !== -1) {\n    this.escape = true;\n  }\n\n  return this;\n};\n\nfunction ValueSerializer(ns) {\n  this.ns = ns;\n}\n\nValueSerializer.prototype = new BodySerializer();\n\nValueSerializer.prototype.serializeTo = function(writer) {\n\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns) + '>');\n\n  this.serializeValue(writer);\n\n  writer\n    .append( '</' + nsName(this.ns) + '>')\n    .appendNewLine();\n};\n\nfunction ElementSerializer(parent, ns) {\n  this.body = [];\n  this.attrs = [];\n\n  this.parent = parent;\n  this.ns = ns;\n}\n\nElementSerializer.prototype.build = function(element) {\n  this.element = element;\n\n  var otherAttrs = this.parseNsAttributes(element);\n\n  if (!this.ns) {\n    this.ns = this.nsTagName(element.$descriptor);\n  }\n\n  if (element.$descriptor.isGeneric) {\n    this.parseGeneric(element);\n  } else {\n    var properties = getSerializableProperties(element);\n\n    this.parseAttributes(filterAttributes(properties));\n    this.parseContainments(filterContained(properties));\n\n    this.parseGenericAttributes(element, otherAttrs);\n  }\n\n  return this;\n};\n\nElementSerializer.prototype.nsTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getElementNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.nsPropertyTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getPropertyNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === this.ns.uri;\n};\n\n/**\n * Get the actual ns attribute name for the given element.\n *\n * @param {Object} element\n * @param {Boolean} [inherited=false]\n *\n * @return {Object} nsName\n */\nElementSerializer.prototype.nsAttributeName = function(element) {\n\n  var ns;\n\n  if (isString(element)) {\n    ns = parseNameNs(element);\n  } else {\n    ns = element.ns;\n  }\n\n  // return just local name for inherited attributes\n  if (element.inherited) {\n    return { localName: ns.localName };\n  }\n\n  // parse + log effective ns\n  var effectiveNs = this.logNamespaceUsed(ns);\n\n  // strip prefix if same namespace like parent\n  if (this.isLocalNs(effectiveNs)) {\n    return { localName: ns.localName };\n  } else {\n    return assign({ localName: ns.localName }, effectiveNs);\n  }\n};\n\nElementSerializer.prototype.parseGeneric = function(element) {\n\n  var self = this,\n      body = this.body,\n      attrs = this.attrs;\n\n  forEach(element, function(val, key) {\n\n    if (key === '$body') {\n      body.push(new BodySerializer().build({ type: 'String' }, val));\n    } else\n    if (key === '$children') {\n      forEach(val, function(child) {\n        body.push(new ElementSerializer(self).build(child));\n      });\n    } else\n    if (key.indexOf('$') !== 0) {\n      attrs.push({ name: key, value: escapeAttr(val) });\n    }\n  });\n};\n\n/**\n * Parse namespaces and return a list of left over generic attributes\n *\n * @param  {Object} element\n * @return {Array<Object>}\n */\nElementSerializer.prototype.parseNsAttributes = function(element) {\n  var self = this;\n\n  var genericAttrs = element.$attrs;\n\n  var model = element.$model;\n\n  var attributes = [];\n\n  // parse namespace attributes first\n  // and log them. push non namespace attributes to a list\n  // and process them later\n  forEach(genericAttrs, function(value, name) {\n    var nameNs = parseNameNs(name);\n\n    var ns;\n\n    // parse xmlns:foo=\"http://foo.bar\"\n    if (nameNs.prefix === 'xmlns') {\n      ns = { prefix: nameNs.localName, uri: value };\n    }\n\n    // parse xmlns=\"http://foo.bar\"\n    if (!nameNs.prefix && nameNs.localName === 'xmlns') {\n      ns = { uri: value };\n    }\n\n    if (ns) {\n      if (model.getPackage(value)) {\n        // register well known namespace\n        self.logNamespace(ns, true);\n      } else {\n        // log custom namespace directly as used\n        self.logNamespaceUsed(ns);\n      }\n    } else {\n      attributes.push({ name: name, value: value });\n    }\n  });\n\n  return attributes;\n};\n\nElementSerializer.prototype.parseGenericAttributes = function(element, attributes) {\n\n  var self = this;\n\n  forEach(attributes, function(attr) {\n\n    // do not serialize xsi:type attribute\n    // it is set manually based on the actual implementation type\n    if (attr.name === XSI_TYPE) {\n      return;\n    }\n\n    try {\n      self.addAttribute(self.nsAttributeName(attr.name), attr.value);\n    } catch (e) {\n      console.warn(\n        'missing namespace information for ',\n        attr.name, '=', attr.value, 'on', element,\n        e);\n    }\n  });\n};\n\nElementSerializer.prototype.parseContainments = function(properties) {\n\n  var self = this,\n      body = this.body,\n      element = this.element;\n\n  forEach(properties, function(p) {\n    var value = element.get(p.name),\n        isReference = p.isReference,\n        isMany = p.isMany;\n\n    var ns = self.nsPropertyTagName(p);\n\n    if (!isMany) {\n      value = [ value ];\n    }\n\n    if (p.isBody) {\n      body.push(new BodySerializer().build(p, value[0]));\n    } else\n    if (Types.isSimple(p.type)) {\n      forEach(value, function(v) {\n        body.push(new ValueSerializer(ns).build(p, v));\n      });\n    } else\n    if (isReference) {\n      forEach(value, function(v) {\n        body.push(new ReferenceSerializer(self, ns).build(v));\n      });\n    } else {\n      // allow serialization via type\n      // rather than element name\n      var asType = serializeAsType(p),\n          asProperty = serializeAsProperty(p);\n\n      forEach(value, function(v) {\n        var serializer;\n\n        if (asType) {\n          serializer = new TypeSerializer(self, ns);\n        } else\n        if (asProperty) {\n          serializer = new ElementSerializer(self, ns);\n        } else {\n          serializer = new ElementSerializer(self);\n        }\n\n        body.push(serializer.build(v));\n      });\n    }\n  });\n};\n\nElementSerializer.prototype.getNamespaces = function() {\n\n  var namespaces = this.namespaces,\n      parent = this.parent;\n\n  if (!namespaces) {\n    namespaces = this.namespaces = parent ? parent.getNamespaces() : {\n      prefixMap: {},\n      uriMap: {},\n      used: {},\n      wellknown: [],\n      custom: []\n    };\n  }\n\n  return namespaces;\n};\n\nElementSerializer.prototype.logNamespace = function(ns, wellknown) {\n  var namespaces = this.getNamespaces();\n\n  var nsUri = ns.uri;\n\n  var existing = namespaces.uriMap[nsUri];\n\n  if (!existing) {\n    namespaces.uriMap[nsUri] = ns;\n\n    if (wellknown) {\n      namespaces.wellknown.push(ns);\n    } else {\n      namespaces.custom.push(ns);\n    }\n  }\n\n  namespaces.prefixMap[ns.prefix] = nsUri;\n\n  return ns;\n};\n\nElementSerializer.prototype.logNamespaceUsed = function(ns) {\n  var element = this.element,\n      model = element.$model,\n      namespaces = this.getNamespaces();\n\n  // ns may be\n  //\n  //   * prefix only\n  //   * prefix:uri\n\n  var prefix = ns.prefix;\n\n  var wellknownUri = DEFAULT_NS_MAP[prefix] || model && (model.getPackage(prefix) || {}).uri;\n\n  var uri = ns.uri || namespaces.prefixMap[prefix] || wellknownUri;\n\n  if (!uri) {\n    throw new Error('no namespace uri given for prefix <' + ns.prefix + '>');\n  }\n\n  ns = namespaces.uriMap[uri];\n\n  if (!ns) {\n    ns = this.logNamespace({ prefix: prefix, uri: uri }, wellknownUri);\n  }\n\n  if (!namespaces.used[ns.uri]) {\n    namespaces.used[ns.uri] = ns;\n  }\n\n  return ns;\n};\n\nElementSerializer.prototype.parseAttributes = function(properties) {\n  var self = this,\n      element = this.element;\n\n  forEach(properties, function(p) {\n\n    var value = element.get(p.name);\n\n    if (p.isReference) {\n\n      if (!p.isMany) {\n        value = value.id;\n      }\n      else {\n        var values = [];\n        forEach(value, function(v) {\n          values.push(v.id);\n        });\n        // IDREFS is a whitespace-separated list of references.\n        value = values.join(' ');\n      }\n\n    }\n\n    self.addAttribute(self.nsAttributeName(p), value);\n  });\n};\n\nElementSerializer.prototype.addAttribute = function(name, value) {\n  var attrs = this.attrs;\n\n  if (isString(value)) {\n    value = escapeAttr(value);\n  }\n\n  attrs.push({ name: name, value: value });\n};\n\nElementSerializer.prototype.serializeAttributes = function(writer) {\n  var attrs = this.attrs,\n      root = !this.parent;\n\n  if (root) {\n    attrs = getNsAttrs(this.namespaces).concat(attrs);\n  }\n\n  forEach(attrs, function(a) {\n    writer\n      .append(' ')\n      .append(nsName(a.name)).append('=\"').append(a.value).append('\"');\n  });\n};\n\nElementSerializer.prototype.serializeTo = function(writer) {\n  var hasBody = this.body.length,\n      indent = !(this.body.length === 1 && this.body[0] instanceof BodySerializer);\n\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns));\n\n  this.serializeAttributes(writer);\n\n  writer.append(hasBody ? '>' : ' />');\n\n  if (hasBody) {\n\n    if (indent) {\n      writer\n        .appendNewLine()\n        .indent();\n    }\n\n    forEach(this.body, function(b) {\n      b.serializeTo(writer);\n    });\n\n    if (indent) {\n      writer\n        .unindent()\n        .appendIndent();\n    }\n\n    writer.append('</' + nsName(this.ns) + '>');\n  }\n\n  writer.appendNewLine();\n};\n\n/**\n * A serializer for types that handles serialization of data types\n */\nfunction TypeSerializer(parent, ns) {\n  ElementSerializer.call(this, parent, ns);\n}\n\nTypeSerializer.prototype = new ElementSerializer();\n\nTypeSerializer.prototype.build = function(element) {\n  var descriptor = element.$descriptor;\n\n  this.element = element;\n\n  this.typeNs = this.nsTagName(descriptor);\n\n  // add xsi:type attribute to represent the elements\n  // actual type\n\n  var typeNs = this.typeNs,\n      pkg = element.$model.getPackage(typeNs.uri),\n      typePrefix = (pkg.xml && pkg.xml.typePrefix) || '';\n\n  this.addAttribute(this.nsAttributeName(XSI_TYPE),\n    (typeNs.prefix ? typeNs.prefix + ':' : '') +\n    typePrefix + descriptor.ns.localName);\n\n  // do the usual stuff\n  return ElementSerializer.prototype.build.call(this, element);\n};\n\nTypeSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === this.typeNs.uri;\n};\n\nfunction SavingWriter() {\n  this.value = '';\n\n  this.write = function(str) {\n    this.value += str;\n  };\n}\n\nfunction FormatingWriter(out, format) {\n\n  var indent = [''];\n\n  this.append = function(str) {\n    out.write(str);\n\n    return this;\n  };\n\n  this.appendNewLine = function() {\n    if (format) {\n      out.write('/n');\n    }\n\n    return this;\n  };\n\n  this.appendIndent = function() {\n    if (format) {\n      out.write(indent.join('  '));\n    }\n\n    return this;\n  };\n\n  this.indent = function() {\n    indent.push('');\n    return this;\n  };\n\n  this.unindent = function() {\n    indent.pop();\n    return this;\n  };\n}\n\n/**\n * A writer for meta-model backed document trees\n *\n * @param {Object} options output options to pass into the writer\n */\nfunction XMLWriter(options) {\n\n  options = assign({ format: false, preamble: true }, options || {});\n\n  function toXML(tree, writer) {\n    var internalWriter = writer || new SavingWriter();\n    var formatingWriter = new FormatingWriter(internalWriter, options.format);\n\n    if (options.preamble) {\n      formatingWriter.append(XML_PREAMBLE);\n    }\n\n    new ElementSerializer().build(tree).serializeTo(formatingWriter);\n\n    if (!writer) {\n      return internalWriter.value;\n    }\n  }\n\n  return {\n    toXML: toXML\n  };\n}\n\nmodule.exports = XMLWriter;\n","module.exports = require(461);","'use strict';\n\nfunction Base() { }\n\nBase.prototype.get = function(name) {\n  return this.$model.properties.get(this, name);\n};\n\nBase.prototype.set = function(name, value) {\n  this.$model.properties.set(this, name, value);\n};\n\n\nmodule.exports = Base;","'use strict';\n\nvar pick = require(438),\n    assign = require(431),\n    forEach = require(303);\n\nvar parseNameNs = require(462).parseName;\n\n\nfunction DescriptorBuilder(nameNs) {\n  this.ns = nameNs;\n  this.name = nameNs.name;\n  this.allTypes = [];\n  this.properties = [];\n  this.propertiesByName = {};\n}\n\nmodule.exports = DescriptorBuilder;\n\n\nDescriptorBuilder.prototype.build = function() {\n  return pick(this, [\n    'ns',\n    'name',\n    'allTypes',\n    'properties',\n    'propertiesByName',\n    'bodyProperty',\n    'idProperty'\n  ]);\n};\n\n/**\n * Add property at given index.\n *\n * @param {Object} p\n * @param {Number} [idx]\n * @param {Boolean} [validate=true]\n */\nDescriptorBuilder.prototype.addProperty = function(p, idx, validate) {\n\n  if (typeof idx === 'boolean') {\n    validate = idx;\n    idx = undefined;\n  }\n\n  this.addNamedProperty(p, validate !== false);\n\n  var properties = this.properties;\n\n  if (idx !== undefined) {\n    properties.splice(idx, 0, p);\n  } else {\n    properties.push(p);\n  }\n};\n\n\nDescriptorBuilder.prototype.replaceProperty = function(oldProperty, newProperty, replace) {\n  var oldNameNs = oldProperty.ns;\n\n  var props = this.properties,\n      propertiesByName = this.propertiesByName,\n      rename = oldProperty.name !== newProperty.name;\n\n  if (oldProperty.isId) {\n    if (!newProperty.isId) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be id property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    this.setIdProperty(newProperty, false);\n  }\n\n  if (oldProperty.isBody) {\n\n    if (!newProperty.isBody) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be body property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    // TODO: Check compatibility\n    this.setBodyProperty(newProperty, false);\n  }\n\n  // validate existence and get location of old property\n  var idx = props.indexOf(oldProperty);\n  if (idx === -1) {\n    throw new Error('property <' + oldNameNs.name + '> not found in property list');\n  }\n\n  // remove old property\n  props.splice(idx, 1);\n\n  // replacing the named property is intentional\n  //\n  //  * validate only if this is a \"rename\" operation\n  //  * add at specific index unless we \"replace\"\n  //\n  this.addProperty(newProperty, replace ? undefined : idx, rename);\n\n  // make new property available under old name\n  propertiesByName[oldNameNs.name] = propertiesByName[oldNameNs.localName] = newProperty;\n};\n\n\nDescriptorBuilder.prototype.redefineProperty = function(p, targetPropertyName, replace) {\n\n  var nsPrefix = p.ns.prefix;\n  var parts = targetPropertyName.split('#');\n\n  var name = parseNameNs(parts[0], nsPrefix);\n  var attrName = parseNameNs(parts[1], name.prefix).name;\n\n  var redefinedProperty = this.propertiesByName[attrName];\n  if (!redefinedProperty) {\n    throw new Error('refined property <' + attrName + '> not found');\n  } else {\n    this.replaceProperty(redefinedProperty, p, replace);\n  }\n\n  delete p.redefines;\n};\n\nDescriptorBuilder.prototype.addNamedProperty = function(p, validate) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  if (validate) {\n    this.assertNotDefined(p, ns.name);\n    this.assertNotDefined(p, ns.localName);\n  }\n\n  propsByName[ns.name] = propsByName[ns.localName] = p;\n};\n\nDescriptorBuilder.prototype.removeNamedProperty = function(p) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  delete propsByName[ns.name];\n  delete propsByName[ns.localName];\n};\n\nDescriptorBuilder.prototype.setBodyProperty = function(p, validate) {\n\n  if (validate && this.bodyProperty) {\n    throw new Error(\n      'body property defined multiple times ' +\n      '(<' + this.bodyProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.bodyProperty = p;\n};\n\nDescriptorBuilder.prototype.setIdProperty = function(p, validate) {\n\n  if (validate && this.idProperty) {\n    throw new Error(\n      'id property defined multiple times ' +\n      '(<' + this.idProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.idProperty = p;\n};\n\nDescriptorBuilder.prototype.assertNotDefined = function(p, name) {\n  var propertyName = p.name,\n      definedProperty = this.propertiesByName[propertyName];\n\n  if (definedProperty) {\n    throw new Error(\n      'property <' + propertyName + '> already defined; ' +\n      'override of <' + definedProperty.definedBy.ns.name + '#' + definedProperty.ns.name + '> by ' +\n      '<' + p.definedBy.ns.name + '#' + p.ns.name + '> not allowed without redefines');\n  }\n};\n\nDescriptorBuilder.prototype.hasProperty = function(name) {\n  return this.propertiesByName[name];\n};\n\nDescriptorBuilder.prototype.addTrait = function(t, inherited) {\n\n  var allTypes = this.allTypes;\n\n  if (allTypes.indexOf(t) !== -1) {\n    return;\n  }\n\n  forEach(t.properties, function(p) {\n\n    // clone property to allow extensions\n    p = assign({}, p, {\n      name: p.ns.localName,\n      inherited: inherited\n    });\n\n    Object.defineProperty(p, 'definedBy', {\n      value: t\n    });\n\n    var replaces = p.replaces,\n        redefines = p.redefines;\n\n    // add replace/redefine support\n    if (replaces || redefines) {\n      this.redefineProperty(p, replaces || redefines, replaces);\n    } else {\n      if (p.isBody) {\n        this.setBodyProperty(p);\n      }\n      if (p.isId) {\n        this.setIdProperty(p);\n      }\n      this.addProperty(p);\n    }\n  }, this);\n\n  allTypes.push(t);\n};\n","'use strict';\n\nvar forEach = require(303);\n\nvar Base = require(458);\n\n\nfunction Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\nmodule.exports = Factory;\n\n\nFactory.prototype.createType = function(descriptor) {\n\n  var model = this.model;\n\n  var props = this.properties,\n      prototype = Object.create(Base.prototype);\n\n  // initialize default values\n  forEach(descriptor.properties, function(p) {\n    if (!p.isMany && p.default !== undefined) {\n      prototype[p.name] = p.default;\n    }\n  });\n\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n\n  var name = descriptor.ns.name;\n\n  /**\n   * The new type constructor\n   */\n  function ModdleElement(attrs) {\n    props.define(this, '$type', { value: name, enumerable: true });\n    props.define(this, '$attrs', { value: {} });\n    props.define(this, '$parent', { writable: true });\n\n    forEach(attrs, function(val, key) {\n      this.set(key, val);\n    }, this);\n  }\n\n  ModdleElement.prototype = prototype;\n\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType;\n\n  // static links\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n\n  return ModdleElement;\n};","'use strict';\n\nvar isString = require(428),\n    isObject = require(426),\n    forEach = require(303),\n    find = require(302);\n\n\nvar Factory = require(460),\n    Registry = require(464),\n    Properties = require(463);\n\nvar parseNameNs = require(462).parseName;\n\n\n//// Moddle implementation /////////////////////////////////////////////////\n\n/**\n * @class Moddle\n *\n * A model that can be used to create elements of a specific type.\n *\n * @example\n *\n * var Moddle = require('moddle');\n *\n * var pkg = {\n *   name: 'mypackage',\n *   prefix: 'my',\n *   types: [\n *     { name: 'Root' }\n *   ]\n * };\n *\n * var moddle = new Moddle([pkg]);\n *\n * @param {Array<Package>} packages the packages to contain\n */\nfunction Moddle(packages) {\n\n  this.properties = new Properties(this);\n\n  this.factory = new Factory(this, this.properties);\n  this.registry = new Registry(packages, this.properties);\n\n  this.typeCache = {};\n}\n\nmodule.exports = Moddle;\n\n\n/**\n * Create an instance of the specified type.\n *\n * @method Moddle#create\n *\n * @example\n *\n * var foo = moddle.create('my:Foo');\n * var bar = moddle.create('my:Bar', { id: 'BAR_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @param  {Object} attrs   a number of attributes to initialize the model instance with\n * @return {Object}         model instance\n */\nModdle.prototype.create = function(descriptor, attrs) {\n  var Type = this.getType(descriptor);\n\n  if (!Type) {\n    throw new Error('unknown type <' + descriptor + '>');\n  }\n\n  return new Type(attrs);\n};\n\n\n/**\n * Returns the type representing a given descriptor\n *\n * @method Moddle#getType\n *\n * @example\n *\n * var Foo = moddle.getType('my:Foo');\n * var foo = new Foo({ 'id' : 'FOO_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @return {Object}         the type representing the descriptor\n */\nModdle.prototype.getType = function(descriptor) {\n\n  var cache = this.typeCache;\n\n  var name = isString(descriptor) ? descriptor : descriptor.ns.name;\n\n  var type = cache[name];\n\n  if (!type) {\n    descriptor = this.registry.getEffectiveDescriptor(name);\n    type = cache[name] = this.factory.createType(descriptor);\n  }\n\n  return type;\n};\n\n\n/**\n * Creates an any-element type to be used within model instances.\n *\n * This can be used to create custom elements that lie outside the meta-model.\n * The created element contains all the meta-data required to serialize it\n * as part of meta-model elements.\n *\n * @method Moddle#createAny\n *\n * @example\n *\n * var foo = moddle.createAny('vendor:Foo', 'http://vendor', {\n *   value: 'bar'\n * });\n *\n * var container = moddle.create('my:Container', 'http://my', {\n *   any: [ foo ]\n * });\n *\n * // go ahead and serialize the stuff\n *\n *\n * @param  {String} name  the name of the element\n * @param  {String} nsUri the namespace uri of the element\n * @param  {Object} [properties] a map of properties to initialize the instance with\n * @return {Object} the any type instance\n */\nModdle.prototype.createAny = function(name, nsUri, properties) {\n\n  var nameNs = parseNameNs(name);\n\n  var element = {\n    $type: name\n  };\n\n  var descriptor = {\n    name: name,\n    isGeneric: true,\n    ns: {\n      prefix: nameNs.prefix,\n      localName: nameNs.localName,\n      uri: nsUri\n    }\n  };\n\n  this.properties.defineDescriptor(element, descriptor);\n  this.properties.defineModel(element, this);\n  this.properties.define(element, '$parent', { enumerable: false, writable: true });\n\n  forEach(properties, function(a, key) {\n    if (isObject(a) && a.value !== undefined) {\n      element[a.name] = a.value;\n    } else {\n      element[key] = a;\n    }\n  });\n\n  return element;\n};\n\n/**\n * Returns a registered package by uri or prefix\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackage = function(uriOrPrefix) {\n  return this.registry.getPackage(uriOrPrefix);\n};\n\n/**\n * Returns a snapshot of all known packages\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackages = function() {\n  return this.registry.getPackages();\n};\n\n/**\n * Returns the descriptor for an element\n */\nModdle.prototype.getElementDescriptor = function(element) {\n  return element.$descriptor;\n};\n\n/**\n * Returns true if the given descriptor or instance\n * represents the given type.\n *\n * May be applied to this, if element is omitted.\n */\nModdle.prototype.hasType = function(element, type) {\n  if (type === undefined) {\n    type = element;\n    element = this;\n  }\n\n  var descriptor = element.$model.getElementDescriptor(element);\n\n  return !!find(descriptor.allTypes, function(t) {\n    return t.name === type;\n  });\n};\n\n/**\n * Returns the descriptor of an elements named property\n */\nModdle.prototype.getPropertyDescriptor = function(element, property) {\n  return this.getElementDescriptor(element).propertiesByName[property];\n};\n\n/**\n * Returns a mapped type's descriptor\n */\nModdle.prototype.getTypeDescriptor = function(type) {\n  return this.registry.typeMap[type];\n};\n","'use strict';\n\n/**\n * Parses a namespaced attribute name of the form (ns:)localName to an object,\n * given a default prefix to assume in case no explicit namespace is given.\n *\n * @param {String} name\n * @param {String} [defaultPrefix] the default prefix to take, if none is present.\n *\n * @return {Object} the parsed name\n */\nmodule.exports.parseName = function(name, defaultPrefix) {\n  var parts = name.split(/:/),\n      localName, prefix;\n\n  // no prefix (i.e. only local name)\n  if (parts.length === 1) {\n    localName = name;\n    prefix = defaultPrefix;\n  } else\n  // prefix + local name\n  if (parts.length === 2) {\n    localName = parts[1];\n    prefix = parts[0];\n  } else {\n    throw new Error('expected <prefix:localName> or <localName>, got ' + name);\n  }\n\n  name = (prefix ? prefix + ':' : '') + localName;\n\n  return {\n    name: name,\n    prefix: prefix,\n    localName: localName\n  };\n};","'use strict';\n\n\n/**\n * A utility that gets and sets properties of model elements.\n *\n * @param {Model} model\n */\nfunction Properties(model) {\n  this.model = model;\n}\n\nmodule.exports = Properties;\n\n\n/**\n * Sets a named property on the target element.\n * If the value is undefined, the property gets deleted.\n *\n * @param {Object} target\n * @param {String} name\n * @param {Object} value\n */\nProperties.prototype.set = function(target, name, value) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  var propertyName = property && property.name;\n\n  if (isUndefined(value)) {\n    // unset the property, if the specified value is undefined;\n    // delete from $attrs (for extensions) or the target itself\n    if (property) {\n      delete target[propertyName];\n    } else {\n      delete target.$attrs[name];\n    }\n  } else {\n    // set the property, defining well defined properties on the fly\n    // or simply updating them in target.$attrs (for extensions)\n    if (property) {\n      if (propertyName in target) {\n        target[propertyName] = value;\n      } else {\n        defineProperty(target, property, value);\n      }\n    } else {\n      target.$attrs[name] = value;\n    }\n  }\n};\n\n/**\n * Returns the named property of the given element\n *\n * @param  {Object} target\n * @param  {String} name\n *\n * @return {Object}\n */\nProperties.prototype.get = function(target, name) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  if (!property) {\n    return target.$attrs[name];\n  }\n\n  var propertyName = property.name;\n\n  // check if access to collection property and lazily initialize it\n  if (!target[propertyName] && property.isMany) {\n    defineProperty(target, property, []);\n  }\n\n  return target[propertyName];\n};\n\n\n/**\n * Define a property on the target element\n *\n * @param  {Object} target\n * @param  {String} name\n * @param  {Object} options\n */\nProperties.prototype.define = function(target, name, options) {\n  Object.defineProperty(target, name, options);\n};\n\n\n/**\n * Define the descriptor for an element\n */\nProperties.prototype.defineDescriptor = function(target, descriptor) {\n  this.define(target, '$descriptor', { value: descriptor });\n};\n\n/**\n * Define the model for an element\n */\nProperties.prototype.defineModel = function(target, model) {\n  this.define(target, '$model', { value: model });\n};\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\nfunction defineProperty(target, property, value) {\n  Object.defineProperty(target, property.name, {\n    enumerable: !property.isReference,\n    writable: true,\n    value: value,\n    configurable: true\n  });\n}","'use strict';\n\nvar assign = require(431),\n    forEach = require(303);\n\nvar Types = require(465),\n    DescriptorBuilder = require(459);\n\nvar parseNameNs = require(462).parseName,\n    isBuiltInType = Types.isBuiltIn;\n\n\nfunction Registry(packages, properties) {\n  this.packageMap = {};\n  this.typeMap = {};\n\n  this.packages = [];\n\n  this.properties = properties;\n\n  forEach(packages, this.registerPackage, this);\n}\n\nmodule.exports = Registry;\n\n\nRegistry.prototype.getPackage = function(uriOrPrefix) {\n  return this.packageMap[uriOrPrefix];\n};\n\nRegistry.prototype.getPackages = function() {\n  return this.packages;\n};\n\n\nRegistry.prototype.registerPackage = function(pkg) {\n\n  // copy package\n  pkg = assign({}, pkg);\n\n  // register types\n  forEach(pkg.types, function(descriptor) {\n    this.registerType(descriptor, pkg);\n  }, this);\n\n  this.packageMap[pkg.uri] = this.packageMap[pkg.prefix] = pkg;\n  this.packages.push(pkg);\n};\n\n\n/**\n * Register a type from a specific package with us\n */\nRegistry.prototype.registerType = function(type, pkg) {\n\n  type = assign({}, type, {\n    superClass: (type.superClass || []).slice(),\n    extends: (type.extends || []).slice(),\n    properties: (type.properties || []).slice(),\n    meta: assign(({}, type.meta || {}))\n  });\n\n  var ns = parseNameNs(type.name, pkg.prefix),\n      name = ns.name,\n      propertiesByName = {};\n\n  // parse properties\n  forEach(type.properties, function(p) {\n\n    // namespace property names\n    var propertyNs = parseNameNs(p.name, ns.prefix),\n        propertyName = propertyNs.name;\n\n    // namespace property types\n    if (!isBuiltInType(p.type)) {\n      p.type = parseNameNs(p.type, propertyNs.prefix).name;\n    }\n\n    assign(p, {\n      ns: propertyNs,\n      name: propertyName\n    });\n\n    propertiesByName[propertyName] = p;\n  });\n\n  // update ns + name\n  assign(type, {\n    ns: ns,\n    name: name,\n    propertiesByName: propertiesByName\n  });\n\n  forEach(type.extends, function(extendsName) {\n    var extended = this.typeMap[extendsName];\n\n    extended.traits = extended.traits || [];\n    extended.traits.push(name);\n  }, this);\n\n  // link to package\n  this.definePackage(type, pkg);\n\n  // register\n  this.typeMap[name] = type;\n};\n\n\n/**\n * Traverse the type hierarchy from bottom to top,\n * calling iterator with (type, inherited) for all elements in\n * the inheritance chain.\n *\n * @param {Object} nsName\n * @param {Function} iterator\n * @param {Boolean} [trait=false]\n */\nRegistry.prototype.mapTypes = function(nsName, iterator, trait) {\n\n  var type = isBuiltInType(nsName.name) ? { name: nsName.name } : this.typeMap[nsName.name];\n\n  var self = this;\n\n  /**\n   * Traverse the selected trait.\n   *\n   * @param {String} cls\n   */\n  function traverseTrait(cls) {\n    return traverseSuper(cls, true);\n  }\n\n  /**\n   * Traverse the selected super type or trait\n   *\n   * @param {String} cls\n   * @param {Boolean} [trait=false]\n   */\n  function traverseSuper(cls, trait) {\n    var parentNs = parseNameNs(cls, isBuiltInType(cls) ? '' : nsName.prefix);\n    self.mapTypes(parentNs, iterator, trait);\n  }\n\n  if (!type) {\n    throw new Error('unknown type <' + nsName.name + '>');\n  }\n\n  forEach(type.superClass, trait ? traverseTrait : traverseSuper);\n\n  // call iterator with (type, inherited=!trait)\n  iterator(type, !trait);\n\n  forEach(type.traits, traverseTrait);\n};\n\n\n/**\n * Returns the effective descriptor for a type.\n *\n * @param  {String} type the namespaced name (ns:localName) of the type\n *\n * @return {Descriptor} the resulting effective descriptor\n */\nRegistry.prototype.getEffectiveDescriptor = function(name) {\n\n  var nsName = parseNameNs(name);\n\n  var builder = new DescriptorBuilder(nsName);\n\n  this.mapTypes(nsName, function(type, inherited) {\n    builder.addTrait(type, inherited);\n  });\n\n  var descriptor = builder.build();\n\n  // define package link\n  this.definePackage(descriptor, descriptor.allTypes[descriptor.allTypes.length - 1].$pkg);\n\n  return descriptor;\n};\n\n\nRegistry.prototype.definePackage = function(target, pkg) {\n  this.properties.define(target, '$pkg', { value: pkg });\n};\n","'use strict';\n\n/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n\n/**\n * Converters for built in types from string representations\n */\nvar TYPE_CONVERTERS = {\n  String: function(s) { return s; },\n  Boolean: function(s) { return s === 'true'; },\n  Integer: function(s) { return parseInt(s, 10); },\n  Real: function(s) { return parseFloat(s, 10); }\n};\n\n/**\n * Convert a type to its real representation\n */\nmodule.exports.coerceType = function(type, value) {\n\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n};\n\n/**\n * Return whether the given type is built-in\n */\nmodule.exports.isBuiltIn = function(type) {\n  return !!BUILTINS[type];\n};\n\n/**\n * Return whether the given type is simple\n */\nmodule.exports.isSimple = function(type) {\n  return !!TYPE_CONVERTERS[type];\n};","module.exports = require(468);\n\nmodule.exports.Collection = require(467);","'use strict';\n\n/**\n * An empty collection stub. Use {@link RefsCollection.extend} to extend a\n * collection with ref semantics.\n *\n * @class RefsCollection\n */\n\n/**\n * Extends a collection with {@link Refs} aware methods\n *\n * @memberof RefsCollection\n * @static\n *\n * @param  {Array<Object>} collection\n * @param  {Refs} refs instance\n * @param  {Object} property represented by the collection\n * @param  {Object} target object the collection is attached to\n *\n * @return {RefsCollection<Object>} the extended array\n */\nfunction extend(collection, refs, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  /**\n   * Removes the given element from the array and returns it.\n   *\n   * @method RefsCollection#remove\n   *\n   * @param {Object} element the element to remove\n   */\n  Object.defineProperty(collection, 'remove', {\n    value: function(element) {\n      var idx = this.indexOf(element);\n      if (idx !== -1) {\n        this.splice(idx, 1);\n\n        // unset inverse\n        refs.unset(element, inverseProperty, target);\n      }\n\n      return element;\n    }\n  });\n\n  /**\n   * Returns true if the collection contains the given element\n   *\n   * @method RefsCollection#contains\n   *\n   * @param {Object} element the element to check for\n   */\n  Object.defineProperty(collection, 'contains', {\n    value: function(element) {\n      return this.indexOf(element) !== -1;\n    }\n  });\n\n  /**\n   * Adds an element to the array, unless it exists already (set semantics).\n   *\n   * @method RefsCollection#add\n   *\n   * @param {Object} element the element to add\n   */\n  Object.defineProperty(collection, 'add', {\n    value: function(element) {\n\n      if (!this.contains(element)) {\n        this.push(element);\n\n        // set inverse\n        refs.set(element, inverseProperty, target);\n      }\n    }\n  });\n\n  // a simple marker, identifying this element\n  // as being a refs collection\n  Object.defineProperty(collection, '__refs_collection', {\n    value: true\n  });\n\n  return collection;\n}\n\n\nfunction isExtended(collection) {\n  return collection.__refs_collection === true;\n}\n\nmodule.exports.extend = extend;\n\nmodule.exports.isExtended = isExtended;","'use strict';\n\nvar Collection = require(467);\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: Collection.extend(target[property.name] || [], ref, property, target)\n  });\n}\n\n\nfunction defineProperty(ref, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  var _value = target[property.name];\n\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n\n    get: function() {\n      return _value;\n    },\n\n    set: function(value) {\n\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function(target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function(target, property) {\n\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function(target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */","// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n  parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.trackPosition = parser.opt.position !== false\n  if (parser.trackPosition) {\n    parser.position = parser.line = parser.column = 0\n  }\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nfunction flushBuffers (parser) {\n  closeText(parser)\n  if (parser.cdata !== \"\") {\n    emitNode(parser, \"oncdata\", parser.cdata)\n    parser.cdata = \"\"\n  }\n  if (parser.script !== \"\") {\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , flush: function () { flushBuffers(this) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(this)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  this._decoder = null;\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n    if (!this._decoder) {\n      var SD = require('string_decoder').StringDecoder\n      this._decoder = new SD('utf8')\n    }\n    data = this._decoder.write(data);\n  }\n\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this.write(chunk)\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"/r/n/t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , quote = \"'/\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\n\n// http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n// This implementation works on strings, a single character at a time\n// as such, it cannot ever support astral-plane characters (10000-EFFFF)\n// without a significant breaking change to either this  parser, or the\n// JavaScript language.  Implementation of an emoji-capable xml parser\n// is left as an exercise for the reader.\nvar nameStart = /[:_A-Za-z/u00C0-/u00D6/u00D8-/u00F6/u00F8-/u02FF/u0370-/u037D/u037F-/u1FFF/u200C-/u200D/u2070-/u218F/u2C00-/u2FEF/u3001-/uD7FF/uF900-/uFDCF/uFDF0-/uFFFD]/\n\nvar nameBody = /[:_A-Za-z/u00C0-/u00D6/u00D8-/u00F6/u00F8-/u02FF/u0370-/u037D/u037F-/u1FFF/u200C-/u200D/u2070-/u218F/u2C00-/u2FEF/u3001-/uD7FF/uF900-/uFDCF/uFDF0-/uFFFD/u00B7/u0300-/u036F/u203F-/u2040/./d-]/\n\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction isRegExp (c) {\n  return Object.prototype.toString.call(c) === '[object RegExp]'\n}\n\nfunction is (charclass, c) {\n  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !is(charclass, c)\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_CLOSED       : S++ // <a foo=\"bar\"\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"amp\" : \"&\"\n, \"gt\" : \">\"\n, \"lt\" : \"<\"\n, \"quot\" : \"/\"\"\n, \"apos\" : \"'\"\n, \"AElig\" : 198\n, \"Aacute\" : 193\n, \"Acirc\" : 194\n, \"Agrave\" : 192\n, \"Aring\" : 197\n, \"Atilde\" : 195\n, \"Auml\" : 196\n, \"Ccedil\" : 199\n, \"ETH\" : 208\n, \"Eacute\" : 201\n, \"Ecirc\" : 202\n, \"Egrave\" : 200\n, \"Euml\" : 203\n, \"Iacute\" : 205\n, \"Icirc\" : 206\n, \"Igrave\" : 204\n, \"Iuml\" : 207\n, \"Ntilde\" : 209\n, \"Oacute\" : 211\n, \"Ocirc\" : 212\n, \"Ograve\" : 210\n, \"Oslash\" : 216\n, \"Otilde\" : 213\n, \"Ouml\" : 214\n, \"THORN\" : 222\n, \"Uacute\" : 218\n, \"Ucirc\" : 219\n, \"Ugrave\" : 217\n, \"Uuml\" : 220\n, \"Yacute\" : 221\n, \"aacute\" : 225\n, \"acirc\" : 226\n, \"aelig\" : 230\n, \"agrave\" : 224\n, \"aring\" : 229\n, \"atilde\" : 227\n, \"auml\" : 228\n, \"ccedil\" : 231\n, \"eacute\" : 233\n, \"ecirc\" : 234\n, \"egrave\" : 232\n, \"eth\" : 240\n, \"euml\" : 235\n, \"iacute\" : 237\n, \"icirc\" : 238\n, \"igrave\" : 236\n, \"iuml\" : 239\n, \"ntilde\" : 241\n, \"oacute\" : 243\n, \"ocirc\" : 244\n, \"ograve\" : 242\n, \"oslash\" : 248\n, \"otilde\" : 245\n, \"ouml\" : 246\n, \"szlig\" : 223\n, \"thorn\" : 254\n, \"uacute\" : 250\n, \"ucirc\" : 251\n, \"ugrave\" : 249\n, \"uuml\" : 252\n, \"yacute\" : 253\n, \"yuml\" : 255\n, \"copy\" : 169\n, \"reg\" : 174\n, \"nbsp\" : 160\n, \"iexcl\" : 161\n, \"cent\" : 162\n, \"pound\" : 163\n, \"curren\" : 164\n, \"yen\" : 165\n, \"brvbar\" : 166\n, \"sect\" : 167\n, \"uml\" : 168\n, \"ordf\" : 170\n, \"laquo\" : 171\n, \"not\" : 172\n, \"shy\" : 173\n, \"macr\" : 175\n, \"deg\" : 176\n, \"plusmn\" : 177\n, \"sup1\" : 185\n, \"sup2\" : 178\n, \"sup3\" : 179\n, \"acute\" : 180\n, \"micro\" : 181\n, \"para\" : 182\n, \"middot\" : 183\n, \"cedil\" : 184\n, \"ordm\" : 186\n, \"raquo\" : 187\n, \"frac14\" : 188\n, \"frac12\" : 189\n, \"frac34\" : 190\n, \"iquest\" : 191\n, \"times\" : 215\n, \"divide\" : 247\n, \"OElig\" : 338\n, \"oelig\" : 339\n, \"Scaron\" : 352\n, \"scaron\" : 353\n, \"Yuml\" : 376\n, \"fnof\" : 402\n, \"circ\" : 710\n, \"tilde\" : 732\n, \"Alpha\" : 913\n, \"Beta\" : 914\n, \"Gamma\" : 915\n, \"Delta\" : 916\n, \"Epsilon\" : 917\n, \"Zeta\" : 918\n, \"Eta\" : 919\n, \"Theta\" : 920\n, \"Iota\" : 921\n, \"Kappa\" : 922\n, \"Lambda\" : 923\n, \"Mu\" : 924\n, \"Nu\" : 925\n, \"Xi\" : 926\n, \"Omicron\" : 927\n, \"Pi\" : 928\n, \"Rho\" : 929\n, \"Sigma\" : 931\n, \"Tau\" : 932\n, \"Upsilon\" : 933\n, \"Phi\" : 934\n, \"Chi\" : 935\n, \"Psi\" : 936\n, \"Omega\" : 937\n, \"alpha\" : 945\n, \"beta\" : 946\n, \"gamma\" : 947\n, \"delta\" : 948\n, \"epsilon\" : 949\n, \"zeta\" : 950\n, \"eta\" : 951\n, \"theta\" : 952\n, \"iota\" : 953\n, \"kappa\" : 954\n, \"lambda\" : 955\n, \"mu\" : 956\n, \"nu\" : 957\n, \"xi\" : 958\n, \"omicron\" : 959\n, \"pi\" : 960\n, \"rho\" : 961\n, \"sigmaf\" : 962\n, \"sigma\" : 963\n, \"tau\" : 964\n, \"upsilon\" : 965\n, \"phi\" : 966\n, \"chi\" : 967\n, \"psi\" : 968\n, \"omega\" : 969\n, \"thetasym\" : 977\n, \"upsih\" : 978\n, \"piv\" : 982\n, \"ensp\" : 8194\n, \"emsp\" : 8195\n, \"thinsp\" : 8201\n, \"zwnj\" : 8204\n, \"zwj\" : 8205\n, \"lrm\" : 8206\n, \"rlm\" : 8207\n, \"ndash\" : 8211\n, \"mdash\" : 8212\n, \"lsquo\" : 8216\n, \"rsquo\" : 8217\n, \"sbquo\" : 8218\n, \"ldquo\" : 8220\n, \"rdquo\" : 8221\n, \"bdquo\" : 8222\n, \"dagger\" : 8224\n, \"Dagger\" : 8225\n, \"bull\" : 8226\n, \"hellip\" : 8230\n, \"permil\" : 8240\n, \"prime\" : 8242\n, \"Prime\" : 8243\n, \"lsaquo\" : 8249\n, \"rsaquo\" : 8250\n, \"oline\" : 8254\n, \"frasl\" : 8260\n, \"euro\" : 8364\n, \"image\" : 8465\n, \"weierp\" : 8472\n, \"real\" : 8476\n, \"trade\" : 8482\n, \"alefsym\" : 8501\n, \"larr\" : 8592\n, \"uarr\" : 8593\n, \"rarr\" : 8594\n, \"darr\" : 8595\n, \"harr\" : 8596\n, \"crarr\" : 8629\n, \"lArr\" : 8656\n, \"uArr\" : 8657\n, \"rArr\" : 8658\n, \"dArr\" : 8659\n, \"hArr\" : 8660\n, \"forall\" : 8704\n, \"part\" : 8706\n, \"exist\" : 8707\n, \"empty\" : 8709\n, \"nabla\" : 8711\n, \"isin\" : 8712\n, \"notin\" : 8713\n, \"ni\" : 8715\n, \"prod\" : 8719\n, \"sum\" : 8721\n, \"minus\" : 8722\n, \"lowast\" : 8727\n, \"radic\" : 8730\n, \"prop\" : 8733\n, \"infin\" : 8734\n, \"ang\" : 8736\n, \"and\" : 8743\n, \"or\" : 8744\n, \"cap\" : 8745\n, \"cup\" : 8746\n, \"int\" : 8747\n, \"there4\" : 8756\n, \"sim\" : 8764\n, \"cong\" : 8773\n, \"asymp\" : 8776\n, \"ne\" : 8800\n, \"equiv\" : 8801\n, \"le\" : 8804\n, \"ge\" : 8805\n, \"sub\" : 8834\n, \"sup\" : 8835\n, \"nsub\" : 8836\n, \"sube\" : 8838\n, \"supe\" : 8839\n, \"oplus\" : 8853\n, \"otimes\" : 8855\n, \"perp\" : 8869\n, \"sdot\" : 8901\n, \"lceil\" : 8968\n, \"rceil\" : 8969\n, \"lfloor\" : 8970\n, \"rfloor\" : 8971\n, \"lang\" : 9001\n, \"rang\" : 9002\n, \"loz\" : 9674\n, \"spades\" : 9824\n, \"clubs\" : 9827\n, \"hearts\" : 9829\n, \"diams\" : 9830\n}\n\nObject.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n})\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(//s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  if (parser.trackPosition) {\n    er += \"/nLine: \"+parser.line+\n          \"/nColumn: \"+parser.column+\n          \"/nChar: \"+parser.c\n  }\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (!parser.closedRoot) strictFail(parser, \"Unclosed root tag\")\n  if ((parser.state !== S.BEGIN) && (parser.state !== S.TEXT)) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (typeof parser !== 'object' || !(parser instanceof SAXParser))\n    throw new Error('bad call to strictFail');\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name, attribute) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (attribute && name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()\n\n  if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n    return parser.attribName = parser.attribValue = \"\"\n  }\n\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName, true)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"/n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"/n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || \"\"\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n      tag.uri = qn.prefix\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    // Note: do not apply default ns to attributes:\n    //   http://www.w3.org/TR/REC-xml-names/#defaulting\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name, true)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = prefix == \"\" ? \"\" : (tag.ns[prefix] || \"\")\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  parser.tag.isSelfClosing = !!selfClosing\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n\n  if (parser.script) {\n    if (parser.tagName !== \"script\") {\n      parser.script += \"</\" + parser.tagName + \">\"\n      parser.tagName = \"\"\n      parser.state = S.SCRIPT\n      return\n    }\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.looseCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity\n    , entityLC = entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity])\n    return parser.ENTITIES[entity]\n  if (parser.ENTITIES[entityLC])\n    return parser.ENTITIES[entityLC]\n  entity = entityLC\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n\n  return String.fromCodePoint(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    if (parser.trackPosition) {\n      parser.position ++\n      if (c === \"/n\") {\n        parser.line ++\n        parser.column = 0\n      } else parser.column ++\n    }\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c && parser.trackPosition) {\n              parser.position ++\n              if (c === \"/n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(parser, \"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          // if there was some whitespace, then add that in.\n          if (parser.startTagPosition + 1 < parser.position) {\n            var pad = parser.position - parser.startTagPosition\n            c = new Array(pad).join(\" \") + c\n          }\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (c === \">\") {\n          strictFail(parser, \"Attribute without value\")\n          parser.attribValue = parser.attribName\n          attrib(parser)\n          openTag(parser)\n        }\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB_VALUE_CLOSED\n      continue\n\n      case S.ATTRIB_VALUE_CLOSED:\n        if (is(whitespace, c)) {\n          parser.state = S.ATTRIB\n        } else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          strictFail(parser, \"No whitespace between attributes\")\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) {\n            if (parser.script) {\n              parser.script += \"</\" + c\n              parser.state = S.SCRIPT\n            } else {\n              strictFail(parser, \"Invalid tagname in closing tag.\")\n            }\n          } else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else if (parser.script) {\n          parser.script += \"</\" + parser.tagName\n          parser.tagName = \"\"\n          parser.state = S.SCRIPT\n        } else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(parser, \"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(parser, \"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\nif (!String.fromCodePoint) {\n        (function() {\n                var stringFromCharCode = String.fromCharCode;\n                var floor = Math.floor;\n                var fromCodePoint = function() {\n                        var MAX_SIZE = 0x4000;\n                        var codeUnits = [];\n                        var highSurrogate;\n                        var lowSurrogate;\n                        var index = -1;\n                        var length = arguments.length;\n                        if (!length) {\n                                return '';\n                        }\n                        var result = '';\n                        while (++index < length) {\n                                var codePoint = Number(arguments[index]);\n                                if (\n                                        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                                        codePoint < 0 || // not a valid Unicode code point\n                                        codePoint > 0x10FFFF || // not a valid Unicode code point\n                                        floor(codePoint) != codePoint // not an integer\n                                ) {\n                                        throw RangeError('Invalid code point: ' + codePoint);\n                                }\n                                if (codePoint <= 0xFFFF) { // BMP code point\n                                        codeUnits.push(codePoint);\n                                } else { // Astral code point; split in surrogate halves\n                                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                                        codePoint -= 0x10000;\n                                        highSurrogate = (codePoint >> 10) + 0xD800;\n                                        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n                                        codeUnits.push(highSurrogate, lowSurrogate);\n                                }\n                                if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n                                        result += stringFromCharCode.apply(null, codeUnits);\n                                        codeUnits.length = 0;\n                                }\n                        }\n                        return result;\n                };\n                if (Object.defineProperty) {\n                        Object.defineProperty(String, 'fromCodePoint', {\n                                'value': fromCodePoint,\n                                'configurable': true,\n                                'writable': true\n                        });\n                } else {\n                        String.fromCodePoint = fromCodePoint;\n                }\n        }());\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports);\n","/**\n * Tiny stack for browser or server\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2014 Jason Mulligan\n * @license BSD-3 <https://raw.github.com/avoidwork/tiny-stack/master/LICENSE>\n * @link http://avoidwork.github.io/tiny-stack\n * @module tiny-stack\n * @version 0.1.0\n */\n\n( function ( global ) {\n\n\"use strict\";\n\n/**\n * TinyStack\n *\n * @constructor\n */\nfunction TinyStack () {\n\tthis.data = [null];\n\tthis.top  = 0;\n}\n\n/**\n * Clears the stack\n *\n * @method clear\n * @memberOf TinyStack\n * @return {Object} {@link TinyStack}\n */\nTinyStack.prototype.clear = function clear () {\n\tthis.data = [null];\n\tthis.top  = 0;\n\n\treturn this;\n};\n\n/**\n * Gets the size of the stack\n *\n * @method length\n * @memberOf TinyStack\n * @return {Number} Size of stack\n */\nTinyStack.prototype.length = function length () {\n\treturn this.top;\n};\n\n/**\n * Gets the item at the top of the stack\n *\n * @method peek\n * @memberOf TinyStack\n * @return {Mixed} Item at the top of the stack\n */\nTinyStack.prototype.peek = function peek () {\n\treturn this.data[this.top];\n};\n\n/**\n * Gets & removes the item at the top of the stack\n *\n * @method pop\n * @memberOf TinyStack\n * @return {Mixed} Item at the top of the stack\n */\nTinyStack.prototype.pop = function pop () {\n\tif ( this.top > 0 ) {\n\t\tthis.top--;\n\n\t\treturn this.data.pop();\n\t}\n\telse {\n\t\treturn undefined;\n\t}\n};\n\n/**\n * Pushes an item onto the stack\n *\n * @method push\n * @memberOf TinyStack\n * @return {Object} {@link TinyStack}\n */\nTinyStack.prototype.push = function push ( arg ) {\n\tthis.data[++this.top] = arg;\n\n\treturn this;\n};\n\n/**\n * TinyStack factory\n *\n * @method factory\n * @return {Object} {@link TinyStack}\n */\nfunction factory () {\n\treturn new TinyStack();\n}\n\n// Node, AMD & window supported\nif ( typeof exports != \"undefined\" ) {\n\tmodule.exports = factory;\n}\nelse if ( typeof define == \"function\" ) {\n\tdefine( function () {\n\t\treturn factory;\n\t} );\n}\nelse {\n\tglobal.stack = factory;\n}\n} )( this );\n","/**\n * append utility\n */\n\nmodule.exports = append;\n\nvar appendTo = require(472);\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(element, node) {\n  appendTo(node, element);\n  return element;\n}","/**\n * appendTo utility\n */\nmodule.exports = appendTo;\n\nvar ensureImported = require(482);\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  target.appendChild(ensureImported(element, target));\n  return element;\n}","/**\n * attribute accessor utility\n */\n\nmodule.exports = attr;\n\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n","/**\r\n * Clear utility\r\n */\r\nmodule.exports = classes;\r\n\r\nvar index = function(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\nvar re = //s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^/s+|/s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\r\n","/**\n * Clear utility\n */\n\nmodule.exports = clear;\n\n\nvar remove = require(480);\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}","module.exports = clone;\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}","/**\n * Create utility for SVG elements\n */\n\nmodule.exports = create;\n\n\nvar attr = require(473);\nvar parse = require(484);\nvar ns = require(483);\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}","/**\n * Geometry helpers\n */\n\nmodule.exports = { createPoint: createPoint, createMatrix: createMatrix, createTransform: createTransform };\n\n\nvar create = require(477);\n\n// fake node used to instantiate svg geometry elements\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 6:\n    a = {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    };\n    break;\n  }\n\n  return extend(matrix, a);\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}","/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\nmodule.exports = innerSVG;\n\n\nvar clear = require(475);\nvar appendTo = require(472);\nvar parse = require(484);\nvar serialize = require(485);\n\n\nfunction set(element, svg) {\n\n  var node,\n      documentElement = parse(svg).documentElement;\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  // import + append each node\n  node = documentElement.firstChild;\n\n  while (node) {\n    appendTo(node, element);\n    node = node.nextSibling;\n  }\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}","module.exports = remove;\n\nfunction remove(element) {\n  element.parentNode.removeChild(element);\n  return element;\n}","/**\n * transform accessor utility\n */\n\nmodule.exports = transform;\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  } else {\n    return transform;\n  }\n}\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n\n  transformList.consolidate();\n}\n\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (arguments.length === 1) {\n    return transformList.consolidate();\n  } else {\n    if (transforms.length) {\n      setTransforms(transformList, transforms);\n    } else {\n      transformList.initialize(wrapMatrix(transformList, transforms));\n    }\n  }\n}","module.exports = ensureImported;\n\nfunction ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}","var ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = ns;","/**\n * DOM parsing utility\n */\n\nmodule.exports = parse;\n\n\nvar ns = require(483);\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n  }\n\n  return parseDocument(svg);\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}","/**\n * Serialization util\n */\n\nmodule.exports = serialize;\n\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([/n/r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '/''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}"]}